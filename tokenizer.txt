BARIX BCL Tokenizer, V1.5, 2015/02/22 19:05:12

Preprocessor: Start

Preprocessor: First pass for collecting code by #include
- Source file is included in target BAS file: <./BCL/main.bcl>
- Source file is included in target BAS file: <./BCL/define.bcl>
- Source file is included in target BAS file: <./BCL/read_app_setup.bcl>
- Source file is included in target BAS file: <./BCL/udpreceive.bcl>
- Source file is included in target BAS file: <./BCL/udpreceive2.bcl>
- Source file is included in target BAS file: <./BCL/remsetup145.bcl>
- Source file is included in target BAS file: <./BCL/m_udpsend.bcl>
- Source file is included in target BAS file: <./BCL/m_udpsend2.bcl>
- Source file is included in target BAS file: <./BCL/timed_events.bcl>
- Source file is included in target BAS file: <./BCL/ai_330.bcl>
- Source file is included in target BAS file: <./BCL/io12modbus.bcl>
- Source file is included in target BAS file: <./BCL/io12conf.bcl>
- Source file is included in target BAS file: <./BCL/bit2B_f.bcl>
- Source file is included in target BAS file: <./BCL/chd_tegu.bcl>
- Source file is included in target BAS file: <./BCL/crontabreset.bcl>
- Source file is included in target BAS file: <./BCL/di_event.bcl>
- Source file is included in target BAS file: <./BCL/getmonvalue.bcl>
- Source file is included in target BAS file: <./BCL/thermo.bcl>
- Source file is included in target BAS file: <./BCL/appmain.bcl>

Preprocessor: Second pass for replacement of macros by #define
- SYSTIME --> _TMR_(0) 
  - Macro SYSTIME in pos [25-31] -> 		if and(mbsta(mba)<>0, SYSTIME>mbts(mba)+1000) then 
  <- 		if and(mbsta(mba)<>0, SYSTIME>mbts(mba)+1000) then 
  -> 		if and(mbsta(mba)<>0, _TMR_(0) >mbts(mba)+1000) then 
  - Macro SYSTIME in pos [96-102] -> 		' syslog "sub 1000: got "+str$(mlen)+" bytes before crc from mba "+str$(mba)+" (delay "+str$(SYSTIME-MBTS)+" ms from send)",4
  <- 		' syslog "sub 1000: got "+str$(mlen)+" bytes before crc from mba "+str$(mba)+" (delay "+str$(SYSTIME-MBTS)+" ms from send)",4
  -> 		' syslog "sub 1000: got "+str$(mlen)+" bytes before crc from mba "+str$(mba)+" (delay "+str$(_TMR_(0) -MBTS)+" ms from send)",4
  - Macro SYSTIME in pos [13-19] ->     mbts(0)=SYSTIME ' store send timestamp - aga vastus edu nyyd iga mba jaoks eraldi edu ts! 01.01.11
  <-     mbts(0)=SYSTIME ' store send timestamp - aga vastus edu nyyd iga mba jaoks eraldi edu ts! 01.01.11
  ->     mbts(0)=_TMR_(0)  ' store send timestamp - aga vastus edu nyyd iga mba jaoks eraldi edu ts! 01.01.11
  - Macro SYSTIME in pos [9-15] ->      if SYSTIME < MBTS(0) + 1000 then delay 10:goto 1702   ' no timeout yet
  <-      if SYSTIME < MBTS(0) + 1000 then delay 10:goto 1702   ' no timeout yet
  ->      if _TMR_(0)  < MBTS(0) + 1000 then delay 10:goto 1702   ' no timeout yet
  - Macro SYSTIME in pos [36-42] ->             mbsta(mba)=0:mbts(mba)=SYSTIME 'edu korral ts meelde
  <-             mbsta(mba)=0:mbts(mba)=SYSTIME 'edu korral ts meelde
  ->             mbsta(mba)=0:mbts(mba)=_TMR_(0)  'edu korral ts meelde
- SecondTS --> ts(9)  
  - Macro SecondTS in pos [7-14] ->   'if SecondTS>0 then ' varu gw peal 'siin vorrelda B12... ja SecondGW vaartusi! loe ka system setup sisse osaliselt!
  <-   'if SecondTS>0 then ' varu gw peal 'siin vorrelda B12... ja SecondGW vaartusi! loe ka system setup sisse osaliselt!
  ->   'if ts(9)  >0 then ' varu gw peal 'siin vorrelda B12... ja SecondGW vaartusi! loe ka system setup sisse osaliselt!
  - Macro SecondTS in pos [12-19] ->         if SecondTS = 0 then SecondTS=up(0) ' siit edasi kasvab 10 min kaupa kuni pohiside taastub
  <-         if SecondTS = 0 then SecondTS=up(0) ' siit edasi kasvab 10 min kaupa kuni pohiside taastub
  ->         if ts(9)   = 0 then SecondTS=up(0) ' siit edasi kasvab 10 min kaupa kuni pohiside taastub
  - Macro SecondTS in pos [29-36] ->         if ts(9)   = 0 then SecondTS=up(0) ' siit edasi kasvab 10 min kaupa kuni pohiside taastub
  <-         if ts(9)   = 0 then SecondTS=up(0) ' siit edasi kasvab 10 min kaupa kuni pohiside taastub
  ->         if ts(9)   = 0 then ts(9)  =up(0) ' siit edasi kasvab 10 min kaupa kuni pohiside taastub
  - Macro SecondTS in pos [18-25] ->         if up(0)>SecondTS+3600 then 'aeg tagasi lylituda 60 min parast, kui LAN gw vastab ########## tagasilylitumise viide / AEG
  <-         if up(0)>SecondTS+3600 then 'aeg tagasi lylituda 60 min parast, kui LAN gw vastab ########## tagasilylitumise viide / AEG
  ->         if up(0)>ts(9)  +3600 then 'aeg tagasi lylituda 60 min parast, kui LAN gw vastab ########## tagasilylitumise viide / AEG
  - Macro SecondTS in pos [17-24] ->                 SecondTS=SecondTS + 600 '10 min jarel proovime uuesti
  <-                 SecondTS=SecondTS + 600 '10 min jarel proovime uuesti
  ->                 ts(9)  =SecondTS + 600 '10 min jarel proovime uuesti
  - Macro SecondTS in pos [25-32] ->                 ts(9)  =SecondTS + 600 '10 min jarel proovime uuesti
  <-                 ts(9)  =SecondTS + 600 '10 min jarel proovime uuesti
  ->                 ts(9)  =ts(9)   + 600 '10 min jarel proovime uuesti
- CommBreak= --> ioctl 1, 
  - Macro CommBreak= in pos [9-18] ->         CommBreak=50 ' 5 sek paus AINULT gprs ruuterile... kui juba 2 tundi sideta, siis ka kontrollerile
  <-         CommBreak=50 ' 5 sek paus AINULT gprs ruuterile... kui juba 2 tundi sideta, siis ka kontrollerile
  ->         ioctl 1, 50 ' 5 sek paus AINULT gprs ruuterile... kui juba 2 tundi sideta, siis ka kontrollerile
  - Macro CommBreak= in pos [7-16] ->  '    CommBreak=20 '2 s gprs toite pausi
  <-  '    CommBreak=20 '2 s gprs toite pausi
  ->  '    ioctl 1, 20 '2 s gprs toite pausi
- CommBreak --> iostate(1)
- CommLed= --> ioctl 103, 
  - Macro CommLed= in pos [2-9] ->  CommLed=1 'algseisus side puudumine, las poleb
  <-  CommLed=1 'algseisus side puudumine, las poleb
  ->  ioctl 103, 1 'algseisus side puudumine, las poleb
  - Macro CommLed= in pos [5-12] -> 				CommLed=0 ' OUT(3)=0 ' kustutame SIDE tule, mis udp send ajal syydati ILMA ID KONTROLLITA!
  <- 				CommLed=0 ' OUT(3)=0 ' kustutame SIDE tule, mis udp send ajal syydati ILMA ID KONTROLLITA!
  -> 				ioctl 103, 0 ' OUT(3)=0 ' kustutame SIDE tule, mis udp send ajal syydati ILMA ID KONTROLLITA!
  - Macro CommLed= in pos [13-20] ->  	MonComm=1:CommLed=1 ' commled ka sest appmain harva ' ioctl 864,1 ' saatmise lipp las poleb kuni oige id-ga vastus saabub sub 140
  <-  	MonComm=1:CommLed=1 ' commled ka sest appmain harva ' ioctl 864,1 ' saatmise lipp las poleb kuni oige id-ga vastus saabub sub 140
  ->  	MonComm=1:ioctl 103, 1 ' commled ka sest appmain harva ' ioctl 864,1 ' saatmise lipp las poleb kuni oige id-ga vastus saabub sub 140
  - Macro CommLed= in pos [13-20] ->  	MonComm=1:CommLed=1 ' commled ka sest appmain harva ' ioctl 864,1 ' saatmise lipp las poleb kuni oige id-ga vastus saabub sub 140
  <-  	MonComm=1:CommLed=1 ' commled ka sest appmain harva ' ioctl 864,1 ' saatmise lipp las poleb kuni oige id-ga vastus saabub sub 140
  ->  	MonComm=1:ioctl 103, 1 ' commled ka sest appmain harva ' ioctl 864,1 ' saatmise lipp las poleb kuni oige id-ga vastus saabub sub 140
  - Macro CommLed= in pos [15-22] ->  	' MonComm=1:CommLed=1 ' commled ka sest appmain harva ' ioctl 864,1 ' saatmise lipp las poleb kuni oige id-ga vastus saabub sub 140
  <-  	' MonComm=1:CommLed=1 ' commled ka sest appmain harva ' ioctl 864,1 ' saatmise lipp las poleb kuni oige id-ga vastus saabub sub 140
  ->  	' MonComm=1:ioctl 103, 1 ' commled ka sest appmain harva ' ioctl 864,1 ' saatmise lipp las poleb kuni oige id-ga vastus saabub sub 140
- CommLed --> iostate(103)
- MonComm= --> ioctl 326,  
  - Macro MonComm= in pos [13-20] ->  'BupComm=1:MonComm=1:
  <-  'BupComm=1:MonComm=1:
  ->  'BupComm=1:ioctl 326,  1:
  - Macro MonComm= in pos [3-10] ->  	MonComm=1:ioctl 103, 1 ' commled ka sest appmain harva ' ioctl 864,1 ' saatmise lipp las poleb kuni oige id-ga vastus saabub sub 140
  <-  	MonComm=1:ioctl 103, 1 ' commled ka sest appmain harva ' ioctl 864,1 ' saatmise lipp las poleb kuni oige id-ga vastus saabub sub 140
  ->  	ioctl 326,  1:ioctl 103, 1 ' commled ka sest appmain harva ' ioctl 864,1 ' saatmise lipp las poleb kuni oige id-ga vastus saabub sub 140
  - Macro MonComm= in pos [3-10] ->  	MonComm=1:ioctl 103, 1 ' commled ka sest appmain harva ' ioctl 864,1 ' saatmise lipp las poleb kuni oige id-ga vastus saabub sub 140
  <-  	MonComm=1:ioctl 103, 1 ' commled ka sest appmain harva ' ioctl 864,1 ' saatmise lipp las poleb kuni oige id-ga vastus saabub sub 140
  ->  	ioctl 326,  1:ioctl 103, 1 ' commled ka sest appmain harva ' ioctl 864,1 ' saatmise lipp las poleb kuni oige id-ga vastus saabub sub 140
  - Macro MonComm= in pos [5-12] ->  	' MonComm=1:ioctl 103, 1 ' commled ka sest appmain harva ' ioctl 864,1 ' saatmise lipp las poleb kuni oige id-ga vastus saabub sub 140
  <-  	' MonComm=1:ioctl 103, 1 ' commled ka sest appmain harva ' ioctl 864,1 ' saatmise lipp las poleb kuni oige id-ga vastus saabub sub 140
  ->  	' ioctl 326,  1:ioctl 103, 1 ' commled ka sest appmain harva ' ioctl 864,1 ' saatmise lipp las poleb kuni oige id-ga vastus saabub sub 140
- MonComm --> iostate(326)
  - Macro MonComm in pos [21-27] -> 		", moncomm "+str$(MonComm)+", bupcomm "+str$(BupComm),5 ' ajutine
  <- 		", moncomm "+str$(MonComm)+", bupcomm "+str$(BupComm),5 ' ajutine
  -> 		", moncomm "+str$(iostate(326))+", bupcomm "+str$(BupComm),5 ' ajutine
- BupComm= --> ioctl 327,  
  - Macro BupComm= in pos [3-10] ->  'BupComm=1:ioctl 326,  1:
  <-  'BupComm=1:ioctl 326,  1:
  ->  'ioctl 327,  1:ioctl 326,  1:
- BupComm --> iostate(327)
  - Macro BupComm in pos [53-59] -> 		", moncomm "+str$(iostate(326))+", bupcomm "+str$(BupComm),5 ' ajutine
  <- 		", moncomm "+str$(iostate(326))+", bupcomm "+str$(BupComm),5 ' ajutine
  -> 		", moncomm "+str$(iostate(326))+", bupcomm "+str$(iostate(327)),5 ' ajutine
- PowerLost= --> ioctl 329,  
  - Macro PowerLost= in pos [80-89] ->    ' if and(PowerLost = 0, iostate(318) = 1, up(0)> ts(8)+PowerLossDelay) then PowerLost=1:ms$=ms$+"PWS:2\n":gosub 270  ' kohe teatamine
  <-    ' if and(PowerLost = 0, iostate(318) = 1, up(0)> ts(8)+PowerLossDelay) then PowerLost=1:ms$=ms$+"PWS:2\n":gosub 270  ' kohe teatamine
  ->    ' if and(PowerLost = 0, iostate(318) = 1, up(0)> ts(8)+PowerLossDelay) then ioctl 329,  1:ms$=ms$+"PWS:2\n":gosub 270  ' kohe teatamine
- PowerLost --> iostate(329)
  - Macro PowerLost in pos [13-21] ->    ' if and(PowerLost = 0, iostate(318) = 1, up(0)> ts(8)+PowerLossDelay) then ioctl 329,  1:ms$=ms$+"PWS:2\n":gosub 270  ' kohe teatamine
  <-    ' if and(PowerLost = 0, iostate(318) = 1, up(0)> ts(8)+PowerLossDelay) then ioctl 329,  1:ms$=ms$+"PWS:2\n":gosub 270  ' kohe teatamine
  ->    ' if and(iostate(329) = 0, iostate(318) = 1, up(0)> ts(8)+PowerLossDelay) then ioctl 329,  1:ms$=ms$+"PWS:2\n":gosub 270  ' kohe teatamine
- LoBatt= --> ioctl 330,  
  - Macro LoBatt= in pos [3-9] -> 		LoBatt=1:syslog "sub 10000: lobatt start",4
  <- 		LoBatt=1:syslog "sub 10000: lobatt start",4
  -> 		ioctl 330,  1:syslog "sub 10000: lobatt start",4
  - Macro LoBatt= in pos [3-9] -> 		LoBatt=0:syslog "sub 10000: lobatt end",4
  <- 		LoBatt=0:syslog "sub 10000: lobatt end",4
  -> 		ioctl 330,  0:syslog "sub 10000: lobatt end",4
- LoBatt --> iostate(330)
  - Macro LoBatt in pos [11-16] ->    if and(LoBatt = 0, BattVoltage < VoltLoLimit - 10) then 
  <-    if and(LoBatt = 0, BattVoltage < VoltLoLimit - 10) then 
  ->    if and(iostate(330) = 0, BattVoltage < VoltLoLimit - 10) then 
  - Macro LoBatt in pos [9-14] -> 	if and(LoBatt = 1, BattVoltage > VoltLoLimit + 10) then 
  <- 	if and(LoBatt = 1, BattVoltage > VoltLoLimit + 10) then 
  -> 	if and(iostate(330) = 1, BattVoltage > VoltLoLimit + 10) then 
- HiBatt= --> ioctl 331,  
  - Macro HiBatt= in pos [3-9] -> 		HiBatt=1:syslog "sub 10000: hibatt start",4
  <- 		HiBatt=1:syslog "sub 10000: hibatt start",4
  -> 		ioctl 331,  1:syslog "sub 10000: hibatt start",4
  - Macro HiBatt= in pos [3-9] -> 		HiBatt=0:syslog "sub 10000: hibatt end",4
  <- 		HiBatt=0:syslog "sub 10000: hibatt end",4
  -> 		ioctl 331,  0:syslog "sub 10000: hibatt end",4
- HiBatt --> iostate(331)
  - Macro HiBatt in pos [9-14] -> 	if and(HiBatt = 0, BattVoltage > VoltHiLimit + 10) then 
  <- 	if and(HiBatt = 0, BattVoltage > VoltHiLimit + 10) then 
  -> 	if and(iostate(331) = 0, BattVoltage > VoltHiLimit + 10) then 
  - Macro HiBatt in pos [9-14] -> 	if and(HiBatt = 1, BattVoltage < VoltHiLimit - 10) then 
  <- 	if and(HiBatt = 1, BattVoltage < VoltHiLimit - 10) then 
  -> 	if and(iostate(331) = 1, BattVoltage < VoltHiLimit - 10) then 
- ChanType[]= --> ioctl 700+, 
  - Macro ChanType[]= in pos [2-16] -> 	ChanType[chan]=1 'di alati
  <- 	ChanType[chan]=1 'di alati
  -> 	ioctl 700+chan, 1 'di alati
  - Macro ChanType[]= in pos [3-17] -> 		ChanType[chan]=6 'koikidele, aga palju neid juba on? vt define varuga... 82 tk?
  <- 		ChanType[chan]=6 'koikidele, aga palju neid juba on? vt define varuga... 82 tk?
  -> 		ioctl 700+chan, 6 'koikidele, aga palju neid juba on? vt define varuga... 82 tk?
- ChanType[] --> iostate(700+) 
  - Macro ChanType[] in pos [57-70] -> 	syslog "rd_stp: mb chan "+str$(chan)+" chantype="+str$(ChanType[chan]),4 
  <- 	syslog "rd_stp: mb chan "+str$(chan)+" chantype="+str$(ChanType[chan]),4 
  -> 	syslog "rd_stp: mb chan "+str$(chan)+" chantype="+str$(iostate(700+chan) ),4 
  - Macro ChanType[] in pos [9-22] -> 		if or(ChanType[chan] =4, ChanType[chan] =5) then ' counter raw or unit
  <- 		if or(ChanType[chan] =4, ChanType[chan] =5) then ' counter raw or unit
  -> 		if or(iostate(700+chan)  =4, ChanType[chan] =5) then ' counter raw or unit
  - Macro ChanType[] in pos [32-45] -> 		if or(iostate(700+chan)  =4, ChanType[chan] =5) then ' counter raw or unit
  <- 		if or(iostate(700+chan)  =4, ChanType[chan] =5) then ' counter raw or unit
  -> 		if or(iostate(700+chan)  =4, iostate(700+chan)  =5) then ' counter raw or unit
  - Macro ChanType[] in pos [6-19] -> 		if ChanType[chan] =2 then ' ai
  <- 		if ChanType[chan] =2 then ' ai
  -> 		if iostate(700+chan)  =2 then ' ai
  - Macro ChanType[] in pos [6-19] -> 		if ChanType[chan] =1 then ' di, 1 on 201
  <- 		if ChanType[chan] =1 then ' di, 1 on 201
  -> 		if iostate(700+chan)  =1 then ' di, 1 on 201
  - Macro ChanType[] in pos [9-22] -> 		if or(ChanType[chan] =11, ChanType[chan] =12) then ' dekodeerime di1,di2 ai2 alusel
  <- 		if or(ChanType[chan] =11, ChanType[chan] =12) then ' dekodeerime di1,di2 ai2 alusel
  -> 		if or(iostate(700+chan)  =11, ChanType[chan] =12) then ' dekodeerime di1,di2 ai2 alusel
  - Macro ChanType[] in pos [33-46] -> 		if or(iostate(700+chan)  =11, ChanType[chan] =12) then ' dekodeerime di1,di2 ai2 alusel
  <- 		if or(iostate(700+chan)  =11, ChanType[chan] =12) then ' dekodeerime di1,di2 ai2 alusel
  -> 		if or(iostate(700+chan)  =11, iostate(700+chan)  =12) then ' dekodeerime di1,di2 ai2 alusel
  - Macro ChanType[] in pos [9-22] -> 		if or(ChanType[chan] =13, ChanType[chan] =14) then ' dekodeerime di1,di2 ai2 alusel
  <- 		if or(ChanType[chan] =13, ChanType[chan] =14) then ' dekodeerime di1,di2 ai2 alusel
  -> 		if or(iostate(700+chan)  =13, ChanType[chan] =14) then ' dekodeerime di1,di2 ai2 alusel
  - Macro ChanType[] in pos [33-46] -> 		if or(iostate(700+chan)  =13, ChanType[chan] =14) then ' dekodeerime di1,di2 ai2 alusel
  <- 		if or(iostate(700+chan)  =13, ChanType[chan] =14) then ' dekodeerime di1,di2 ai2 alusel
  -> 		if or(iostate(700+chan)  =13, iostate(700+chan)  =14) then ' dekodeerime di1,di2 ai2 alusel
  - Macro ChanType[] in pos [9-22] -> 		if or(ChanType[chan] =4, ChanType[chan] =5) then ' counter raw or unit
  <- 		if or(ChanType[chan] =4, ChanType[chan] =5) then ' counter raw or unit
  -> 		if or(iostate(700+chan)  =4, ChanType[chan] =5) then ' counter raw or unit
  - Macro ChanType[] in pos [32-45] -> 		if or(iostate(700+chan)  =4, ChanType[chan] =5) then ' counter raw or unit
  <- 		if or(iostate(700+chan)  =4, ChanType[chan] =5) then ' counter raw or unit
  -> 		if or(iostate(700+chan)  =4, iostate(700+chan)  =5) then ' counter raw or unit
  - Macro ChanType[] in pos [6-19] -> 		if ChanType[chan] =1 then ' di, 1 on 201
  <- 		if ChanType[chan] =1 then ' di, 1 on 201
  -> 		if iostate(700+chan)  =1 then ' di, 1 on 201
  - Macro ChanType[] in pos [6-19] -> 		if ChanType[chan] =15 then ' di based on di1
  <- 		if ChanType[chan] =15 then ' di based on di1
  -> 		if iostate(700+chan)  =15 then ' di based on di1
  - Macro ChanType[] in pos [6-19] -> 		if ChanType[chan] =16 then ' ai
  <- 		if ChanType[chan] =16 then ' ai
  -> 		if iostate(700+chan)  =16 then ' ai
  - Macro ChanType[] in pos [6-19] -> 		if ChanType[chan] =17 then ' di based on di3
  <- 		if ChanType[chan] =17 then ' di based on di3
  -> 		if iostate(700+chan)  =17 then ' di based on di3
  - Macro ChanType[] in pos [6-19] -> 		if ChanType[chan] =18 then ' ai
  <- 		if ChanType[chan] =18 then ' ai
  -> 		if iostate(700+chan)  =18 then ' ai
  - Macro ChanType[] in pos [9-22] -> 		if or(ChanType[chan] =4, ChanType[chan] =5) then ' counter raw or unit
  <- 		if or(ChanType[chan] =4, ChanType[chan] =5) then ' counter raw or unit
  -> 		if or(iostate(700+chan)  =4, ChanType[chan] =5) then ' counter raw or unit
  - Macro ChanType[] in pos [32-45] -> 		if or(iostate(700+chan)  =4, ChanType[chan] =5) then ' counter raw or unit
  <- 		if or(iostate(700+chan)  =4, ChanType[chan] =5) then ' counter raw or unit
  -> 		if or(iostate(700+chan)  =4, iostate(700+chan)  =5) then ' counter raw or unit
  - Macro ChanType[] in pos [6-19] -> 		if ChanType[chan] =1 then ' di, 1 on 201
  <- 		if ChanType[chan] =1 then ' di, 1 on 201
  -> 		if iostate(700+chan)  =1 then ' di, 1 on 201
  - Macro ChanType[] in pos [14-25] ->         ' if ChanType[jj] = 1 then 'DI PEAB olema setupist pandud / ei ole oluline
  <-         ' if ChanType[jj] = 1 then 'DI PEAB olema setupist pandud / ei ole oluline
  ->         ' if iostate(700+jj)  = 1 then 'DI PEAB olema setupist pandud / ei ole oluline
- StpAddr= --> ioctl 791,  
  - Macro StpAddr= in pos [4-11] -> 			StpAddr=FlashAddr+1 
  <- 			StpAddr=FlashAddr+1 
  -> 			ioctl 791,  FlashAddr+1 
  - Macro StpAddr= in pos [4-11] -> 			StpAddr=FlashAddr-511
  <- 			StpAddr=FlashAddr-511
  -> 			ioctl 791,  FlashAddr-511
  - Macro StpAddr= in pos [28-35] ->             COM$="STP:768":StpAddr=FlashAddr-767
  <-             COM$="STP:768":StpAddr=FlashAddr-767
  ->             COM$="STP:768":ioctl 791,  FlashAddr-767
- StpAddr --> iostate(791) 
  - Macro StpAddr in pos [25-31] ->             MIDCPY SET$,StpAddr,len(mval$)+1,mval$ 
  <-             MIDCPY SET$,StpAddr,len(mval$)+1,mval$ 
  ->             MIDCPY SET$,iostate(791) ,len(mval$)+1,mval$ 
  - Macro StpAddr in pos [17-23] -> 			if mid$(set$,StpAddr,len(mval$)) = mval$ then syslog "sub 145: setup string "+mreg$+":"+mval$+" accepted",4 else syslog "midcpy fail!",2
  <- 			if mid$(set$,StpAddr,len(mval$)) = mval$ then syslog "sub 145: setup string "+mreg$+":"+mval$+" accepted",4 else syslog "midcpy fail!",2
  -> 			if mid$(set$,iostate(791) ,len(mval$)) = mval$ then syslog "sub 145: setup string "+mreg$+":"+mval$+" accepted",4 else syslog "midcpy fail!",2
  - Macro StpAddr in pos [25-31] ->             MIDSET SET$,StpAddr,1,val(mval$)
  <-             MIDSET SET$,StpAddr,1,val(mval$)
  ->             MIDSET SET$,iostate(791) ,1,val(mval$)
  - Macro StpAddr in pos [25-31] ->             MIDSET SET$,StpAddr,2,val(mval$)
  <-             MIDSET SET$,StpAddr,2,val(mval$)
  ->             MIDSET SET$,iostate(791) ,2,val(mval$)
- FlashAddr= --> ioctl 792,  
  - Macro FlashAddr= in pos [9-18] ->         FlashAddr=val(mid$(mreg$,2,len(mreg$)-1)):syslog "sub 145: Flash_Addr to write is "+str$(FlashAddr),4 ' vahemikus 0...1023, muuta alasse 1...256 igas veerandis!
  <-         FlashAddr=val(mid$(mreg$,2,len(mreg$)-1)):syslog "sub 145: Flash_Addr to write is "+str$(FlashAddr),4 ' vahemikus 0...1023, muuta alasse 1...256 igas veerandis!
  ->         ioctl 792,  val(mid$(mreg$,2,len(mreg$)-1)):syslog "sub 145: Flash_Addr to write is "+str$(FlashAddr),4 ' vahemikus 0...1023, muuta alasse 1...256 igas veerandis!
- FlashAddr --> iostate(792) 
  - Macro FlashAddr in pos [100-108] ->         ioctl 792,  val(mid$(mreg$,2,len(mreg$)-1)):syslog "sub 145: Flash_Addr to write is "+str$(FlashAddr),4 ' vahemikus 0...1023, muuta alasse 1...256 igas veerandis!
  <-         ioctl 792,  val(mid$(mreg$,2,len(mreg$)-1)):syslog "sub 145: Flash_Addr to write is "+str$(FlashAddr),4 ' vahemikus 0...1023, muuta alasse 1...256 igas veerandis!
  ->         ioctl 792,  val(mid$(mreg$,2,len(mreg$)-1)):syslog "sub 145: Flash_Addr to write is "+str$(iostate(792) ),4 ' vahemikus 0...1023, muuta alasse 1...256 igas veerandis!
  - Macro FlashAddr in pos [15-23] ->         if or(FlashAddr<0, FlashAddr>1023) then ' 
  <-         if or(FlashAddr<0, FlashAddr>1023) then ' 
  ->         if or(iostate(792) <0, FlashAddr>1023) then ' 
  - Macro FlashAddr in pos [32-40] ->         if or(iostate(792) <0, FlashAddr>1023) then ' 
  <-         if or(iostate(792) <0, FlashAddr>1023) then ' 
  ->         if or(iostate(792) <0, iostate(792) >1023) then ' 
  - Macro FlashAddr in pos [114-122] -> 			syslog "sub 145: illegal setup variable (address out of setup variable range 1..255 after conversion): "+str$(FlashAddr)+" from "+mreg$,4
  <- 			syslog "sub 145: illegal setup variable (address out of setup variable range 1..255 after conversion): "+str$(FlashAddr)+" from "+mreg$,4
  -> 			syslog "sub 145: illegal setup variable (address out of setup variable range 1..255 after conversion): "+str$(iostate(792) )+" from "+mreg$,4
  - Macro FlashAddr in pos [12-20] ->         if FlashAddr<256 then ' system setup, uisystem.html
  <-         if FlashAddr<256 then ' system setup, uisystem.html
  ->         if iostate(792) <256 then ' system setup, uisystem.html
  - Macro FlashAddr in pos [16-24] -> 			ioctl 791,  FlashAddr+1 
  <- 			ioctl 791,  FlashAddr+1 
  -> 			ioctl 791,  iostate(792) +1 
  - Macro FlashAddr in pos [16-24] ->         if and(FlashAddr>511,FlashAddr<768) then 'app setup part1
  <-         if and(FlashAddr>511,FlashAddr<768) then 'app setup part1
  ->         if and(iostate(792) >511,FlashAddr<768) then 'app setup part1
  - Macro FlashAddr in pos [34-42] ->         if and(iostate(792) >511,FlashAddr<768) then 'app setup part1
  <-         if and(iostate(792) >511,FlashAddr<768) then 'app setup part1
  ->         if and(iostate(792) >511,iostate(792) <768) then 'app setup part1
  - Macro FlashAddr in pos [16-24] -> 			ioctl 791,  FlashAddr-511
  <- 			ioctl 791,  FlashAddr-511
  -> 			ioctl 791,  iostate(792) -511
  - Macro FlashAddr in pos [10-18] -> 		if and(FlashAddr>767,FlashAddr<1024) then 'app setup part2
  <- 		if and(FlashAddr>767,FlashAddr<1024) then 'app setup part2
  -> 		if and(iostate(792) >767,FlashAddr<1024) then 'app setup part2
  - Macro FlashAddr in pos [28-36] -> 		if and(iostate(792) >767,FlashAddr<1024) then 'app setup part2
  <- 		if and(iostate(792) >767,FlashAddr<1024) then 'app setup part2
  -> 		if and(iostate(792) >767,iostate(792) <1024) then 'app setup part2
  - Macro FlashAddr in pos [40-48] ->             COM$="STP:768":ioctl 791,  FlashAddr-767
  <-             COM$="STP:768":ioctl 791,  FlashAddr-767
  ->             COM$="STP:768":ioctl 791,  iostate(792) -767
- RegNum= --> ioctl 793,  
  - Macro RegNum= in pos [11-17] ->    pos=0  RegNum=0 ' list$ ja lispt$ siduv pointer  ning listi liikmete arv (kui seda vaja on)
  <-    pos=0  RegNum=0 ' list$ ja lispt$ siduv pointer  ning listi liikmete arv (kui seda vaja on)
  ->    pos=0  ioctl 793,  0 ' list$ ja lispt$ siduv pointer  ning listi liikmete arv (kui seda vaja on)
  - Macro RegNum= in pos [26-32] ->                pos=pos+1:RegNum=RegNum+1
  <-                pos=pos+1:RegNum=RegNum+1
  ->                pos=pos+1:ioctl 793,  RegNum+1
- RegNum --> iostate(793)
  - Macro RegNum in pos [15-20] ->  for pos=1 to RegNum ' len(listp$) ' see jamas ' pointer registritejorus
  <-  for pos=1 to RegNum ' len(listp$) ' see jamas ' pointer registritejorus
  ->  for pos=1 to iostate(793) ' len(listp$) ' see jamas ' pointer registritejorus
  - Macro RegNum in pos [90-95] ->         gosub 13000:syslog "sub 145: proccesing list_pos "+str$(pos)+" from total "+str$(RegNum)+", pair "+mreg$+":"+mval$,4 ' processing this value
  <-         gosub 13000:syslog "sub 145: proccesing list_pos "+str$(pos)+" from total "+str$(RegNum)+", pair "+mreg$+":"+mval$,4 ' processing this value
  ->         gosub 13000:syslog "sub 145: proccesing list_pos "+str$(pos)+" from total "+str$(iostate(793))+", pair "+mreg$+":"+mval$,4 ' processing this value
  - Macro RegNum in pos [61-66] ->    ' syslog "sub 11000: got list: "+list$+" liikmete arvuga RegNum:"+str$(RegNum)+", sub lopus uku:"+str$(uku)+" ukk:"+str$(ukk),5
  <-    ' syslog "sub 11000: got list: "+list$+" liikmete arvuga RegNum:"+str$(RegNum)+", sub lopus uku:"+str$(uku)+" ukk:"+str$(ukk),5
  ->    ' syslog "sub 11000: got list: "+list$+" liikmete arvuga iostate(793):"+str$(RegNum)+", sub lopus uku:"+str$(uku)+" ukk:"+str$(ukk),5
  - Macro RegNum in pos [81-86] ->    ' syslog "sub 11000: got list: "+list$+" liikmete arvuga iostate(793):"+str$(RegNum)+", sub lopus uku:"+str$(uku)+" ukk:"+str$(ukk),5
  <-    ' syslog "sub 11000: got list: "+list$+" liikmete arvuga iostate(793):"+str$(RegNum)+", sub lopus uku:"+str$(uku)+" ukk:"+str$(ukk),5
  ->    ' syslog "sub 11000: got list: "+list$+" liikmete arvuga iostate(793):"+str$(iostate(793))+", sub lopus uku:"+str$(uku)+" ukk:"+str$(ukk),5
  - Macro RegNum in pos [38-43] ->                pos=pos+1:ioctl 793,  RegNum+1
  <-                pos=pos+1:ioctl 793,  RegNum+1
  ->                pos=pos+1:ioctl 793,  iostate(793)+1
- RegPos= --> ioctl 794,  
  - Macro RegPos= in pos [2-8] ->  RegPos=1    ' registrite joru index, korraga voime saada erinevaid registreid nii setup kui app, teeme setup yhekorraga
  <-  RegPos=1    ' registrite joru index, korraga voime saada erinevaid registreid nii setup kui app, teeme setup yhekorraga
  ->  ioctl 794,  1    ' registrite joru index, korraga voime saada erinevaid registreid nii setup kui app, teeme setup yhekorraga
  - Macro RegPos= in pos [5-11] ->     RegPos=RegPos+RegLen
  <-     RegPos=RegPos+RegLen
  ->     ioctl 794,  RegPos+RegLen
- RegPos --> iostate(794)
  - Macro RegPos in pos [22-27] ->     mreg$=mid$(list$,RegPos,RegLen)
  <-     mreg$=mid$(list$,RegPos,RegLen)
  ->     mreg$=mid$(list$,iostate(794),RegLen)
  - Macro RegPos in pos [17-22] ->     ioctl 794,  RegPos+RegLen
  <-     ioctl 794,  RegPos+RegLen
  ->     ioctl 794,  iostate(794)+RegLen
  - Macro RegPos in pos [75-80] ->     ' syslog "sub 145 - mreg$="+mreg$+" mval$ = "+mval$+", reg_pos="+str$(RegPos)+", list_pos="+str$(pos)+", Reg_Len "+str$(RegLen),4
  <-     ' syslog "sub 145 - mreg$="+mreg$+" mval$ = "+mval$+", reg_pos="+str$(RegPos)+", list_pos="+str$(pos)+", Reg_Len "+str$(RegLen),4
  ->     ' syslog "sub 145 - mreg$="+mreg$+" mval$ = "+mval$+", reg_pos="+str$(iostate(794))+", list_pos="+str$(pos)+", Reg_Len "+str$(RegLen),4
- RegLen= --> ioctl 795,  
  - Macro RegLen= in pos [5-11] ->     RegLen=midget(listp$,pos,1)
  <-     RegLen=midget(listp$,pos,1)
  ->     ioctl 795,  midget(listp$,pos,1)
- RegLen --> iostate(795)
  - Macro RegLen in pos [35-40] ->     mreg$=mid$(list$,iostate(794),RegLen)
  <-     mreg$=mid$(list$,iostate(794),RegLen)
  ->     mreg$=mid$(list$,iostate(794),iostate(795))
  - Macro RegLen in pos [30-35] ->     ioctl 794,  iostate(794)+RegLen
  <-     ioctl 794,  iostate(794)+RegLen
  ->     ioctl 794,  iostate(794)+iostate(795)
  - Macro RegLen in pos [131-136] ->     ' syslog "sub 145 - mreg$="+mreg$+" mval$ = "+mval$+", reg_pos="+str$(iostate(794))+", list_pos="+str$(pos)+", Reg_Len "+str$(RegLen),4
  <-     ' syslog "sub 145 - mreg$="+mreg$+" mval$ = "+mval$+", reg_pos="+str$(iostate(794))+", list_pos="+str$(pos)+", Reg_Len "+str$(RegLen),4
  ->     ' syslog "sub 145 - mreg$="+mreg$+" mval$ = "+mval$+", reg_pos="+str$(iostate(794))+", list_pos="+str$(pos)+", Reg_Len "+str$(iostate(795)),4
- VoltageRaw= --> ioctl 796,  
- VoltageRaw --> iostate(796)
- TempLoLimit= --> ioctl 798,  
- TempLoLimit --> iostate(798)
- TempHiLimit= --> ioctl 799,  
- TempHiLimit --> iostate(799)
- VoltLoLimit= --> ioctl 809,  
  - Macro VoltLoLimit= in pos [9-20] ->  jj=580:VoltLoLimit=MIDGET(set$,jj-511,2):gosub 21020 
  <-  jj=580:VoltLoLimit=MIDGET(set$,jj-511,2):gosub 21020 
  ->  jj=580:ioctl 809,  MIDGET(set$,jj-511,2):gosub 21020 
- VoltLoLimit --> iostate(809)
  - Macro VoltLoLimit in pos [43-53] ->    if and(iostate(330) = 0, BattVoltage < VoltLoLimit - 10) then 
  <-    if and(iostate(330) = 0, BattVoltage < VoltLoLimit - 10) then 
  ->    if and(iostate(330) = 0, BattVoltage < iostate(809) - 10) then 
  - Macro VoltLoLimit in pos [41-51] -> 	if and(iostate(330) = 1, BattVoltage > VoltLoLimit + 10) then 
  <- 	if and(iostate(330) = 1, BattVoltage > VoltLoLimit + 10) then 
  -> 	if and(iostate(330) = 1, BattVoltage > iostate(809) + 10) then 
- VoltHiLimit= --> ioctl 810,  
  - Macro VoltHiLimit= in pos [9-20] ->  jj=582:VoltHiLimit=MIDGET(set$,jj-511,2):gosub 21020
  <-  jj=582:VoltHiLimit=MIDGET(set$,jj-511,2):gosub 21020
  ->  jj=582:ioctl 810,  MIDGET(set$,jj-511,2):gosub 21020
- VoltHiLimit --> iostate(810)
  - Macro VoltHiLimit in pos [41-51] -> 	if and(iostate(331) = 0, BattVoltage > VoltHiLimit + 10) then 
  <- 	if and(iostate(331) = 0, BattVoltage > VoltHiLimit + 10) then 
  -> 	if and(iostate(331) = 0, BattVoltage > iostate(810) + 10) then 
  - Macro VoltHiLimit in pos [41-51] -> 	if and(iostate(331) = 1, BattVoltage < VoltHiLimit - 10) then 
  <- 	if and(iostate(331) = 1, BattVoltage < VoltHiLimit - 10) then 
  -> 	if and(iostate(331) = 1, BattVoltage < iostate(810) - 10) then 
- VoltageAvgRaw[]= --> ioctl 810+, 
  - Macro VoltageAvgRaw[]= in pos [9-33] ->         VoltageAvgRaw[timertemp]=iostate(500+timertemp)
  <-         VoltageAvgRaw[timertemp]=iostate(500+timertemp)
  ->         ioctl 810+timertemp, iostate(500+timertemp)
  - Macro VoltageAvgRaw[]= in pos [9-33] ->         VoltageAvgRaw[timertemp]=(iostate(500+timertemp)+(SlidingWindowSize-1)*VoltageAvgRaw[timertemp])/SlidingWindowSize ' averaging
  <-         VoltageAvgRaw[timertemp]=(iostate(500+timertemp)+(SlidingWindowSize-1)*VoltageAvgRaw[timertemp])/SlidingWindowSize ' averaging
  ->         ioctl 810+timertemp, (iostate(500+timertemp)+(SlidingWindowSize-1)*VoltageAvgRaw[timertemp])/SlidingWindowSize ' averaging
- VoltageAvgRaw[] --> iostate(810+)
  - Macro VoltageAvgRaw[] in pos [11-34] ->     if or(VoltageAvgRaw[timertemp] =0, SlidingWindowSize = 0, SlidingWindowSize = 1) then ' jatame keskmistamise vahele
  <-     if or(VoltageAvgRaw[timertemp] =0, SlidingWindowSize = 0, SlidingWindowSize = 1) then ' jatame keskmistamise vahele
  ->     if or(iostate(810+timertemp) =0, SlidingWindowSize = 0, SlidingWindowSize = 1) then ' jatame keskmistamise vahele
  - Macro VoltageAvgRaw[] in pos [76-99] ->         ioctl 810+timertemp, (iostate(500+timertemp)+(SlidingWindowSize-1)*VoltageAvgRaw[timertemp])/SlidingWindowSize ' averaging
  <-         ioctl 810+timertemp, (iostate(500+timertemp)+(SlidingWindowSize-1)*VoltageAvgRaw[timertemp])/SlidingWindowSize ' averaging
  ->         ioctl 810+timertemp, (iostate(500+timertemp)+(SlidingWindowSize-1)*iostate(810+timertemp))/SlidingWindowSize ' averaging
- VoltCoeff= --> ioctl 818,  
  - Macro VoltCoeff= in pos [9-18] ->  jj=578:VoltCoeff=MIDGET(set$,jj-511,2):gosub 21020 ' batt voltage calc coeff
  <-  jj=578:VoltCoeff=MIDGET(set$,jj-511,2):gosub 21020 ' batt voltage calc coeff
  ->  jj=578:ioctl 818,  MIDGET(set$,jj-511,2):gosub 21020 ' batt voltage calc coeff
- VoltCoeff --> iostate(818)
  - Macro VoltCoeff in pos [35-43] -> 				BattVoltage=iostate(810+chan)*VoltCoeff/200
  <- 				BattVoltage=iostate(810+chan)*VoltCoeff/200
  -> 				BattVoltage=iostate(810+chan)*iostate(818)/200
  - Macro VoltCoeff in pos [30-38] -> 				BattVoltage=iostate(501)*VoltCoeff/200 ' peaks keskmistama...
  <- 				BattVoltage=iostate(501)*VoltCoeff/200 ' peaks keskmistama...
  -> 				BattVoltage=iostate(501)*iostate(818)/200 ' peaks keskmistama...
  - Macro VoltCoeff in pos [30-38] -> 				BattVoltage=iostate(813)*VoltCoeff/200
  <- 				BattVoltage=iostate(813)*VoltCoeff/200
  -> 				BattVoltage=iostate(813)*iostate(818)/200
- BattVoltage= --> ioctl 819,  
  - Macro BattVoltage= in pos [5-16] -> 				BattVoltage=iostate(810+chan)*iostate(818)/200
  <- 				BattVoltage=iostate(810+chan)*iostate(818)/200
  -> 				ioctl 819,  iostate(810+chan)*iostate(818)/200
  - Macro BattVoltage= in pos [5-16] -> 				BattVoltage=iostate(501)*iostate(818)/200 ' peaks keskmistama...
  <- 				BattVoltage=iostate(501)*iostate(818)/200 ' peaks keskmistama...
  -> 				ioctl 819,  iostate(501)*iostate(818)/200 ' peaks keskmistama...
  - Macro BattVoltage= in pos [5-16] -> 				BattVoltage=iostate(813)*iostate(818)/200
  <- 				BattVoltage=iostate(813)*iostate(818)/200
  -> 				ioctl 819,  iostate(813)*iostate(818)/200
- BattVoltage --> iostate(819)
  - Macro BattVoltage in pos [43-53] -> 				'syslog "chd_tegu: battvoltage "+str$(BattVoltage)+" on ai"+str$(chan),4 ' mV
  <- 				'syslog "chd_tegu: battvoltage "+str$(BattVoltage)+" on ai"+str$(chan),4 ' mV
  -> 				'syslog "chd_tegu: battvoltage "+str$(iostate(819))+" on ai"+str$(chan),4 ' mV
  - Macro BattVoltage in pos [15-25] -> 				chd(chan)=BattVoltage/10 ' averaged BTV, saatmisel sprintf$("%l.2F",chd(chan)) 
  <- 				chd(chan)=BattVoltage/10 ' averaged BTV, saatmisel sprintf$("%l.2F",chd(chan)) 
  -> 				chd(chan)=iostate(819)/10 ' averaged BTV, saatmisel sprintf$("%l.2F",chd(chan)) 
  - Macro BattVoltage in pos [41-51] -> 				syslog "appmain: battvoltage "+str$(BattVoltage)+" on ai"+str$(chan),5 ' mV
  <- 				syslog "appmain: battvoltage "+str$(BattVoltage)+" on ai"+str$(chan),5 ' mV
  -> 				syslog "appmain: battvoltage "+str$(iostate(819))+" on ai"+str$(chan),5 ' mV
  - Macro BattVoltage in pos [15-25] -> 				chd(chan)=BattVoltage/10 ' averaged BTV, udpmon jaoks pane oige jagaja.. bup saatmisel sprintf$("%l.2F",chd(chan)) 
  <- 				chd(chan)=BattVoltage/10 ' averaged BTV, udpmon jaoks pane oige jagaja.. bup saatmisel sprintf$("%l.2F",chd(chan)) 
  -> 				chd(chan)=iostate(819)/10 ' averaged BTV, udpmon jaoks pane oige jagaja.. bup saatmisel sprintf$("%l.2F",chd(chan)) 
  - Macro BattVoltage in pos [41-51] -> 				syslog "appmain: battvoltage "+str$(BattVoltage)+" on ai"+str$(chan),5 ' mV
  <- 				syslog "appmain: battvoltage "+str$(BattVoltage)+" on ai"+str$(chan),5 ' mV
  -> 				syslog "appmain: battvoltage "+str$(iostate(819))+" on ai"+str$(chan),5 ' mV
  - Macro BattVoltage in pos [15-25] -> 				chd(chan)=BattVoltage/10 ' averaged BTV, saatmisel sprintf$("%l.2F",chd(chan)) 
  <- 				chd(chan)=BattVoltage/10 ' averaged BTV, saatmisel sprintf$("%l.2F",chd(chan)) 
  -> 				chd(chan)=iostate(819)/10 ' averaged BTV, saatmisel sprintf$("%l.2F",chd(chan)) 
  - Macro BattVoltage in pos [29-39] ->    if and(iostate(330) = 0, BattVoltage < iostate(809) - 10) then 
  <-    if and(iostate(330) = 0, BattVoltage < iostate(809) - 10) then 
  ->    if and(iostate(330) = 0, iostate(819) < iostate(809) - 10) then 
  - Macro BattVoltage in pos [27-37] -> 	if and(iostate(330) = 1, BattVoltage > iostate(809) + 10) then 
  <- 	if and(iostate(330) = 1, BattVoltage > iostate(809) + 10) then 
  -> 	if and(iostate(330) = 1, iostate(819) > iostate(809) + 10) then 
  - Macro BattVoltage in pos [27-37] -> 	if and(iostate(331) = 0, BattVoltage > iostate(810) + 10) then 
  <- 	if and(iostate(331) = 0, BattVoltage > iostate(810) + 10) then 
  -> 	if and(iostate(331) = 0, iostate(819) > iostate(810) + 10) then 
  - Macro BattVoltage in pos [27-37] -> 	if and(iostate(331) = 1, BattVoltage < iostate(810) - 10) then 
  <- 	if and(iostate(331) = 1, BattVoltage < iostate(810) - 10) then 
  -> 	if and(iostate(331) = 1, iostate(819) < iostate(810) - 10) then 
- PowerLossDelay= --> ioctl 820, 
  - Macro PowerLossDelay= in pos [9-23] ->  jj=766:PowerLossDelay=MIDGET(set$,jj-511,1):gosub 21010 ' voolukatkestuse teatamise viide
  <-  jj=766:PowerLossDelay=MIDGET(set$,jj-511,1):gosub 21010 ' voolukatkestuse teatamise viide
  ->  jj=766:ioctl 820, MIDGET(set$,jj-511,1):gosub 21010 ' voolukatkestuse teatamise viide
- PowerLossDelay --> iostate(820)
  - Macro PowerLossDelay in pos [62-75] ->    ' if and(iostate(329) = 0, iostate(318) = 1, up(0)> ts(8)+PowerLossDelay) then ioctl 329,  1:ms$=ms$+"PWS:2\n":gosub 270  ' kohe teatamine
  <-    ' if and(iostate(329) = 0, iostate(318) = 1, up(0)> ts(8)+PowerLossDelay) then ioctl 329,  1:ms$=ms$+"PWS:2\n":gosub 270  ' kohe teatamine
  ->    ' if and(iostate(329) = 0, iostate(318) = 1, up(0)> ts(8)+iostate(820)) then ioctl 329,  1:ms$=ms$+"PWS:2\n":gosub 270  ' kohe teatamine
- SlidingWindowSize= --> ioctl 821, 
  - Macro SlidingWindowSize= in pos [9-26] ->  jj=767:SlidingWindowSize=MIDGET(set$,jj-511,1):gosub 21010 ' keskmistamise tugevus
  <-  jj=767:SlidingWindowSize=MIDGET(set$,jj-511,1):gosub 21010 ' keskmistamise tugevus
  ->  jj=767:ioctl 821, MIDGET(set$,jj-511,1):gosub 21010 ' keskmistamise tugevus
- SlidingWindowSize --> iostate(821)
  - Macro SlidingWindowSize in pos [17-33] ->   ' keskmistame SlidingWindowSize viimast vaartust  eemisega sobivas vahekorras
  <-   ' keskmistame SlidingWindowSize viimast vaartust  eemisega sobivas vahekorras
  ->   ' keskmistame iostate(821) viimast vaartust  eemisega sobivas vahekorras
  - Macro SlidingWindowSize in pos [38-54] ->     if or(iostate(810+timertemp) =0, SlidingWindowSize = 0, SlidingWindowSize = 1) then ' jatame keskmistamise vahele
  <-     if or(iostate(810+timertemp) =0, SlidingWindowSize = 0, SlidingWindowSize = 1) then ' jatame keskmistamise vahele
  ->     if or(iostate(810+timertemp) =0, iostate(821) = 0, SlidingWindowSize = 1) then ' jatame keskmistamise vahele
  - Macro SlidingWindowSize in pos [56-72] ->     if or(iostate(810+timertemp) =0, iostate(821) = 0, SlidingWindowSize = 1) then ' jatame keskmistamise vahele
  <-     if or(iostate(810+timertemp) =0, iostate(821) = 0, SlidingWindowSize = 1) then ' jatame keskmistamise vahele
  ->     if or(iostate(810+timertemp) =0, iostate(821) = 0, iostate(821) = 1) then ' jatame keskmistamise vahele
  - Macro SlidingWindowSize in pos [55-71] ->         syslog "sub 330: no averaging, winsize="+str$(SlidingWindowSize),5
  <-         syslog "sub 330: no averaging, winsize="+str$(SlidingWindowSize),5
  ->         syslog "sub 330: no averaging, winsize="+str$(iostate(821)),5
  - Macro SlidingWindowSize in pos [64-80] ->         syslog "sub 330: averaging active, sli_win_size="+str$(SlidingWindowSize),5
  <-         syslog "sub 330: averaging active, sli_win_size="+str$(SlidingWindowSize),5
  ->         syslog "sub 330: averaging active, sli_win_size="+str$(iostate(821)),5
  - Macro SlidingWindowSize in pos [55-71] ->         ioctl 810+timertemp, (iostate(500+timertemp)+(SlidingWindowSize-1)*iostate(810+timertemp))/SlidingWindowSize ' averaging
  <-         ioctl 810+timertemp, (iostate(500+timertemp)+(SlidingWindowSize-1)*iostate(810+timertemp))/SlidingWindowSize ' averaging
  ->         ioctl 810+timertemp, (iostate(500+timertemp)+(iostate(821)-1)*iostate(810+timertemp))/SlidingWindowSize ' averaging
  - Macro SlidingWindowSize in pos [95-111] ->         ioctl 810+timertemp, (iostate(500+timertemp)+(iostate(821)-1)*iostate(810+timertemp))/SlidingWindowSize ' averaging
  <-         ioctl 810+timertemp, (iostate(500+timertemp)+(iostate(821)-1)*iostate(810+timertemp))/SlidingWindowSize ' averaging
  ->         ioctl 810+timertemp, (iostate(500+timertemp)+(iostate(821)-1)*iostate(810+timertemp))/iostate(821) ' averaging
- Data1IP[]= --> ioctl 822+, 
  - Macro Data1IP[]= in pos [5-20] ->     Data1IP[jj-567]=MIDGET(set$,jj-511,1):gosub 21010 
  <-     Data1IP[jj-567]=MIDGET(set$,jj-511,1):gosub 21010 
  ->     ioctl 822+jj-567, MIDGET(set$,jj-511,1):gosub 21010 
- Data1IP[] --> iostate(822+)
  - Macro Data1IP[] in pos [15-24] ->  if ping(str$(Data1IP[1])+"."+str$(Data1IP[2])+"."+str$(Data1IP[3])+"."+str$(Data1IP[4]),3000) > 0 then
  <-  if ping(str$(Data1IP[1])+"."+str$(Data1IP[2])+"."+str$(Data1IP[3])+"."+str$(Data1IP[4]),3000) > 0 then
  ->  if ping(str$(iostate(822+1))+"."+str$(Data1IP[2])+"."+str$(Data1IP[3])+"."+str$(Data1IP[4]),3000) > 0 then
  - Macro Data1IP[] in pos [40-49] ->  if ping(str$(iostate(822+1))+"."+str$(Data1IP[2])+"."+str$(Data1IP[3])+"."+str$(Data1IP[4]),3000) > 0 then
  <-  if ping(str$(iostate(822+1))+"."+str$(Data1IP[2])+"."+str$(Data1IP[3])+"."+str$(Data1IP[4]),3000) > 0 then
  ->  if ping(str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(Data1IP[3])+"."+str$(Data1IP[4]),3000) > 0 then
  - Macro Data1IP[] in pos [65-74] ->  if ping(str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(Data1IP[3])+"."+str$(Data1IP[4]),3000) > 0 then
  <-  if ping(str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(Data1IP[3])+"."+str$(Data1IP[4]),3000) > 0 then
  ->  if ping(str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(iostate(822+3))+"."+str$(Data1IP[4]),3000) > 0 then
  - Macro Data1IP[] in pos [90-99] ->  if ping(str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(iostate(822+3))+"."+str$(Data1IP[4]),3000) > 0 then
  <-  if ping(str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(iostate(822+3))+"."+str$(Data1IP[4]),3000) > 0 then
  ->  if ping(str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(iostate(822+3))+"."+str$(iostate(822+4)),3000) > 0 then
  - Macro Data1IP[] in pos [14-23] -> 	syslog str$(Data1IP[1])+"."+str$(Data1IP[2])+"."+str$(Data1IP[3])+"."+str$(Data1IP[4])+"  OK",4
  <- 	syslog str$(Data1IP[1])+"."+str$(Data1IP[2])+"."+str$(Data1IP[3])+"."+str$(Data1IP[4])+"  OK",4
  -> 	syslog str$(iostate(822+1))+"."+str$(Data1IP[2])+"."+str$(Data1IP[3])+"."+str$(Data1IP[4])+"  OK",4
  - Macro Data1IP[] in pos [39-48] -> 	syslog str$(iostate(822+1))+"."+str$(Data1IP[2])+"."+str$(Data1IP[3])+"."+str$(Data1IP[4])+"  OK",4
  <- 	syslog str$(iostate(822+1))+"."+str$(Data1IP[2])+"."+str$(Data1IP[3])+"."+str$(Data1IP[4])+"  OK",4
  -> 	syslog str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(Data1IP[3])+"."+str$(Data1IP[4])+"  OK",4
  - Macro Data1IP[] in pos [64-73] -> 	syslog str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(Data1IP[3])+"."+str$(Data1IP[4])+"  OK",4
  <- 	syslog str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(Data1IP[3])+"."+str$(Data1IP[4])+"  OK",4
  -> 	syslog str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(iostate(822+3))+"."+str$(Data1IP[4])+"  OK",4
  - Macro Data1IP[] in pos [89-98] -> 	syslog str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(iostate(822+3))+"."+str$(Data1IP[4])+"  OK",4
  <- 	syslog str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(iostate(822+3))+"."+str$(Data1IP[4])+"  OK",4
  -> 	syslog str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(iostate(822+3))+"."+str$(iostate(822+4))+"  OK",4
  - Macro Data1IP[] in pos [14-23] -> 	syslog str$(Data1IP[1])+"."+str$(Data1IP[2])+"."+str$(Data1IP[3])+"."+str$(Data1IP[4])+" no response in 3 s",4
  <- 	syslog str$(Data1IP[1])+"."+str$(Data1IP[2])+"."+str$(Data1IP[3])+"."+str$(Data1IP[4])+" no response in 3 s",4
  -> 	syslog str$(iostate(822+1))+"."+str$(Data1IP[2])+"."+str$(Data1IP[3])+"."+str$(Data1IP[4])+" no response in 3 s",4
  - Macro Data1IP[] in pos [39-48] -> 	syslog str$(iostate(822+1))+"."+str$(Data1IP[2])+"."+str$(Data1IP[3])+"."+str$(Data1IP[4])+" no response in 3 s",4
  <- 	syslog str$(iostate(822+1))+"."+str$(Data1IP[2])+"."+str$(Data1IP[3])+"."+str$(Data1IP[4])+" no response in 3 s",4
  -> 	syslog str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(Data1IP[3])+"."+str$(Data1IP[4])+" no response in 3 s",4
  - Macro Data1IP[] in pos [64-73] -> 	syslog str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(Data1IP[3])+"."+str$(Data1IP[4])+" no response in 3 s",4
  <- 	syslog str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(Data1IP[3])+"."+str$(Data1IP[4])+" no response in 3 s",4
  -> 	syslog str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(iostate(822+3))+"."+str$(Data1IP[4])+" no response in 3 s",4
  - Macro Data1IP[] in pos [89-98] -> 	syslog str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(iostate(822+3))+"."+str$(Data1IP[4])+" no response in 3 s",4
  <- 	syslog str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(iostate(822+3))+"."+str$(Data1IP[4])+" no response in 3 s",4
  -> 	syslog str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(iostate(822+3))+"."+str$(iostate(822+4))+" no response in 3 s",4
- Data2IP[]= --> ioctl 826+, 
  - Macro Data2IP[]= in pos [5-20] ->     Data2IP[jj-571]=MIDGET(set$,jj-511,1):gosub 21010 
  <-     Data2IP[jj-571]=MIDGET(set$,jj-511,1):gosub 21010 
  ->     ioctl 826+jj-571, MIDGET(set$,jj-511,1):gosub 21010 
- Data2IP[] --> iostate(826+)
  - Macro Data2IP[] in pos [15-24] ->  if ping(str$(Data2IP[1])+"."+str$(Data2IP[2])+"."+str$(Data2IP[3])+"."+str$(Data2IP[4]),3000) > 0 then
  <-  if ping(str$(Data2IP[1])+"."+str$(Data2IP[2])+"."+str$(Data2IP[3])+"."+str$(Data2IP[4]),3000) > 0 then
  ->  if ping(str$(iostate(826+1))+"."+str$(Data2IP[2])+"."+str$(Data2IP[3])+"."+str$(Data2IP[4]),3000) > 0 then
  - Macro Data2IP[] in pos [40-49] ->  if ping(str$(iostate(826+1))+"."+str$(Data2IP[2])+"."+str$(Data2IP[3])+"."+str$(Data2IP[4]),3000) > 0 then
  <-  if ping(str$(iostate(826+1))+"."+str$(Data2IP[2])+"."+str$(Data2IP[3])+"."+str$(Data2IP[4]),3000) > 0 then
  ->  if ping(str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(Data2IP[3])+"."+str$(Data2IP[4]),3000) > 0 then
  - Macro Data2IP[] in pos [65-74] ->  if ping(str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(Data2IP[3])+"."+str$(Data2IP[4]),3000) > 0 then
  <-  if ping(str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(Data2IP[3])+"."+str$(Data2IP[4]),3000) > 0 then
  ->  if ping(str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(iostate(826+3))+"."+str$(Data2IP[4]),3000) > 0 then
  - Macro Data2IP[] in pos [90-99] ->  if ping(str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(iostate(826+3))+"."+str$(Data2IP[4]),3000) > 0 then
  <-  if ping(str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(iostate(826+3))+"."+str$(Data2IP[4]),3000) > 0 then
  ->  if ping(str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(iostate(826+3))+"."+str$(iostate(826+4)),3000) > 0 then
  - Macro Data2IP[] in pos [14-23] -> 	syslog str$(Data2IP[1])+"."+str$(Data2IP[2])+"."+str$(Data2IP[3])+"."+str$(Data2IP[4])+"  OK",4
  <- 	syslog str$(Data2IP[1])+"."+str$(Data2IP[2])+"."+str$(Data2IP[3])+"."+str$(Data2IP[4])+"  OK",4
  -> 	syslog str$(iostate(826+1))+"."+str$(Data2IP[2])+"."+str$(Data2IP[3])+"."+str$(Data2IP[4])+"  OK",4
  - Macro Data2IP[] in pos [39-48] -> 	syslog str$(iostate(826+1))+"."+str$(Data2IP[2])+"."+str$(Data2IP[3])+"."+str$(Data2IP[4])+"  OK",4
  <- 	syslog str$(iostate(826+1))+"."+str$(Data2IP[2])+"."+str$(Data2IP[3])+"."+str$(Data2IP[4])+"  OK",4
  -> 	syslog str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(Data2IP[3])+"."+str$(Data2IP[4])+"  OK",4
  - Macro Data2IP[] in pos [64-73] -> 	syslog str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(Data2IP[3])+"."+str$(Data2IP[4])+"  OK",4
  <- 	syslog str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(Data2IP[3])+"."+str$(Data2IP[4])+"  OK",4
  -> 	syslog str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(iostate(826+3))+"."+str$(Data2IP[4])+"  OK",4
  - Macro Data2IP[] in pos [89-98] -> 	syslog str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(iostate(826+3))+"."+str$(Data2IP[4])+"  OK",4
  <- 	syslog str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(iostate(826+3))+"."+str$(Data2IP[4])+"  OK",4
  -> 	syslog str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(iostate(826+3))+"."+str$(iostate(826+4))+"  OK",4
  - Macro Data2IP[] in pos [14-23] -> 	syslog str$(Data2IP[1])+"."+str$(Data2IP[2])+"."+str$(Data2IP[3])+"."+str$(Data2IP[4])+" no response in 3 s",4
  <- 	syslog str$(Data2IP[1])+"."+str$(Data2IP[2])+"."+str$(Data2IP[3])+"."+str$(Data2IP[4])+" no response in 3 s",4
  -> 	syslog str$(iostate(826+1))+"."+str$(Data2IP[2])+"."+str$(Data2IP[3])+"."+str$(Data2IP[4])+" no response in 3 s",4
  - Macro Data2IP[] in pos [39-48] -> 	syslog str$(iostate(826+1))+"."+str$(Data2IP[2])+"."+str$(Data2IP[3])+"."+str$(Data2IP[4])+" no response in 3 s",4
  <- 	syslog str$(iostate(826+1))+"."+str$(Data2IP[2])+"."+str$(Data2IP[3])+"."+str$(Data2IP[4])+" no response in 3 s",4
  -> 	syslog str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(Data2IP[3])+"."+str$(Data2IP[4])+" no response in 3 s",4
  - Macro Data2IP[] in pos [64-73] -> 	syslog str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(Data2IP[3])+"."+str$(Data2IP[4])+" no response in 3 s",4
  <- 	syslog str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(Data2IP[3])+"."+str$(Data2IP[4])+" no response in 3 s",4
  -> 	syslog str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(iostate(826+3))+"."+str$(Data2IP[4])+" no response in 3 s",4
  - Macro Data2IP[] in pos [89-98] -> 	syslog str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(iostate(826+3))+"."+str$(Data2IP[4])+" no response in 3 s",4
  <- 	syslog str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(iostate(826+3))+"."+str$(Data2IP[4])+" no response in 3 s",4
  -> 	syslog str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(iostate(826+3))+"."+str$(iostate(826+4))+" no response in 3 s",4
- Mon1IP[]= --> ioctl 830+, 
  - Macro Mon1IP[]= in pos [5-19] ->     Mon1IP[jj-555]=MIDGET(set$,jj-511,1):gosub 21010
  <-     Mon1IP[jj-555]=MIDGET(set$,jj-511,1):gosub 21010
  ->     ioctl 830+jj-555, MIDGET(set$,jj-511,1):gosub 21010
- Mon1IP[] --> iostate(830+)
  - Macro Mon1IP[] in pos [20-33] -> 		mip1$=mip1$+str$(Mon1IP[jj-555])
  <- 		mip1$=mip1$+str$(Mon1IP[jj-555])
  -> 		mip1$=mip1$+str$(iostate(830+jj-555))
  - Macro Mon1IP[] in pos [19-32] -> 	mip2$=mip2$+str$(Mon1IP[jj-555])
  <- 	mip2$=mip2$+str$(Mon1IP[jj-555])
  -> 	mip2$=mip2$+str$(iostate(830+jj-555))
- Mon2IP[]= --> ioctl 834+, 
  - Macro Mon2IP[]= in pos [5-19] ->     Mon2IP[jj-559]=MIDGET(set$,jj-511,1):gosub 21010 
  <-     Mon2IP[jj-559]=MIDGET(set$,jj-511,1):gosub 21010 
  ->     ioctl 834+jj-559, MIDGET(set$,jj-511,1):gosub 21010 
- Mon2IP[] --> iostate(834+)
- DataPort= --> ioctl 839, 
  - Macro DataPort= in pos [9-17] ->  jj=576:DataPort=MIDGET(set$,jj-511,2)
  <-  jj=576:DataPort=MIDGET(set$,jj-511,2)
  ->  jj=576:ioctl 839, MIDGET(set$,jj-511,2)
  - Macro DataPort= in pos [22-30] ->  if DataPort =0 then DataPort=80
  <-  if DataPort =0 then DataPort=80
  ->  if DataPort =0 then ioctl 839, 80
- DataPort --> iostate(839)
  - Macro DataPort in pos [5-12] ->  if DataPort =0 then ioctl 839, 80
  <-  if DataPort =0 then ioctl 839, 80
  ->  if iostate(839) =0 then ioctl 839, 80
- DataInterval= --> ioctl 841, 
  - Macro DataInterval= in pos [9-21] ->  jj=764:DataInterval=MIDGET(set$,jj-511,2):gosub 21020 ' max data intervall
  <-  jj=764:DataInterval=MIDGET(set$,jj-511,2):gosub 21020 ' max data intervall
  ->  jj=764:ioctl 841, MIDGET(set$,jj-511,2):gosub 21020 ' max data intervall
- DataInterval --> iostate(841)
- MonInterval= --> ioctl 842, 
  - Macro MonInterval= in pos [9-20] ->  jj=762:MonInterval=MIDGET(set$,jj-511,2):gosub 21020 ' max mon intervall
  <-  jj=762:MonInterval=MIDGET(set$,jj-511,2):gosub 21020 ' max mon intervall
  ->  jj=762:ioctl 842, MIDGET(set$,jj-511,2):gosub 21020 ' max mon intervall
- MonInterval --> iostate(842)
  - Macro MonInterval in pos [42-52] ->     'if or(and(up(0)>30, up(8)=0), up(8)+MonInterval < up(0), d_id = 0) then 'saadaks midagi
  <-     'if or(and(up(0)>30, up(8)=0), up(8)+MonInterval < up(0), d_id = 0) then 'saadaks midagi
  ->     'if or(and(up(0)>30, up(8)=0), up(8)+iostate(842) < up(0), d_id = 0) then 'saadaks midagi
  - Macro MonInterval in pos [41-51] ->     if or(and(up(0)>30, up(8)=0), up(8)+MonInterval < up(0)) then ' esimene saatmine peale restarti    
  <-     if or(and(up(0)>30, up(8)=0), up(8)+MonInterval < up(0)) then ' esimene saatmine peale restarti    
  ->     if or(and(up(0)>30, up(8)=0), up(8)+iostate(842) < up(0)) then ' esimene saatmine peale restarti    
- CommFailDelay= --> ioctl 843, 
  - Macro CommFailDelay= in pos [9-22] ->  jj=566:CommFailDelay=60*MIDGET(set$,jj-511,1):gosub 21010 ' sisestada minutites, kasutada sekundites
  <-  jj=566:CommFailDelay=60*MIDGET(set$,jj-511,1):gosub 21010 ' sisestada minutites, kasutada sekundites
  ->  jj=566:ioctl 843, 60*MIDGET(set$,jj-511,1):gosub 21010 ' sisestada minutites, kasutada sekundites
  - Macro CommFailDelay= in pos [30-43] ->  if CommFailDelay<  180 then CommFailDelay=180
  <-  if CommFailDelay<  180 then CommFailDelay=180
  ->  if CommFailDelay<  180 then ioctl 843, 180
- CommFailDelay --> iostate(843)
  - Macro CommFailDelay in pos [75-87] ->     ' syslog "main: gprsuptime "+str$(GprsUptime)+", commfaildelay "+str$(CommFailDelay)+", uptime "+str$(up(0)),4 'ajutine
  <-     ' syslog "main: gprsuptime "+str$(GprsUptime)+", commfaildelay "+str$(CommFailDelay)+", uptime "+str$(up(0)),4 'ajutine
  ->     ' syslog "main: gprsuptime "+str$(GprsUptime)+", commfaildelay "+str$(iostate(843))+", uptime "+str$(up(0)),4 'ajutine
  - Macro CommFailDelay in pos [24-36] ->     'if and(GprsUptime>CommFailDelay, up(0)>LastCommTS+CommFailDelay) then ' udp saabumisi pole olnud
  <-     'if and(GprsUptime>CommFailDelay, up(0)>LastCommTS+CommFailDelay) then ' udp saabumisi pole olnud
  ->     'if and(GprsUptime>iostate(843), up(0)>LastCommTS+CommFailDelay) then ' udp saabumisi pole olnud
  - Macro CommFailDelay in pos [55-67] ->     'if and(GprsUptime>iostate(843), up(0)>LastCommTS+CommFailDelay) then ' udp saabumisi pole olnud
  <-     'if and(GprsUptime>iostate(843), up(0)>LastCommTS+CommFailDelay) then ' udp saabumisi pole olnud
  ->     'if and(GprsUptime>iostate(843), up(0)>LastCommTS+iostate(843)) then ' udp saabumisi pole olnud
  - Macro CommFailDelay in pos [19-31] ->     if and(up(14)>CommFailDelay, up(0)>up(5)+CommFailDelay) then ' udp saabumisi pole olnud
  <-     if and(up(14)>CommFailDelay, up(0)>up(5)+CommFailDelay) then ' udp saabumisi pole olnud
  ->     if and(up(14)>iostate(843), up(0)>up(5)+CommFailDelay) then ' udp saabumisi pole olnud
  - Macro CommFailDelay in pos [45-57] ->     if and(up(14)>iostate(843), up(0)>up(5)+CommFailDelay) then ' udp saabumisi pole olnud
  <-     if and(up(14)>iostate(843), up(0)>up(5)+CommFailDelay) then ' udp saabumisi pole olnud
  ->     if and(up(14)>iostate(843), up(0)>up(5)+iostate(843)) then ' udp saabumisi pole olnud
  - Macro CommFailDelay in pos [76-88] ->         syslog "main: GPRS power break due to comm loss longer than "+str$(CommFailDelay)+" s!",4
  <-         syslog "main: GPRS power break due to comm loss longer than "+str$(CommFailDelay)+" s!",4
  ->         syslog "main: GPRS power break due to comm loss longer than "+str$(iostate(843))+" s!",4
  - Macro CommFailDelay in pos [45-57] ->     if and(up(0)>UptimeDelay, up(0)>up(5)+3*CommFailDelay+120) then '  voib rebooti teha, kolmanda gprs restardi jarel andes enne 120s aega gprs kaivitumiseks
  <-     if and(up(0)>UptimeDelay, up(0)>up(5)+3*CommFailDelay+120) then '  voib rebooti teha, kolmanda gprs restardi jarel andes enne 120s aega gprs kaivitumiseks
  ->     if and(up(0)>UptimeDelay, up(0)>up(5)+3*iostate(843)+120) then '  voib rebooti teha, kolmanda gprs restardi jarel andes enne 120s aega gprs kaivitumiseks
  - Macro CommFailDelay in pos [78-90] ->         SYSLOG "GOING TO REBOOT due to comm failure for more than 3 x "+str$(CommFailDelay),1
  <-         SYSLOG "GOING TO REBOOT due to comm failure for more than 3 x "+str$(CommFailDelay),1
  ->         SYSLOG "GOING TO REBOOT due to comm failure for more than 3 x "+str$(iostate(843)),1
  - Macro CommFailDelay in pos [19-31] ->     if and(up(14)>CommFailDelay, up(0)>up(5)+CommFailDelay) then ' udp saabumisi pole olnud
  <-     if and(up(14)>CommFailDelay, up(0)>up(5)+CommFailDelay) then ' udp saabumisi pole olnud
  ->     if and(up(14)>iostate(843), up(0)>up(5)+CommFailDelay) then ' udp saabumisi pole olnud
  - Macro CommFailDelay in pos [45-57] ->     if and(up(14)>iostate(843), up(0)>up(5)+CommFailDelay) then ' udp saabumisi pole olnud
  <-     if and(up(14)>iostate(843), up(0)>up(5)+CommFailDelay) then ' udp saabumisi pole olnud
  ->     if and(up(14)>iostate(843), up(0)>up(5)+iostate(843)) then ' udp saabumisi pole olnud
  - Macro CommFailDelay in pos [88-100] ->             syslog "main: changing default gateway due to comm loss longer than "+str$(CommFailDelay)+" s!",4 ' vahetada B12..B15
  <-             syslog "main: changing default gateway due to comm loss longer than "+str$(CommFailDelay)+" s!",4 ' vahetada B12..B15
  ->             syslog "main: changing default gateway due to comm loss longer than "+str$(iostate(843))+" s!",4 ' vahetada B12..B15
  - Macro CommFailDelay in pos [5-17] ->  if CommFailDelay<  180 then ioctl 843, 180
  <-  if CommFailDelay<  180 then ioctl 843, 180
  ->  if iostate(843)<  180 then ioctl 843, 180
- CommFailReaction= --> ioctl 844, 
  - Macro CommFailReaction= in pos [9-25] ->  jj=555:CommFailReaction=MIDGET(set$,jj-511,1):gosub 21010
  <-  jj=555:CommFailReaction=MIDGET(set$,jj-511,1):gosub 21010
  ->  jj=555:ioctl 844, MIDGET(set$,jj-511,1):gosub 21010
- CommFailReaction --> iostate(844)
  - Macro CommFailReaction in pos [42-57] ->   ' syslog "main:commfailreaction="+str$(CommFailReaction),4 ' ajutine
  <-   ' syslog "main:commfailreaction="+str$(CommFailReaction),4 ' ajutine
  ->   ' syslog "main:commfailreaction="+str$(iostate(844)),4 ' ajutine
  - Macro CommFailReaction in pos [12-27] ->   if and(1,CommFailReaction) = 1 then ' gprs toitekatkestus on lubatud
  <-   if and(1,CommFailReaction) = 1 then ' gprs toitekatkestus on lubatud
  ->   if and(1,iostate(844)) = 1 then ' gprs toitekatkestus on lubatud
  - Macro CommFailReaction in pos [12-27] ->   if and(2,CommFailReaction) = 2 then ' reboot sidekatkestuse korral on lubatud, 3 x pikem katkestus vajalik kui gprs resetiks!
  <-   if and(2,CommFailReaction) = 2 then ' reboot sidekatkestuse korral on lubatud, 3 x pikem katkestus vajalik kui gprs resetiks!
  ->   if and(2,iostate(844)) = 2 then ' reboot sidekatkestuse korral on lubatud, 3 x pikem katkestus vajalik kui gprs resetiks!
  - Macro CommFailReaction in pos [12-27] ->   if and(8,CommFailReaction) then ' varulyysi kasutus on lubatud, side kontroll udp alusel. peaks kaasama ka tcp...
  <-   if and(8,CommFailReaction) then ' varulyysi kasutus on lubatud, side kontroll udp alusel. peaks kaasama ka tcp...
  ->   if and(8,iostate(844)) then ' varulyysi kasutus on lubatud, side kontroll udp alusel. peaks kaasama ka tcp...
- UptimeDelay= --> ioctl 845, 
  - Macro UptimeDelay= in pos [9-20] ->  jj=567:UptimeDelay=3600*MIDGET(set$,jj-511,1):gosub 21010 ' sisestada minutites, kasutada tundides
  <-  jj=567:UptimeDelay=3600*MIDGET(set$,jj-511,1):gosub 21010 ' sisestada minutites, kasutada tundides
  ->  jj=567:ioctl 845, 3600*MIDGET(set$,jj-511,1):gosub 21010 ' sisestada minutites, kasutada tundides
- UptimeDelay --> iostate(845)
  - Macro UptimeDelay in pos [39-49] ->     'syslog "main: uptimedelay "+str$(UptimeDelay)+", uptime "+str$(up(0))+", lastcommTS "+str$(LastCommTS),4 'ajutine
  <-     'syslog "main: uptimedelay "+str$(UptimeDelay)+", uptime "+str$(up(0))+", lastcommTS "+str$(LastCommTS),4 'ajutine
  ->     'syslog "main: uptimedelay "+str$(iostate(845))+", uptime "+str$(up(0))+", lastcommTS "+str$(LastCommTS),4 'ajutine
  - Macro UptimeDelay in pos [18-28] ->     if and(up(0)>UptimeDelay, up(0)>up(5)+3*iostate(843)+120) then '  voib rebooti teha, kolmanda gprs restardi jarel andes enne 120s aega gprs kaivitumiseks
  <-     if and(up(0)>UptimeDelay, up(0)>up(5)+3*iostate(843)+120) then '  voib rebooti teha, kolmanda gprs restardi jarel andes enne 120s aega gprs kaivitumiseks
  ->     if and(up(0)>iostate(845), up(0)>up(5)+3*iostate(843)+120) then '  voib rebooti teha, kolmanda gprs restardi jarel andes enne 120s aega gprs kaivitumiseks
- PrimGW[]= --> ioctl 845+, 
- PrimGW[] --> iostate(845+)
  - Macro PrimGW[] in pos [25-33] ->            if ping(str$(PrimGW[1])+"."+str$(PrimGW[2])+"."+str$(PrimGW[3])+"."+str$(PrimGW[4]),1000) > 0 then 'prim gw VASTAB, SAMAS LANis
  <-            if ping(str$(PrimGW[1])+"."+str$(PrimGW[2])+"."+str$(PrimGW[3])+"."+str$(PrimGW[4]),1000) > 0 then 'prim gw VASTAB, SAMAS LANis
  ->            if ping(str$(iostate(845+1))+"."+str$(PrimGW[2])+"."+str$(PrimGW[3])+"."+str$(PrimGW[4]),1000) > 0 then 'prim gw VASTAB, SAMAS LANis
  - Macro PrimGW[] in pos [50-58] ->            if ping(str$(iostate(845+1))+"."+str$(PrimGW[2])+"."+str$(PrimGW[3])+"."+str$(PrimGW[4]),1000) > 0 then 'prim gw VASTAB, SAMAS LANis
  <-            if ping(str$(iostate(845+1))+"."+str$(PrimGW[2])+"."+str$(PrimGW[3])+"."+str$(PrimGW[4]),1000) > 0 then 'prim gw VASTAB, SAMAS LANis
  ->            if ping(str$(iostate(845+1))+"."+str$(iostate(845+2))+"."+str$(PrimGW[3])+"."+str$(PrimGW[4]),1000) > 0 then 'prim gw VASTAB, SAMAS LANis
  - Macro PrimGW[] in pos [75-83] ->            if ping(str$(iostate(845+1))+"."+str$(iostate(845+2))+"."+str$(PrimGW[3])+"."+str$(PrimGW[4]),1000) > 0 then 'prim gw VASTAB, SAMAS LANis
  <-            if ping(str$(iostate(845+1))+"."+str$(iostate(845+2))+"."+str$(PrimGW[3])+"."+str$(PrimGW[4]),1000) > 0 then 'prim gw VASTAB, SAMAS LANis
  ->            if ping(str$(iostate(845+1))+"."+str$(iostate(845+2))+"."+str$(iostate(845+3))+"."+str$(PrimGW[4]),1000) > 0 then 'prim gw VASTAB, SAMAS LANis
  - Macro PrimGW[] in pos [100-108] ->            if ping(str$(iostate(845+1))+"."+str$(iostate(845+2))+"."+str$(iostate(845+3))+"."+str$(PrimGW[4]),1000) > 0 then 'prim gw VASTAB, SAMAS LANis
  <-            if ping(str$(iostate(845+1))+"."+str$(iostate(845+2))+"."+str$(iostate(845+3))+"."+str$(PrimGW[4]),1000) > 0 then 'prim gw VASTAB, SAMAS LANis
  ->            if ping(str$(iostate(845+1))+"."+str$(iostate(845+2))+"."+str$(iostate(845+3))+"."+str$(iostate(845+4)),1000) > 0 then 'prim gw VASTAB, SAMAS LANis
  - Macro PrimGW[] in pos [46-54] ->                 mr$="id:"+mac$+"\nB12:"+str$(PrimGW[1])+"\nB13:"+str$(PrimGW[2])+"\nB14:"+str$(PrimGW[3])+"\nB15:"+str$(PrimGW[4])+"\n":gosub 142:gosub 145
  <-                 mr$="id:"+mac$+"\nB12:"+str$(PrimGW[1])+"\nB13:"+str$(PrimGW[2])+"\nB14:"+str$(PrimGW[3])+"\nB15:"+str$(PrimGW[4])+"\n":gosub 142:gosub 145
  ->                 mr$="id:"+mac$+"\nB12:"+str$(iostate(845+1))+"\nB13:"+str$(PrimGW[2])+"\nB14:"+str$(PrimGW[3])+"\nB15:"+str$(PrimGW[4])+"\n":gosub 142:gosub 145
  - Macro PrimGW[] in pos [76-84] ->                 mr$="id:"+mac$+"\nB12:"+str$(iostate(845+1))+"\nB13:"+str$(PrimGW[2])+"\nB14:"+str$(PrimGW[3])+"\nB15:"+str$(PrimGW[4])+"\n":gosub 142:gosub 145
  <-                 mr$="id:"+mac$+"\nB12:"+str$(iostate(845+1))+"\nB13:"+str$(PrimGW[2])+"\nB14:"+str$(PrimGW[3])+"\nB15:"+str$(PrimGW[4])+"\n":gosub 142:gosub 145
  ->                 mr$="id:"+mac$+"\nB12:"+str$(iostate(845+1))+"\nB13:"+str$(iostate(845+2))+"\nB14:"+str$(PrimGW[3])+"\nB15:"+str$(PrimGW[4])+"\n":gosub 142:gosub 145
  - Macro PrimGW[] in pos [106-114] ->                 mr$="id:"+mac$+"\nB12:"+str$(iostate(845+1))+"\nB13:"+str$(iostate(845+2))+"\nB14:"+str$(PrimGW[3])+"\nB15:"+str$(PrimGW[4])+"\n":gosub 142:gosub 145
  <-                 mr$="id:"+mac$+"\nB12:"+str$(iostate(845+1))+"\nB13:"+str$(iostate(845+2))+"\nB14:"+str$(PrimGW[3])+"\nB15:"+str$(PrimGW[4])+"\n":gosub 142:gosub 145
  ->                 mr$="id:"+mac$+"\nB12:"+str$(iostate(845+1))+"\nB13:"+str$(iostate(845+2))+"\nB14:"+str$(iostate(845+3))+"\nB15:"+str$(PrimGW[4])+"\n":gosub 142:gosub 145
  - Macro PrimGW[] in pos [136-144] ->                 mr$="id:"+mac$+"\nB12:"+str$(iostate(845+1))+"\nB13:"+str$(iostate(845+2))+"\nB14:"+str$(iostate(845+3))+"\nB15:"+str$(PrimGW[4])+"\n":gosub 142:gosub 145
  <-                 mr$="id:"+mac$+"\nB12:"+str$(iostate(845+1))+"\nB13:"+str$(iostate(845+2))+"\nB14:"+str$(iostate(845+3))+"\nB15:"+str$(PrimGW[4])+"\n":gosub 142:gosub 145
  ->                 mr$="id:"+mac$+"\nB12:"+str$(iostate(845+1))+"\nB13:"+str$(iostate(845+2))+"\nB14:"+str$(iostate(845+3))+"\nB15:"+str$(iostate(845+4))+"\n":gosub 142:gosub 145
- SecondGW[]= --> ioctl 850+, 
- SecondGW[] --> iostate(850+)
  - Macro SecondGW[] in pos [62-72] ->         syslog "main: need to change gw to secondary! "+str$(SecondGW[1])+"."+str$(SecondGW[2])+"."+str$(SecondGW[3])+"."+str$(SecondGW[4]),4
  <-         syslog "main: need to change gw to secondary! "+str$(SecondGW[1])+"."+str$(SecondGW[2])+"."+str$(SecondGW[3])+"."+str$(SecondGW[4]),4
  ->         syslog "main: need to change gw to secondary! "+str$(iostate(850+1))+"."+str$(SecondGW[2])+"."+str$(SecondGW[3])+"."+str$(SecondGW[4]),4
  - Macro SecondGW[] in pos [87-97] ->         syslog "main: need to change gw to secondary! "+str$(iostate(850+1))+"."+str$(SecondGW[2])+"."+str$(SecondGW[3])+"."+str$(SecondGW[4]),4
  <-         syslog "main: need to change gw to secondary! "+str$(iostate(850+1))+"."+str$(SecondGW[2])+"."+str$(SecondGW[3])+"."+str$(SecondGW[4]),4
  ->         syslog "main: need to change gw to secondary! "+str$(iostate(850+1))+"."+str$(iostate(850+2))+"."+str$(SecondGW[3])+"."+str$(SecondGW[4]),4
  - Macro SecondGW[] in pos [112-122] ->         syslog "main: need to change gw to secondary! "+str$(iostate(850+1))+"."+str$(iostate(850+2))+"."+str$(SecondGW[3])+"."+str$(SecondGW[4]),4
  <-         syslog "main: need to change gw to secondary! "+str$(iostate(850+1))+"."+str$(iostate(850+2))+"."+str$(SecondGW[3])+"."+str$(SecondGW[4]),4
  ->         syslog "main: need to change gw to secondary! "+str$(iostate(850+1))+"."+str$(iostate(850+2))+"."+str$(iostate(850+3))+"."+str$(SecondGW[4]),4
  - Macro SecondGW[] in pos [137-147] ->         syslog "main: need to change gw to secondary! "+str$(iostate(850+1))+"."+str$(iostate(850+2))+"."+str$(iostate(850+3))+"."+str$(SecondGW[4]),4
  <-         syslog "main: need to change gw to secondary! "+str$(iostate(850+1))+"."+str$(iostate(850+2))+"."+str$(iostate(850+3))+"."+str$(SecondGW[4]),4
  ->         syslog "main: need to change gw to secondary! "+str$(iostate(850+1))+"."+str$(iostate(850+2))+"."+str$(iostate(850+3))+"."+str$(iostate(850+4)),4
  - Macro SecondGW[] in pos [22-32] ->         if ping(str$(SecondGW[1])+"."+str$(SecondGW[2])+"."+str$(SecondGW[3])+"."+str$(SecondGW[4]),1000) > 0 then 'GPRS RUUTER VASTAB, SAMAS LANis
  <-         if ping(str$(SecondGW[1])+"."+str$(SecondGW[2])+"."+str$(SecondGW[3])+"."+str$(SecondGW[4]),1000) > 0 then 'GPRS RUUTER VASTAB, SAMAS LANis
  ->         if ping(str$(iostate(850+1))+"."+str$(SecondGW[2])+"."+str$(SecondGW[3])+"."+str$(SecondGW[4]),1000) > 0 then 'GPRS RUUTER VASTAB, SAMAS LANis
  - Macro SecondGW[] in pos [47-57] ->         if ping(str$(iostate(850+1))+"."+str$(SecondGW[2])+"."+str$(SecondGW[3])+"."+str$(SecondGW[4]),1000) > 0 then 'GPRS RUUTER VASTAB, SAMAS LANis
  <-         if ping(str$(iostate(850+1))+"."+str$(SecondGW[2])+"."+str$(SecondGW[3])+"."+str$(SecondGW[4]),1000) > 0 then 'GPRS RUUTER VASTAB, SAMAS LANis
  ->         if ping(str$(iostate(850+1))+"."+str$(iostate(850+2))+"."+str$(SecondGW[3])+"."+str$(SecondGW[4]),1000) > 0 then 'GPRS RUUTER VASTAB, SAMAS LANis
  - Macro SecondGW[] in pos [72-82] ->         if ping(str$(iostate(850+1))+"."+str$(iostate(850+2))+"."+str$(SecondGW[3])+"."+str$(SecondGW[4]),1000) > 0 then 'GPRS RUUTER VASTAB, SAMAS LANis
  <-         if ping(str$(iostate(850+1))+"."+str$(iostate(850+2))+"."+str$(SecondGW[3])+"."+str$(SecondGW[4]),1000) > 0 then 'GPRS RUUTER VASTAB, SAMAS LANis
  ->         if ping(str$(iostate(850+1))+"."+str$(iostate(850+2))+"."+str$(iostate(850+3))+"."+str$(SecondGW[4]),1000) > 0 then 'GPRS RUUTER VASTAB, SAMAS LANis
  - Macro SecondGW[] in pos [97-107] ->         if ping(str$(iostate(850+1))+"."+str$(iostate(850+2))+"."+str$(iostate(850+3))+"."+str$(SecondGW[4]),1000) > 0 then 'GPRS RUUTER VASTAB, SAMAS LANis
  <-         if ping(str$(iostate(850+1))+"."+str$(iostate(850+2))+"."+str$(iostate(850+3))+"."+str$(SecondGW[4]),1000) > 0 then 'GPRS RUUTER VASTAB, SAMAS LANis
  ->         if ping(str$(iostate(850+1))+"."+str$(iostate(850+2))+"."+str$(iostate(850+3))+"."+str$(iostate(850+4)),1000) > 0 then 'GPRS RUUTER VASTAB, SAMAS LANis
  - Macro SecondGW[] in pos [42-52] ->             mr$="id:"+mac$+"\nB12:"+str$(SecondGW[1])+"\nB13:"+str$(SecondGW[2])+"\nB14:"+str$(SecondGW[3])+"\nB15:"+str$(SecondGW[4])+"\n":gosub 142:gosub 145
  <-             mr$="id:"+mac$+"\nB12:"+str$(SecondGW[1])+"\nB13:"+str$(SecondGW[2])+"\nB14:"+str$(SecondGW[3])+"\nB15:"+str$(SecondGW[4])+"\n":gosub 142:gosub 145
  ->             mr$="id:"+mac$+"\nB12:"+str$(iostate(850+1))+"\nB13:"+str$(SecondGW[2])+"\nB14:"+str$(SecondGW[3])+"\nB15:"+str$(SecondGW[4])+"\n":gosub 142:gosub 145
  - Macro SecondGW[] in pos [72-82] ->             mr$="id:"+mac$+"\nB12:"+str$(iostate(850+1))+"\nB13:"+str$(SecondGW[2])+"\nB14:"+str$(SecondGW[3])+"\nB15:"+str$(SecondGW[4])+"\n":gosub 142:gosub 145
  <-             mr$="id:"+mac$+"\nB12:"+str$(iostate(850+1))+"\nB13:"+str$(SecondGW[2])+"\nB14:"+str$(SecondGW[3])+"\nB15:"+str$(SecondGW[4])+"\n":gosub 142:gosub 145
  ->             mr$="id:"+mac$+"\nB12:"+str$(iostate(850+1))+"\nB13:"+str$(iostate(850+2))+"\nB14:"+str$(SecondGW[3])+"\nB15:"+str$(SecondGW[4])+"\n":gosub 142:gosub 145
  - Macro SecondGW[] in pos [102-112] ->             mr$="id:"+mac$+"\nB12:"+str$(iostate(850+1))+"\nB13:"+str$(iostate(850+2))+"\nB14:"+str$(SecondGW[3])+"\nB15:"+str$(SecondGW[4])+"\n":gosub 142:gosub 145
  <-             mr$="id:"+mac$+"\nB12:"+str$(iostate(850+1))+"\nB13:"+str$(iostate(850+2))+"\nB14:"+str$(SecondGW[3])+"\nB15:"+str$(SecondGW[4])+"\n":gosub 142:gosub 145
  ->             mr$="id:"+mac$+"\nB12:"+str$(iostate(850+1))+"\nB13:"+str$(iostate(850+2))+"\nB14:"+str$(iostate(850+3))+"\nB15:"+str$(SecondGW[4])+"\n":gosub 142:gosub 145
  - Macro SecondGW[] in pos [132-142] ->             mr$="id:"+mac$+"\nB12:"+str$(iostate(850+1))+"\nB13:"+str$(iostate(850+2))+"\nB14:"+str$(iostate(850+3))+"\nB15:"+str$(SecondGW[4])+"\n":gosub 142:gosub 145
  <-             mr$="id:"+mac$+"\nB12:"+str$(iostate(850+1))+"\nB13:"+str$(iostate(850+2))+"\nB14:"+str$(iostate(850+3))+"\nB15:"+str$(SecondGW[4])+"\n":gosub 142:gosub 145
  ->             mr$="id:"+mac$+"\nB12:"+str$(iostate(850+1))+"\nB13:"+str$(iostate(850+2))+"\nB14:"+str$(iostate(850+3))+"\nB15:"+str$(iostate(850+4))+"\n":gosub 142:gosub 145
  - Macro SecondGW[] in pos [10-20] ->   if and(SecondGW[1] = gw(0), SecondGW[2] = gw(1), SecondGW[3] = gw(2), SecondGW[4] = gw(3)) then '  kehtiv def gw on varuaadress!
  <-   if and(SecondGW[1] = gw(0), SecondGW[2] = gw(1), SecondGW[3] = gw(2), SecondGW[4] = gw(3)) then '  kehtiv def gw on varuaadress!
  ->   if and(iostate(850+1) = gw(0), SecondGW[2] = gw(1), SecondGW[3] = gw(2), SecondGW[4] = gw(3)) then '  kehtiv def gw on varuaadress!
  - Macro SecondGW[] in pos [34-44] ->   if and(iostate(850+1) = gw(0), SecondGW[2] = gw(1), SecondGW[3] = gw(2), SecondGW[4] = gw(3)) then '  kehtiv def gw on varuaadress!
  <-   if and(iostate(850+1) = gw(0), SecondGW[2] = gw(1), SecondGW[3] = gw(2), SecondGW[4] = gw(3)) then '  kehtiv def gw on varuaadress!
  ->   if and(iostate(850+1) = gw(0), iostate(850+2) = gw(1), SecondGW[3] = gw(2), SecondGW[4] = gw(3)) then '  kehtiv def gw on varuaadress!
  - Macro SecondGW[] in pos [58-68] ->   if and(iostate(850+1) = gw(0), iostate(850+2) = gw(1), SecondGW[3] = gw(2), SecondGW[4] = gw(3)) then '  kehtiv def gw on varuaadress!
  <-   if and(iostate(850+1) = gw(0), iostate(850+2) = gw(1), SecondGW[3] = gw(2), SecondGW[4] = gw(3)) then '  kehtiv def gw on varuaadress!
  ->   if and(iostate(850+1) = gw(0), iostate(850+2) = gw(1), iostate(850+3) = gw(2), SecondGW[4] = gw(3)) then '  kehtiv def gw on varuaadress!
  - Macro SecondGW[] in pos [82-92] ->   if and(iostate(850+1) = gw(0), iostate(850+2) = gw(1), iostate(850+3) = gw(2), SecondGW[4] = gw(3)) then '  kehtiv def gw on varuaadress!
  <-   if and(iostate(850+1) = gw(0), iostate(850+2) = gw(1), iostate(850+3) = gw(2), SecondGW[4] = gw(3)) then '  kehtiv def gw on varuaadress!
  ->   if and(iostate(850+1) = gw(0), iostate(850+2) = gw(1), iostate(850+3) = gw(2), iostate(850+4) = gw(3)) then '  kehtiv def gw on varuaadress!
- ReturnCode= --> ioctl 883, 
- ReturnCode --> iostate(883)
- InOldWd[]= --> ioctl 940+,
  - Macro InOldWd[]= in pos [4-16] -> 			InOldWd[mba]=InWd ' vana meelde
  <- 			InOldWd[mba]=InWd ' vana meelde
  -> 			ioctl 940+mba,InWd ' vana meelde
  - Macro InOldWd[]= in pos [2-12] -> 	InOldWd[0]=InWd 'jatame meelde
  <- 	InOldWd[0]=InWd 'jatame meelde
  -> 	ioctl 940+0,InWd 'jatame meelde
- InOldWd[] --> iostate(940+)
  - Macro InOldWd[] in pos [22-33] -> 		ichg(mba)=xor(InWd,InOldWd[mba]) ' mis muutus? mask, kui muutust pole, siis ichg() = 0
  <- 		ichg(mba)=xor(InWd,InOldWd[mba]) ' mis muutus? mask, kui muutust pole, siis ichg() = 0
  -> 		ichg(mba)=xor(InWd,iostate(940+mba)) ' mis muutus? mask, kui muutust pole, siis ichg() = 0
  - Macro InOldWd[] in pos [12-23] -> 		if InWd<>InOldWd[mba] then ' input change. tegelikult peaks kontrollima vaid maskile vastavate bittide muutust...
  <- 		if InWd<>InOldWd[mba] then ' input change. tegelikult peaks kontrollima vaid maskile vastavate bittide muutust...
  -> 		if InWd<>iostate(940+mba) then ' input change. tegelikult peaks kontrollima vaid maskile vastavate bittide muutust...
  - Macro InOldWd[] in pos [20-29] -> 	ichg(0)=xor(InWd, InOldWd[0]) 'mis muutus
  <- 	ichg(0)=xor(InWd, InOldWd[0]) 'mis muutus
  -> 	ichg(0)=xor(InWd, iostate(940+0)) 'mis muutus
  - Macro InOldWd[] in pos [84-93] -> 	syslog "chd_tegu: bn InWd "+sprintf$("%06x",InWd)+", inoldwd[0] "+sprintf$("%06x",InOldWd[0]),5 'ajutine
  <- 	syslog "chd_tegu: bn InWd "+sprintf$("%06x",InWd)+", inoldwd[0] "+sprintf$("%06x",InOldWd[0]),5 'ajutine
  -> 	syslog "chd_tegu: bn InWd "+sprintf$("%06x",InWd)+", inoldwd[0] "+sprintf$("%06x",iostate(940+0)),5 'ajutine
- OutOldWd[]= --> ioctl 950+,
  - Macro OutOldWd[]= in pos [3-16] -> 		OutOldWd[mba]=OutWd ' jatame valjundi meelde
  <- 		OutOldWd[mba]=OutWd ' jatame valjundi meelde
  -> 		ioctl 950+mba,OutWd ' jatame valjundi meelde
- OutOldWd[] --> iostate(950+)
  - Macro OutOldWd[] in pos [17-29] -> 		' if OutWd <> OutOldWd[mba] then ' on toimunud valjundi virt reg muudatus, teeme mb jaoks baidid 
  <- 		' if OutWd <> OutOldWd[mba] then ' on toimunud valjundi virt reg muudatus, teeme mb jaoks baidid 
  -> 		' if OutWd <> iostate(950+mba) then ' on toimunud valjundi virt reg muudatus, teeme mb jaoks baidid 
  - Macro OutOldWd[] in pos [19-31] -> 			ochg=xor(OutWd,OutOldWd[mba]) ' mis muutus? kuid see on muutus jrk sees, mitte modbus registrites!! SEE EI HUVITA!
  <- 			ochg=xor(OutWd,OutOldWd[mba]) ' mis muutus? kuid see on muutus jrk sees, mitte modbus registrites!! SEE EI HUVITA!
  -> 			ochg=xor(OutWd,iostate(950+mba)) ' mis muutus? kuid see on muutus jrk sees, mitte modbus registrites!! SEE EI HUVITA!

Preprocessor: Finish

Tokenization: Start

Tokenization: First pass for labels used in GOTO/GOSUB/RETURN
    Statement Label
        GOSUB 5000
        GOSUB 15000
        GOSUB 9900
        GOSUB 110
        GOSUB 270
        GOSUB 330
        GOSUB 21000
        GOSUB 20100
        GOSUB 275
        GOSUB 142
        GOSUB 145
        GOSUB 110
        GOSUB 22000
        GOSUB 150
        GOSUB 270
        GOSUB 270
        GOSUB 32000
        GOSUB 270
        GOSUB 142
        GOSUB 145
        GOSUB 142
        GOSUB 145
        GOSUB 5950
         GOTO 100
        GOSUB 270
        GOSUB 109
        GOSUB 109
        GOSUB 21010
        GOSUB 21010
        GOSUB 21010
        GOSUB 21020
        GOSUB 21010
        GOSUB 21010
        GOSUB 21010
        GOSUB 21010
        GOSUB 21020
        GOSUB 109
        GOSUB 21020
        GOSUB 21020
        GOSUB 21020
        GOSUB 21010
        GOSUB 21010
        GOSUB 21010
        GOSUB 21010
        GOSUB 21010
        GOSUB 21010
        GOSUB 21010
        GOSUB 21010
        GOSUB 21010
        GOSUB 21010
        GOSUB 21020
        GOSUB 21020
        GOSUB 21010
        GOSUB 21010
        GOSUB 21010
        GOSUB 21010
        GOSUB 21020
        GOSUB 21020
        GOSUB 21010
        GOSUB 21010
        GOSUB 21010
        GOSUB 270
        GOSUB 109
        GOSUB 109
        GOSUB 109
        GOSUB 13000
        GOSUB 13000
        GOSUB 13000
        GOSUB 13000
        GOSUB 270
        GOSUB 11000
        GOSUB 270
        GOSUB 10142
        GOSUB 13000
        GOSUB 13000
        GOSUB 10270
        GOSUB 13000
         GOTO 149
         GOTO 148
         GOTO 148
        GOSUB 109
        GOSUB 109
        GOSUB 109
         GOTO 149
         GOTO 149
         GOTO 149
        GOSUB 270
        GOSUB 270
        GOSUB 1800
        GOSUB 1200
        GOSUB 1150
        GOSUB 1700
        GOSUB 1150
         GOTO 1020
        GOSUB 1600
         GOTO 1020
        GOSUB 1050
        GOSUB 1200
        GOSUB 1150
        GOSUB 1700
        GOSUB 1150
         GOTO 1020
        GOSUB 109
        GOSUB 1250
         GOTO 1705
         GOTO 1702
        GOSUB 1250
        GOSUB 1150
        GOSUB 1200
        GOSUB 1150
        GOSUB 1700
        GOSUB 1150
        GOSUB 1200
        GOSUB 1150
        GOSUB 1700
        GOSUB 1150
        GOSUB 1200
        GOSUB 1150
        GOSUB 1700
        GOSUB 1150
        GOSUB 1200
        GOSUB 1150
        GOSUB 1700
        GOSUB 1150
        GOSUB 5250
        GOSUB 5250
        GOSUB 5250
        GOSUB 5250
        GOSUB 5250
         GOTO 5252
        GOSUB 31000
        GOSUB 11200
         GOTO 11003
        GOSUB 11200
         GOTO 11001
        GOSUB 11100
         GOTO 13001
        GOSUB 142
        GOSUB 145
        GOSUB 270
        GOSUB 270
        GOSUB 21010
        GOSUB 21010
        GOSUB 21010
        GOSUB 21020
        GOSUB 21010
        GOSUB 21020
        GOSUB 21010
        GOSUB 21010
        GOSUB 21020
        GOSUB 21010
        GOSUB 21020
        GOSUB 21020
        GOSUB 21020
        GOSUB 21020
        GOSUB 21020
        GOSUB 21010
        GOSUB 21020
        GOSUB 21010
        GOSUB 21010
        GOSUB 21010
        GOSUB 270
        GOSUB 109
        GOSUB 109
        GOSUB 270
        GOSUB 270
        GOSUB 275
        GOSUB 270
        GOSUB 275
        GOSUB 275
        GOSUB 140
        GOSUB 110
        GOSUB 142
        GOSUB 145
        GOSUB 10140
        GOSUB 1000
        GOSUB 10000
        GOSUB 31000
        GOSUB 270
        GOSUB 270
        GOSUB 275
        GOSUB 135
        GOSUB 134
        GOSUB 270
        GOSUB 275
        GOSUB 5200
        GOSUB 270
        GOSUB 275

Tokenization: Second pass for main tokenization
Warning: DIM _TMR_(4) is already fulfiled by tokenizer itself
Warning: this name is used by default without DIM declaration (MONPORT1)
Warning: this name is used by default without DIM declaration (MONPORT2)
Warning: this name is used by default without DIM declaration (MONPORT3)
Warning: this name is used by default without DIM declaration (MBMAX)
Warning: this name is used by default without DIM declaration (_DTS_)
Label=100,offset=0x859
Warning: this name is used by default without DIM declaration (OIN)
Label=109,offset=0xe7b
Warning: this name is used by default without DIM declaration (NFRAG)
Label=110,offset=0xf0f
Warning: this name is used by default without DIM declaration (JJ)
Warning: this name is used by default without DIM declaration (MONMODE)
Warning: this name is used by default without DIM declaration (MBAX)
Warning: this name is used by default without DIM declaration (THYST)
Warning: this name is used by default without DIM declaration (THERMOINTERVAL)
Warning: this name is used by default without DIM declaration (CHAN)
Warning: this name is used by default without DIM declaration (AILEVEL)
Label=115,offset=0x0
Warning: this name is used by default without DIM declaration (UK)
Label=134,offset=0x19c7
Label=135,offset=0x19d7
Label=136,offset=0x0
Label=140,offset=0x19fb
Label=142,offset=0x1b7d
Label=10140,offset=0x2088
Warning: this name is used by default without DIM declaration (MR3$)
Label=10142,offset=0x2187
Label=145,offset=0x2385
Warning: this name is used by default without DIM declaration (POS)
Label=147,offset=0x0
Label=148,offset=0x28e9
Label=149,offset=0x2b83
Label=150,offset=0x2c4d
Warning: this name is used by default without DIM declaration (MONTHNUMBER)
Warning: this name is used by default without DIM declaration (DAYOFMONTH)
Warning: this name is used by default without DIM declaration (HOUROFDAY)
Warning: this name is used by default without DIM declaration (WEEKDAY)
Warning: this name is used by default without DIM declaration (TIMEZONE)
Warning: this name is used by default without DIM declaration (NMIN)
Warning: this name is used by default without DIM declaration (NHOUR)
Warning: this name is used by default without DIM declaration (NWDAY)
Label=270,offset=0x2eb6
Warning: this name is used by default without DIM declaration (M_ID)
Label=275,offset=0x2fad
Label=10270,offset=0x3095
Label=300,offset=0x0
Label=330,offset=0x319d
Warning: this name is used by default without DIM declaration (TIMERTEMP)
Label=1000,offset=0x328f
Warning: this name is used by default without DIM declaration (IJRK)
Warning: this name is used by default without DIM declaration (OJRK)
Warning: this name is used by default without DIM declaration (MBA)
Warning: this name is used by default without DIM declaration (MLEN)
Warning: this name is used by default without DIM declaration (EXPLEN)
Warning: this name is used by default without DIM declaration (FBWD)
Warning: this name is used by default without DIM declaration (INHI)
Warning: this name is used by default without DIM declaration (INLO)
Warning: this name is used by default without DIM declaration (INWD)
Warning: this name is used by default without DIM declaration (IHII)
Label=1010,offset=0x0
Warning: this name is used by default without DIM declaration (OUTWD)
Warning: this name is used by default without DIM declaration (ABIOUT)
Warning: this name is used by default without DIM declaration (OCHG)
Warning: this name is used by default without DIM declaration (OUTLO)
Warning: this name is used by default without DIM declaration (OUTHI)
Label=1020,offset=0x3b96
Label=1022,offset=0x0
Warning: this name is used by default without DIM declaration (OMAX)
Label=1050,offset=0x3d05
Label=1100,offset=0x0
Label=1150,offset=0x3da8
Warning: this name is used by default without DIM declaration (Y)
Label=1200,offset=0x3e16
Warning: this name is used by default without DIM declaration (TMP$)
Warning: this name is used by default without DIM declaration (CRC)
Label=1250,offset=0x3ecd
Warning: this name is used by default without DIM declaration (K)
Label=1600,offset=0x3f3b
Label=1700,offset=0x3f7c
Label=1702,offset=0x3f7e
Label=1705,offset=0x405d
Label=1800,offset=0x4145
Label=5000,offset=0x4af5
Label=5200,offset=0x4b7f
Label=5250,offset=0x5494
Warning: this name is used by default without DIM declaration (TMP)
Label=5252,offset=0x54a9
Label=5950,offset=0x54e1
Warning: this name is used by default without DIM declaration (OMIN)
Label=9900,offset=0x556d
Label=10000,offset=0x5616
Label=11000,offset=0x57df
Label=11001,offset=0x5827
Label=11003,offset=0x58a4
Label=11100,offset=0x58af
Warning: this name is used by default without DIM declaration (EXIT)
Label=11200,offset=0x5a29
Label=13000,offset=0x5ac4
Label=13001,offset=0x5baa
Label=15000,offset=0x5c46
Warning: this name is used by default without DIM declaration (_ERR_)
Warning: this name is used by default without DIM declaration (_ERL_)
Label=20100,offset=0x5d75
Warning: this name is used by default without DIM declaration (NUM)
Label=21000,offset=0x5ef6
Warning: this name is used by default without DIM declaration (JK)
Label=21010,offset=0x606a
Label=21020,offset=0x60f5
Label=22000,offset=0x6183
Label=31000,offset=0x61f1
Warning: this name is used by default without DIM declaration (TMPSTATUS)
Label=31002,offset=0x0
Label=32000,offset=0x6e4e
Code tokenized, size=0x7464

Tokenization: Third pass for label offsets used in GOTO/GOSUB/RETURN
    Statement Label --> Offset in tokenized code
        GOSUB 15000 --> 0x5C46 (23622 bytes)
        GOSUB 9900  --> 0x556D (21869 bytes)
        GOSUB 110   --> 0x0F0F ( 3855 bytes)
        GOSUB 270   --> 0x2EB6 (11958 bytes)
        GOSUB 330   --> 0x319D (12701 bytes)
        GOSUB 21000 --> 0x5EF6 (24310 bytes)
        GOSUB 20100 --> 0x5D75 (23925 bytes)
        GOSUB 275   --> 0x2FAD (12205 bytes)
        GOSUB 142   --> 0x1B7D ( 7037 bytes)
        GOSUB 145   --> 0x2385 ( 9093 bytes)
        GOSUB 110   --> 0x0F0F ( 3855 bytes)
        GOSUB 22000 --> 0x6183 (24963 bytes)
        GOSUB 150   --> 0x2C4D (11341 bytes)
        GOSUB 270   --> 0x2EB6 (11958 bytes)
        GOSUB 270   --> 0x2EB6 (11958 bytes)
        GOSUB 32000 --> 0x6E4E (28238 bytes)
        GOSUB 270   --> 0x2EB6 (11958 bytes)
        GOSUB 142   --> 0x1B7D ( 7037 bytes)
        GOSUB 145   --> 0x2385 ( 9093 bytes)
        GOSUB 142   --> 0x1B7D ( 7037 bytes)
        GOSUB 145   --> 0x2385 ( 9093 bytes)
        GOSUB 5950  --> 0x54E1 (21729 bytes)
         GOTO 100   --> 0x0859 ( 2137 bytes)
        GOSUB 270   --> 0x2EB6 (11958 bytes)
        GOSUB 109   --> 0x0E7B ( 3707 bytes)
        GOSUB 109   --> 0x0E7B ( 3707 bytes)
        GOSUB 21010 --> 0x606A (24682 bytes)
        GOSUB 21010 --> 0x606A (24682 bytes)
        GOSUB 21010 --> 0x606A (24682 bytes)
        GOSUB 21020 --> 0x60F5 (24821 bytes)
        GOSUB 21010 --> 0x606A (24682 bytes)
        GOSUB 21010 --> 0x606A (24682 bytes)
        GOSUB 21010 --> 0x606A (24682 bytes)
        GOSUB 21010 --> 0x606A (24682 bytes)
        GOSUB 21020 --> 0x60F5 (24821 bytes)
        GOSUB 109   --> 0x0E7B ( 3707 bytes)
        GOSUB 21020 --> 0x60F5 (24821 bytes)
        GOSUB 21020 --> 0x60F5 (24821 bytes)
        GOSUB 21020 --> 0x60F5 (24821 bytes)
        GOSUB 21010 --> 0x606A (24682 bytes)
        GOSUB 21010 --> 0x606A (24682 bytes)
        GOSUB 21010 --> 0x606A (24682 bytes)
        GOSUB 21010 --> 0x606A (24682 bytes)
        GOSUB 21010 --> 0x606A (24682 bytes)
        GOSUB 21010 --> 0x606A (24682 bytes)
        GOSUB 21010 --> 0x606A (24682 bytes)
        GOSUB 21010 --> 0x606A (24682 bytes)
        GOSUB 21010 --> 0x606A (24682 bytes)
        GOSUB 21010 --> 0x606A (24682 bytes)
        GOSUB 21020 --> 0x60F5 (24821 bytes)
        GOSUB 21020 --> 0x60F5 (24821 bytes)
        GOSUB 21010 --> 0x606A (24682 bytes)
        GOSUB 21010 --> 0x606A (24682 bytes)
        GOSUB 21010 --> 0x606A (24682 bytes)
        GOSUB 21010 --> 0x606A (24682 bytes)
        GOSUB 21020 --> 0x60F5 (24821 bytes)
        GOSUB 21020 --> 0x60F5 (24821 bytes)
        GOSUB 21010 --> 0x606A (24682 bytes)
        GOSUB 21010 --> 0x606A (24682 bytes)
        GOSUB 21010 --> 0x606A (24682 bytes)
        GOSUB 270   --> 0x2EB6 (11958 bytes)
        GOSUB 109   --> 0x0E7B ( 3707 bytes)
        GOSUB 109   --> 0x0E7B ( 3707 bytes)
        GOSUB 109   --> 0x0E7B ( 3707 bytes)
        GOSUB 13000 --> 0x5AC4 (23236 bytes)
        GOSUB 13000 --> 0x5AC4 (23236 bytes)
        GOSUB 13000 --> 0x5AC4 (23236 bytes)
        GOSUB 13000 --> 0x5AC4 (23236 bytes)
        GOSUB 270   --> 0x2EB6 (11958 bytes)
        GOSUB 11000 --> 0x57DF (22495 bytes)
        GOSUB 270   --> 0x2EB6 (11958 bytes)
        GOSUB 10142 --> 0x2187 ( 8583 bytes)
        GOSUB 13000 --> 0x5AC4 (23236 bytes)
        GOSUB 13000 --> 0x5AC4 (23236 bytes)
        GOSUB 10270 --> 0x3095 (12437 bytes)
        GOSUB 13000 --> 0x5AC4 (23236 bytes)
         GOTO 149   --> 0x2B83 (11139 bytes)
         GOTO 148   --> 0x28E9 (10473 bytes)
         GOTO 148   --> 0x28E9 (10473 bytes)
        GOSUB 109   --> 0x0E7B ( 3707 bytes)
        GOSUB 109   --> 0x0E7B ( 3707 bytes)
        GOSUB 109   --> 0x0E7B ( 3707 bytes)
         GOTO 149   --> 0x2B83 (11139 bytes)
         GOTO 149   --> 0x2B83 (11139 bytes)
         GOTO 149   --> 0x2B83 (11139 bytes)
        GOSUB 270   --> 0x2EB6 (11958 bytes)
        GOSUB 270   --> 0x2EB6 (11958 bytes)
        GOSUB 1800  --> 0x4145 (16709 bytes)
        GOSUB 1200  --> 0x3E16 (15894 bytes)
        GOSUB 1150  --> 0x3DA8 (15784 bytes)
        GOSUB 1700  --> 0x3F7C (16252 bytes)
        GOSUB 1150  --> 0x3DA8 (15784 bytes)
         GOTO 1020  --> 0x3B96 (15254 bytes)
        GOSUB 1600  --> 0x3F3B (16187 bytes)
         GOTO 1020  --> 0x3B96 (15254 bytes)
        GOSUB 1050  --> 0x3D05 (15621 bytes)
        GOSUB 1200  --> 0x3E16 (15894 bytes)
        GOSUB 1150  --> 0x3DA8 (15784 bytes)
        GOSUB 1700  --> 0x3F7C (16252 bytes)
        GOSUB 1150  --> 0x3DA8 (15784 bytes)
         GOTO 1020  --> 0x3B96 (15254 bytes)
        GOSUB 109   --> 0x0E7B ( 3707 bytes)
        GOSUB 1250  --> 0x3ECD (16077 bytes)
         GOTO 1705  --> 0x405D (16477 bytes)
         GOTO 1702  --> 0x3F7E (16254 bytes)
        GOSUB 1250  --> 0x3ECD (16077 bytes)
        GOSUB 1150  --> 0x3DA8 (15784 bytes)
        GOSUB 1200  --> 0x3E16 (15894 bytes)
        GOSUB 1150  --> 0x3DA8 (15784 bytes)
        GOSUB 1700  --> 0x3F7C (16252 bytes)
        GOSUB 1150  --> 0x3DA8 (15784 bytes)
        GOSUB 1200  --> 0x3E16 (15894 bytes)
        GOSUB 1150  --> 0x3DA8 (15784 bytes)
        GOSUB 1700  --> 0x3F7C (16252 bytes)
        GOSUB 1150  --> 0x3DA8 (15784 bytes)
        GOSUB 1200  --> 0x3E16 (15894 bytes)
        GOSUB 1150  --> 0x3DA8 (15784 bytes)
        GOSUB 1700  --> 0x3F7C (16252 bytes)
        GOSUB 1150  --> 0x3DA8 (15784 bytes)
        GOSUB 1200  --> 0x3E16 (15894 bytes)
        GOSUB 1150  --> 0x3DA8 (15784 bytes)
        GOSUB 1700  --> 0x3F7C (16252 bytes)
        GOSUB 1150  --> 0x3DA8 (15784 bytes)
        GOSUB 5250  --> 0x5494 (21652 bytes)
        GOSUB 5250  --> 0x5494 (21652 bytes)
        GOSUB 5250  --> 0x5494 (21652 bytes)
        GOSUB 5250  --> 0x5494 (21652 bytes)
        GOSUB 5250  --> 0x5494 (21652 bytes)
         GOTO 5252  --> 0x54A9 (21673 bytes)
        GOSUB 31000 --> 0x61F1 (25073 bytes)
        GOSUB 11200 --> 0x5A29 (23081 bytes)
         GOTO 11003 --> 0x58A4 (22692 bytes)
        GOSUB 11200 --> 0x5A29 (23081 bytes)
         GOTO 11001 --> 0x5827 (22567 bytes)
        GOSUB 11100 --> 0x58AF (22703 bytes)
         GOTO 13001 --> 0x5BAA (23466 bytes)
        GOSUB 142   --> 0x1B7D ( 7037 bytes)
        GOSUB 145   --> 0x2385 ( 9093 bytes)
        GOSUB 270   --> 0x2EB6 (11958 bytes)
        GOSUB 270   --> 0x2EB6 (11958 bytes)
        GOSUB 21010 --> 0x606A (24682 bytes)
        GOSUB 21010 --> 0x606A (24682 bytes)
        GOSUB 21010 --> 0x606A (24682 bytes)
        GOSUB 21020 --> 0x60F5 (24821 bytes)
        GOSUB 21010 --> 0x606A (24682 bytes)
        GOSUB 21020 --> 0x60F5 (24821 bytes)
        GOSUB 21010 --> 0x606A (24682 bytes)
        GOSUB 21010 --> 0x606A (24682 bytes)
        GOSUB 21020 --> 0x60F5 (24821 bytes)
        GOSUB 21010 --> 0x606A (24682 bytes)
        GOSUB 21020 --> 0x60F5 (24821 bytes)
        GOSUB 21020 --> 0x60F5 (24821 bytes)
        GOSUB 21020 --> 0x60F5 (24821 bytes)
        GOSUB 21020 --> 0x60F5 (24821 bytes)
        GOSUB 21020 --> 0x60F5 (24821 bytes)
        GOSUB 21010 --> 0x606A (24682 bytes)
        GOSUB 21020 --> 0x60F5 (24821 bytes)
        GOSUB 21010 --> 0x606A (24682 bytes)
        GOSUB 21010 --> 0x606A (24682 bytes)
        GOSUB 21010 --> 0x606A (24682 bytes)
        GOSUB 270   --> 0x2EB6 (11958 bytes)
        GOSUB 109   --> 0x0E7B ( 3707 bytes)
        GOSUB 109   --> 0x0E7B ( 3707 bytes)
        GOSUB 270   --> 0x2EB6 (11958 bytes)
        GOSUB 270   --> 0x2EB6 (11958 bytes)
        GOSUB 275   --> 0x2FAD (12205 bytes)
        GOSUB 270   --> 0x2EB6 (11958 bytes)
        GOSUB 275   --> 0x2FAD (12205 bytes)
        GOSUB 275   --> 0x2FAD (12205 bytes)
        GOSUB 140   --> 0x19FB ( 6651 bytes)
        GOSUB 110   --> 0x0F0F ( 3855 bytes)
        GOSUB 142   --> 0x1B7D ( 7037 bytes)
        GOSUB 145   --> 0x2385 ( 9093 bytes)
        GOSUB 10140 --> 0x2088 ( 8328 bytes)
        GOSUB 1000  --> 0x328F (12943 bytes)
        GOSUB 10000 --> 0x5616 (22038 bytes)
        GOSUB 31000 --> 0x61F1 (25073 bytes)
        GOSUB 270   --> 0x2EB6 (11958 bytes)
        GOSUB 270   --> 0x2EB6 (11958 bytes)
        GOSUB 275   --> 0x2FAD (12205 bytes)
        GOSUB 135   --> 0x19D7 ( 6615 bytes)
        GOSUB 134   --> 0x19C7 ( 6599 bytes)
        GOSUB 270   --> 0x2EB6 (11958 bytes)
        GOSUB 275   --> 0x2FAD (12205 bytes)
        GOSUB 5200  --> 0x4B7F (19327 bytes)
        GOSUB 270   --> 0x2EB6 (11958 bytes)
        GOSUB 275   --> 0x2FAD (12205 bytes)
        GOSUB 5000  --> 0x4AF5 (19189 bytes) : FUNCTION BIT2B()

Tokenization: Fourth pass for checking multiline IF...ENDIF

Tokenization: Fifth pass for compiling 
Updating jump offsets in IF...THEN...ELSE...ENDIF

Tokenization: Finish

Memory allocation after tokenization 29796:, 004D96A8 004D2244,start=004D0020

Memory allocation after tokenization:

Table of already allocated long variables or arrays:
----------------------------------------------------------------
 N (Row_M,Col_M)  Size Offset in data area DIM Source name
----------------------------------------------------------------
 1 (    4,    0)    20 0x0000 (    0 bytes)  + _TMR_
 2 (    0,    0)     4 0x010C (  268 bytes)  + UKU
 3 (    0,    0)     4 0x0110 (  272 bytes)  + UKK
 4 (    0,    0)     4 0x0114 (  276 bytes)  + I
 5 (    0,    0)     4 0x0118 (  280 bytes)  + KI
 6 (    0,    0)     4 0x011C (  284 bytes)  + J
 7 (    0,    0)     4 0x0120 (  288 bytes)  + N
 8 (    0,    0)     4 0x0124 (  292 bytes)  + RK
 9 (   15,    0)    64 0x035A (  858 bytes)  + UP
10 (    9,    0)    40 0x039A (  922 bytes)  + TS
11 (    4,    0)    20 0x0894 ( 2196 bytes)  + TRAFFIC
12 (    7,    0)    32 0x0E95 ( 3733 bytes)  + DEL
13 (   50,    0)   204 0x0EDF ( 3807 bytes)  + CHN
14 (   50,    0)   204 0x0FAB ( 4011 bytes)  + CHD
15 (    4,    0)    20 0x1077 ( 4215 bytes)  + MBSTA
16 (    4,    0)    20 0x108B ( 4235 bytes)  + MBTS
17 (    4,    0)    20 0x11CB ( 4555 bytes)  + IMASK
18 (    4,    0)    20 0x11DF ( 4575 bytes)  + ICHG
19 (    2,    0)    12 0x11F3 ( 4595 bytes)  + OMASK
20 (    2,    0)    12 0x11FF ( 4607 bytes)  + ESER1
21 (    2,    0)    12 0x120B ( 4619 bytes)  + ESER2
22 (    2,    0)    12 0x1217 ( 4631 bytes)  + ICNT
23 (    2,    0)    12 0x1223 ( 4643 bytes)  + OCNT
24 (    2,    0)    12 0x122F ( 4655 bytes)  + PREF
25 (    2,    0)    12 0x123B ( 4667 bytes)  + SUFF
26 (   10,    0)    44 0x1247 ( 4679 bytes)  + MB
27 (    8,    0)    36 0x1273 ( 4723 bytes)  + ADATA
28 (    8,    0)    36 0x1297 ( 4759 bytes)  + TMASK
29 (    4,    0)    20 0x12BB ( 4795 bytes)  + MBCHFROM
30 (    4,    0)    20 0x12CF ( 4815 bytes)  + EXTENSIONTYPE
31 (    3,    0)    16 0x12E3 ( 4835 bytes)  + TSET
32 (    3,    0)    16 0x12F3 ( 4851 bytes)  + TACTUAL
33 (    2,    0)    12 0x1303 ( 4867 bytes)  + TVIRT1
34 (    2,    0)    12 0x130F ( 4879 bytes)  + TVIRT2
35 (    3,    0)    16 0x131B ( 4891 bytes)  + VIRTMEM
36 (    3,    0)    16 0x132B ( 4907 bytes)  + TERROR
37 (    3,    0)    16 0x133B ( 4923 bytes)  + TACTUAL_LAST
38 (    3,    0)    16 0x134B ( 4939 bytes)  + TMAX
39 (    5,    0)    24 0x135B ( 4955 bytes)  + TSENSNO
40 (    3,    0)    16 0x1373 ( 4979 bytes)  + TSETNORM
41 (    3,    0)    16 0x1383 ( 4995 bytes)  + ZONEHI
42 (    3,    0)    16 0x1393 ( 5011 bytes)  + ZONEHITS
43 (    3,    0)    16 0x13A3 ( 5027 bytes)  + COOLING
44 (    3,    0)    16 0x13B3 ( 5043 bytes)  + COOLENABLE
45 (    0,    0)     4 0x13C3 ( 5059 bytes)  + ZONE
46 (    0,    0)     4 0x13C7 ( 5063 bytes)  + TSETADD
47 (    0,    0)     4 0x13CB ( 5067 bytes)  + TSETHILEN
48 (    3,    0)    16 0x13FF ( 5119 bytes)  + THRE
49 (    3,    0)    16 0x140F ( 5135 bytes)  + GW
50 (    0,    0)     4 0x141F ( 5151 bytes)  * BIT2B
51 (    0,    0)     4 0x1423 ( 5155 bytes)  - MONPORT1
52 (    0,    0)     4 0x1427 ( 5159 bytes)  - MONPORT2
53 (    0,    0)     4 0x142B ( 5163 bytes)  - MONPORT3
54 (    0,    0)     4 0x142F ( 5167 bytes)  - MBMAX
55 (    0,    0)     4 0x1433 ( 5171 bytes)  - _DTS_
56 (    0,    0)     4 0x1437 ( 5175 bytes)  - OIN
57 (    0,    0)     4 0x143B ( 5179 bytes)  - NFRAG
58 (    0,    0)     4 0x143F ( 5183 bytes)  - JJ
59 (    0,    0)     4 0x1443 ( 5187 bytes)  - MONMODE
60 (    0,    0)     4 0x1447 ( 5191 bytes)  - MBAX
61 (    0,    0)     4 0x144B ( 5195 bytes)  - THYST
62 (    0,    0)     4 0x144F ( 5199 bytes)  - THERMOINTERVAL
63 (    0,    0)     4 0x1453 ( 5203 bytes)  - CHAN
64 (    0,    0)     4 0x1457 ( 5207 bytes)  - AILEVEL
65 (    0,    0)     4 0x145B ( 5211 bytes)  - UK
66 (    0,    0)     4 0x155F ( 5471 bytes)  - POS
67 (    0,    0)     4 0x1563 ( 5475 bytes)  - MONTHNUMBER
68 (    0,    0)     4 0x1567 ( 5479 bytes)  - DAYOFMONTH
69 (    0,    0)     4 0x156B ( 5483 bytes)  - HOUROFDAY
70 (    0,    0)     4 0x156F ( 5487 bytes)  - WEEKDAY
71 (    0,    0)     4 0x1573 ( 5491 bytes)  - TIMEZONE
72 (    0,    0)     4 0x1577 ( 5495 bytes)  - NMIN
73 (    0,    0)     4 0x157B ( 5499 bytes)  - NHOUR
74 (    0,    0)     4 0x157F ( 5503 bytes)  - NWDAY
75 (    0,    0)     4 0x1583 ( 5507 bytes)  - M_ID
76 (    0,    0)     4 0x1587 ( 5511 bytes)  - TIMERTEMP
77 (    0,    0)     4 0x158B ( 5515 bytes)  - IJRK
78 (    0,    0)     4 0x158F ( 5519 bytes)  - OJRK
79 (    0,    0)     4 0x1593 ( 5523 bytes)  - MBA
80 (    0,    0)     4 0x1597 ( 5527 bytes)  - MLEN
81 (    0,    0)     4 0x159B ( 5531 bytes)  - EXPLEN
82 (    0,    0)     4 0x159F ( 5535 bytes)  - FBWD
83 (    0,    0)     4 0x15A3 ( 5539 bytes)  - INHI
84 (    0,    0)     4 0x15A7 ( 5543 bytes)  - INLO
85 (    0,    0)     4 0x15AB ( 5547 bytes)  - INWD
86 (    0,    0)     4 0x15AF ( 5551 bytes)  - IHII
87 (    0,    0)     4 0x15B3 ( 5555 bytes)  - OUTWD
88 (    0,    0)     4 0x15B7 ( 5559 bytes)  - ABIOUT
89 (    0,    0)     4 0x15BB ( 5563 bytes)  - OCHG
90 (    0,    0)     4 0x15BF ( 5567 bytes)  - OUTLO
91 (    0,    0)     4 0x15C3 ( 5571 bytes)  - OUTHI
92 (    0,    0)     4 0x15C7 ( 5575 bytes)  - OMAX
93 (    0,    0)     4 0x15CB ( 5579 bytes)  - Y
94 (    0,    0)     4 0x16CF ( 5839 bytes)  - CRC
95 (    0,    0)     4 0x16D3 ( 5843 bytes)  - K
96 (    0,    0)     4 0xFFFF (   -1 bytes)  + NV11
97 (    0,    0)     4 0xFFFB (   -5 bytes)  + NV12
98 (    0,    0)     4 0xFFF7 (   -9 bytes)  + NV13
99 (    0,    0)     4 0xFFF3 (  -13 bytes)  + NV14
100 (    0,    0)     4 0xFFEF (  -17 bytes)  + NV15
101 (    0,    0)     4 0x16D7 ( 5847 bytes)  - TMP
102 (    0,    0)     4 0x16DB ( 5851 bytes)  - OMIN
103 (    0,    0)     4 0x16DF ( 5855 bytes)  - EXIT
104 (    0,    0)     4 0x16E3 ( 5859 bytes)  - _ERR_
105 (    0,    0)     4 0x16E7 ( 5863 bytes)  - _ERL_
106 (    0,    0)     4 0x16EB ( 5867 bytes)  - NUM
107 (    0,    0)     4 0x16EF ( 5871 bytes)  - JK
108 (    0,    0)     4 0x16F3 ( 5875 bytes)  - TMPSTATUS

Number of Integer Variables:108

Table of already allocated string variables:
----------------------------------------------------------------
 N Size Offset in data area DIM Source name
----------------------------------------------------------------
 1   30 0x0014 (   20 bytes)  + APVER$
 2   20 0x0032 (   50 bytes)  + _CGI_$
 3   25 0x0046 (   70 bytes)  + WEB$
 4   20 0x005F (   95 bytes)  + AK$
 5   61 0x0073 (  115 bytes)  + LIST$
 6   12 0x00B0 (  176 bytes)  + LISTP$
 7   20 0x00BC (  188 bytes)  + REG$
 8   10 0x00D0 (  208 bytes)  + MREG$
 9   50 0x00DA (  218 bytes)  + MVAL$
10  256 0x0128 (  296 bytes)  + SET$
11  256 0x0228 (  552 bytes)  + STP$
12   15 0x0328 (  808 bytes)  + MAC$
13   35 0x0337 (  823 bytes)  + COM$
14    2 0x03C2 (  962 bytes)  + OMST$
15    2 0x03C4 (  964 bytes)  + MST$
16    2 0x03C6 (  966 bytes)  + MCHG$
17   60 0x03C8 (  968 bytes)  + MSD$
18   60 0x0404 ( 1028 bytes)  + OMSD$
19 1024 0x0440 ( 1088 bytes)  + TXT$
20   30 0x0840 ( 2112 bytes)  + SUB$
21   30 0x085E ( 2142 bytes)  + HEX$
22   24 0x087C ( 2172 bytes)  + SITE$
23  100 0x08A8 ( 2216 bytes)  + USS$
24  100 0x090C ( 2316 bytes)  + SR$
25   50 0x0970 ( 2416 bytes)  + SER$
26  256 0x09A2 ( 2466 bytes)  + MR$
27  128 0x0AA2 ( 2722 bytes)  + MR13000$
28  300 0x0B22 ( 2850 bytes)  + MS1$
29  350 0x0C4E ( 3150 bytes)  + MS2$
30   20 0x0DAC ( 3500 bytes)  + MS3$
31   53 0x0DC0 ( 3520 bytes)  + SVREG$
32   10 0x0DF5 ( 3573 bytes)  + MATS$
33   20 0x0DFF ( 3583 bytes)  + IP$
34   20 0x0E13 ( 3603 bytes)  + MIP1$
35   20 0x0E27 ( 3623 bytes)  + MIP2$
36   20 0x0E3B ( 3643 bytes)  + MIP3$
37   20 0x0E4F ( 3663 bytes)  + MONMAC3$
38   10 0x0E63 ( 3683 bytes)  + MTEE$
39   10 0x0E6D ( 3693 bytes)  + TEHA$
40   10 0x0E77 ( 3703 bytes)  + EVNT$
41   20 0x0E81 ( 3713 bytes)  + KORR$
42   11 0x0EB5 ( 3765 bytes)  + USER$
43   31 0x0EC0 ( 3776 bytes)  + USPA$
44  100 0x109F ( 4255 bytes)  + MBS$
45  200 0x1103 ( 4355 bytes)  + MBSL$
46   12 0x13CF ( 5071 bytes)  + ZONE1NAME$
47   12 0x13DB ( 5083 bytes)  + ZONE2NAME$
48   12 0x13E7 ( 5095 bytes)  + ZONE3NAME$
49   12 0x13F3 ( 5107 bytes)  + ZONE4NAME$
50  256 0x145F ( 5215 bytes)  - MR3$
51  256 0x15CF ( 5583 bytes)  - TMP$

Number of String Variables:51

Warning: temporary string size was increased up to 1024 bytes!

Final memory allocation map (area sizes) during run-time for target barionet100:
- Data area for allocated variables: 0x16F7 ( 5879 bytes)
- Data area for temporary variables: 0x4B17 (19223 bytes)
- Tables and tokenized code area   : 0x7DF2 (32242 bytes)
Program start offet=0x5da
