BARIX BCL Tokenizer, V1.5, 2014/10/09 23:22:51

Preprocessor: Start

Preprocessor: First pass for collecting code by #include
- Source file is included in target BAS file: <./BCL/main.bcl>
- Source file is included in target BAS file: <./BCL/define.bcl>
- Source file is included in target BAS file: <./BCL/read_app_setup.bcl>
- Source file is included in target BAS file: <./BCL/udpreceive.bcl>
- Source file is included in target BAS file: <./BCL/remsetup145.bcl>
- Source file is included in target BAS file: <./BCL/m_udpsend.bcl>
- Source file is included in target BAS file: <./BCL/timed_events.bcl>
- Source file is included in target BAS file: <./BCL/ai_330.bcl>
- Source file is included in target BAS file: <./BCL/io12modbus.bcl>
- Source file is included in target BAS file: <./BCL/io12conf.bcl>
- Source file is included in target BAS file: <./BCL/bit2B_f.bcl>
- Source file is included in target BAS file: <./BCL/chd_tegu.bcl>
- Source file is included in target BAS file: <./BCL/crontabreset.bcl>
- Source file is included in target BAS file: <./BCL/di_event.bcl>
- Source file is included in target BAS file: <./BCL/getmonvalue.bcl>
- Source file is included in target BAS file: <./BCL/thermo.bcl>
- Source file is included in target BAS file: <./BCL/appmain.bcl>

Preprocessor: Second pass for replacement of macros by #define
- SYSTIME --> _TMR_(0) 
  - Macro SYSTIME in pos [25-31] -> 		if and(mbsta(mba)<>0, SYSTIME>mbts(mba)+1000) then 
  <- 		if and(mbsta(mba)<>0, SYSTIME>mbts(mba)+1000) then 
  -> 		if and(mbsta(mba)<>0, _TMR_(0) >mbts(mba)+1000) then 
  - Macro SYSTIME in pos [96-102] -> 		' syslog "sub 1000: got "+str$(mlen)+" bytes before crc from mba "+str$(mba)+" (delay "+str$(SYSTIME-MBTS)+" ms from send)",4
  <- 		' syslog "sub 1000: got "+str$(mlen)+" bytes before crc from mba "+str$(mba)+" (delay "+str$(SYSTIME-MBTS)+" ms from send)",4
  -> 		' syslog "sub 1000: got "+str$(mlen)+" bytes before crc from mba "+str$(mba)+" (delay "+str$(_TMR_(0) -MBTS)+" ms from send)",4
  - Macro SYSTIME in pos [13-19] ->     mbts(0)=SYSTIME ' store send timestamp - aga vastus edu nyyd iga mba jaoks eraldi edu ts! 01.01.11
  <-     mbts(0)=SYSTIME ' store send timestamp - aga vastus edu nyyd iga mba jaoks eraldi edu ts! 01.01.11
  ->     mbts(0)=_TMR_(0)  ' store send timestamp - aga vastus edu nyyd iga mba jaoks eraldi edu ts! 01.01.11
  - Macro SYSTIME in pos [9-15] ->      if SYSTIME < MBTS(0) + 1000 then delay 10:goto 1702   ' no timeout yet
  <-      if SYSTIME < MBTS(0) + 1000 then delay 10:goto 1702   ' no timeout yet
  ->      if _TMR_(0)  < MBTS(0) + 1000 then delay 10:goto 1702   ' no timeout yet
  - Macro SYSTIME in pos [36-42] ->             mbsta(mba)=0:mbts(mba)=SYSTIME 'edu korral ts meelde
  <-             mbsta(mba)=0:mbts(mba)=SYSTIME 'edu korral ts meelde
  ->             mbsta(mba)=0:mbts(mba)=_TMR_(0)  'edu korral ts meelde
- SecondTS --> ts(9)  
  - Macro SecondTS in pos [7-14] ->   'if SecondTS>0 then ' varu gw peal 'siin vorrelda B12... ja SecondGW vaartusi! loe ka system setup sisse osaliselt!
  <-   'if SecondTS>0 then ' varu gw peal 'siin vorrelda B12... ja SecondGW vaartusi! loe ka system setup sisse osaliselt!
  ->   'if ts(9)  >0 then ' varu gw peal 'siin vorrelda B12... ja SecondGW vaartusi! loe ka system setup sisse osaliselt!
  - Macro SecondTS in pos [12-19] ->         if SecondTS = 0 then SecondTS=up(0) ' siit edasi kasvab 10 min kaupa kuni pohiside taastub
  <-         if SecondTS = 0 then SecondTS=up(0) ' siit edasi kasvab 10 min kaupa kuni pohiside taastub
  ->         if ts(9)   = 0 then SecondTS=up(0) ' siit edasi kasvab 10 min kaupa kuni pohiside taastub
  - Macro SecondTS in pos [29-36] ->         if ts(9)   = 0 then SecondTS=up(0) ' siit edasi kasvab 10 min kaupa kuni pohiside taastub
  <-         if ts(9)   = 0 then SecondTS=up(0) ' siit edasi kasvab 10 min kaupa kuni pohiside taastub
  ->         if ts(9)   = 0 then ts(9)  =up(0) ' siit edasi kasvab 10 min kaupa kuni pohiside taastub
  - Macro SecondTS in pos [18-25] ->         if up(0)>SecondTS+3600 then 'aeg tagasi lylituda 60 min parast, kui LAN gw vastab ########## tagasilylitumise viide / AEG
  <-         if up(0)>SecondTS+3600 then 'aeg tagasi lylituda 60 min parast, kui LAN gw vastab ########## tagasilylitumise viide / AEG
  ->         if up(0)>ts(9)  +3600 then 'aeg tagasi lylituda 60 min parast, kui LAN gw vastab ########## tagasilylitumise viide / AEG
  - Macro SecondTS in pos [17-24] ->                 SecondTS=SecondTS + 600 '10 min jarel proovime uuesti
  <-                 SecondTS=SecondTS + 600 '10 min jarel proovime uuesti
  ->                 ts(9)  =SecondTS + 600 '10 min jarel proovime uuesti
  - Macro SecondTS in pos [25-32] ->                 ts(9)  =SecondTS + 600 '10 min jarel proovime uuesti
  <-                 ts(9)  =SecondTS + 600 '10 min jarel proovime uuesti
  ->                 ts(9)  =ts(9)   + 600 '10 min jarel proovime uuesti
- CommBreak= --> ioctl 1, 
  - Macro CommBreak= in pos [9-18] ->         CommBreak=50 ' 5 sek paus AINULT gprs ruuterile... kui juba 2 tundi sideta, siis ka kontrollerile
  <-         CommBreak=50 ' 5 sek paus AINULT gprs ruuterile... kui juba 2 tundi sideta, siis ka kontrollerile
  ->         ioctl 1, 50 ' 5 sek paus AINULT gprs ruuterile... kui juba 2 tundi sideta, siis ka kontrollerile
  - Macro CommBreak= in pos [7-16] ->  '    CommBreak=20 '2 s gprs toite pausi
  <-  '    CommBreak=20 '2 s gprs toite pausi
  ->  '    ioctl 1, 20 '2 s gprs toite pausi
- CommBreak --> iostate(1)
- CommLed= --> ioctl 103, 
  - Macro CommLed= in pos [2-9] ->  CommLed=1 'algseisus side puudumine, las poleb
  <-  CommLed=1 'algseisus side puudumine, las poleb
  ->  ioctl 103, 1 'algseisus side puudumine, las poleb
  - Macro CommLed= in pos [5-12] -> 				CommLed=0 ' OUT(3)=0 ' kustutame SIDE tule, mis udp send ajal syydati ILMA ID KONTROLLITA!
  <- 				CommLed=0 ' OUT(3)=0 ' kustutame SIDE tule, mis udp send ajal syydati ILMA ID KONTROLLITA!
  -> 				ioctl 103, 0 ' OUT(3)=0 ' kustutame SIDE tule, mis udp send ajal syydati ILMA ID KONTROLLITA!
  - Macro CommLed= in pos [13-20] ->  	MonComm=1:CommLed=1 ' commled ka sest appmain harva ' ioctl 864,1 ' saatmise lipp las poleb kuni oige id-ga vastus saabub sub 140
  <-  	MonComm=1:CommLed=1 ' commled ka sest appmain harva ' ioctl 864,1 ' saatmise lipp las poleb kuni oige id-ga vastus saabub sub 140
  ->  	MonComm=1:ioctl 103, 1 ' commled ka sest appmain harva ' ioctl 864,1 ' saatmise lipp las poleb kuni oige id-ga vastus saabub sub 140
  - Macro CommLed= in pos [13-20] ->  	MonComm=1:CommLed=1 ' commled ka sest appmain harva ' ioctl 864,1 ' saatmise lipp las poleb kuni oige id-ga vastus saabub sub 140
  <-  	MonComm=1:CommLed=1 ' commled ka sest appmain harva ' ioctl 864,1 ' saatmise lipp las poleb kuni oige id-ga vastus saabub sub 140
  ->  	MonComm=1:ioctl 103, 1 ' commled ka sest appmain harva ' ioctl 864,1 ' saatmise lipp las poleb kuni oige id-ga vastus saabub sub 140
  - Macro CommLed= in pos [7-14] ->     ' CommLed=BupComm ' CommLed=or(MonComm, BupComm) ' punane led kuni molemad on mingi vastuse saanud
  <-     ' CommLed=BupComm ' CommLed=or(MonComm, BupComm) ' punane led kuni molemad on mingi vastuse saanud
  ->     ' ioctl 103, BupComm ' CommLed=or(MonComm, BupComm) ' punane led kuni molemad on mingi vastuse saanud
  - Macro CommLed= in pos [28-35] ->     ' ioctl 103, BupComm ' CommLed=or(MonComm, BupComm) ' punane led kuni molemad on mingi vastuse saanud
  <-     ' ioctl 103, BupComm ' CommLed=or(MonComm, BupComm) ' punane led kuni molemad on mingi vastuse saanud
  ->     ' ioctl 103, BupComm ' ioctl 103, or(MonComm, BupComm) ' punane led kuni molemad on mingi vastuse saanud
- CommLed --> iostate(103)
- MonComm= --> ioctl 326,  
  - Macro MonComm= in pos [13-20] ->  'BupComm=1:MonComm=1:
  <-  'BupComm=1:MonComm=1:
  ->  'BupComm=1:ioctl 326,  1:
  - Macro MonComm= in pos [3-10] ->  	MonComm=1:ioctl 103, 1 ' commled ka sest appmain harva ' ioctl 864,1 ' saatmise lipp las poleb kuni oige id-ga vastus saabub sub 140
  <-  	MonComm=1:ioctl 103, 1 ' commled ka sest appmain harva ' ioctl 864,1 ' saatmise lipp las poleb kuni oige id-ga vastus saabub sub 140
  ->  	ioctl 326,  1:ioctl 103, 1 ' commled ka sest appmain harva ' ioctl 864,1 ' saatmise lipp las poleb kuni oige id-ga vastus saabub sub 140
  - Macro MonComm= in pos [3-10] ->  	MonComm=1:ioctl 103, 1 ' commled ka sest appmain harva ' ioctl 864,1 ' saatmise lipp las poleb kuni oige id-ga vastus saabub sub 140
  <-  	MonComm=1:ioctl 103, 1 ' commled ka sest appmain harva ' ioctl 864,1 ' saatmise lipp las poleb kuni oige id-ga vastus saabub sub 140
  ->  	ioctl 326,  1:ioctl 103, 1 ' commled ka sest appmain harva ' ioctl 864,1 ' saatmise lipp las poleb kuni oige id-ga vastus saabub sub 140
- MonComm --> iostate(326)
  - Macro MonComm in pos [21-27] -> 		", moncomm "+str$(MonComm)+", bupcomm "+str$(BupComm),5 ' ajutine
  <- 		", moncomm "+str$(MonComm)+", bupcomm "+str$(BupComm),5 ' ajutine
  -> 		", moncomm "+str$(iostate(326))+", bupcomm "+str$(BupComm),5 ' ajutine
  - Macro MonComm in pos [42-48] ->     ' ioctl 103, BupComm ' ioctl 103, or(MonComm, BupComm) ' punane led kuni molemad on mingi vastuse saanud
  <-     ' ioctl 103, BupComm ' ioctl 103, or(MonComm, BupComm) ' punane led kuni molemad on mingi vastuse saanud
  ->     ' ioctl 103, BupComm ' ioctl 103, or(iostate(326), BupComm) ' punane led kuni molemad on mingi vastuse saanud
  - Macro MonComm in pos [183-189] -> 	'syslog "appmain: inword "+sprintf$("%x04",bit2B(311+icnt(1),311+icnt(1)+icnt(2)))+" "+sprintf$("%x02",bit2B(311,311+icnt(1)))+" "+sprintf$("%x02",bit2B(351,358))+", moncomm "+str$(MonComm)+", bupcomm "+str$(BupComm),4 ' ajutine abi
  <- 	'syslog "appmain: inword "+sprintf$("%x04",bit2B(311+icnt(1),311+icnt(1)+icnt(2)))+" "+sprintf$("%x02",bit2B(311,311+icnt(1)))+" "+sprintf$("%x02",bit2B(351,358))+", moncomm "+str$(MonComm)+", bupcomm "+str$(BupComm),4 ' ajutine abi
  -> 	'syslog "appmain: inword "+sprintf$("%x04",bit2B(311+icnt(1),311+icnt(1)+icnt(2)))+" "+sprintf$("%x02",bit2B(311,311+icnt(1)))+" "+sprintf$("%x02",bit2B(351,358))+", moncomm "+str$(iostate(326))+", bupcomm "+str$(BupComm),4 ' ajutine abi
- BupComm= --> ioctl 327,  
  - Macro BupComm= in pos [3-10] ->  'BupComm=1:ioctl 326,  1:
  <-  'BupComm=1:ioctl 326,  1:
  ->  'ioctl 327,  1:ioctl 326,  1:
- BupComm --> iostate(327)
  - Macro BupComm in pos [53-59] -> 		", moncomm "+str$(iostate(326))+", bupcomm "+str$(BupComm),5 ' ajutine
  <- 		", moncomm "+str$(iostate(326))+", bupcomm "+str$(BupComm),5 ' ajutine
  -> 		", moncomm "+str$(iostate(326))+", bupcomm "+str$(iostate(327)),5 ' ajutine
  - Macro BupComm in pos [18-24] ->     ' ioctl 103, BupComm ' ioctl 103, or(iostate(326), BupComm) ' punane led kuni molemad on mingi vastuse saanud
  <-     ' ioctl 103, BupComm ' ioctl 103, or(iostate(326), BupComm) ' punane led kuni molemad on mingi vastuse saanud
  ->     ' ioctl 103, iostate(327) ' ioctl 103, or(iostate(326), BupComm) ' punane led kuni molemad on mingi vastuse saanud
  - Macro BupComm in pos [61-67] ->     ' ioctl 103, iostate(327) ' ioctl 103, or(iostate(326), BupComm) ' punane led kuni molemad on mingi vastuse saanud
  <-     ' ioctl 103, iostate(327) ' ioctl 103, or(iostate(326), BupComm) ' punane led kuni molemad on mingi vastuse saanud
  ->     ' ioctl 103, iostate(327) ' ioctl 103, or(iostate(326), iostate(327)) ' punane led kuni molemad on mingi vastuse saanud
  - Macro BupComm in pos [215-221] -> 	'syslog "appmain: inword "+sprintf$("%x04",bit2B(311+icnt(1),311+icnt(1)+icnt(2)))+" "+sprintf$("%x02",bit2B(311,311+icnt(1)))+" "+sprintf$("%x02",bit2B(351,358))+", moncomm "+str$(iostate(326))+", bupcomm "+str$(BupComm),4 ' ajutine abi
  <- 	'syslog "appmain: inword "+sprintf$("%x04",bit2B(311+icnt(1),311+icnt(1)+icnt(2)))+" "+sprintf$("%x02",bit2B(311,311+icnt(1)))+" "+sprintf$("%x02",bit2B(351,358))+", moncomm "+str$(iostate(326))+", bupcomm "+str$(BupComm),4 ' ajutine abi
  -> 	'syslog "appmain: inword "+sprintf$("%x04",bit2B(311+icnt(1),311+icnt(1)+icnt(2)))+" "+sprintf$("%x02",bit2B(311,311+icnt(1)))+" "+sprintf$("%x02",bit2B(351,358))+", moncomm "+str$(iostate(326))+", bupcomm "+str$(iostate(327)),4 ' ajutine abi
- PowerLost= --> ioctl 329,  
  - Macro PowerLost= in pos [80-89] ->    ' if and(PowerLost = 0, iostate(318) = 1, up(0)> ts(8)+PowerLossDelay) then PowerLost=1:ms$=ms$+"PWS:2\n":gosub 270  ' kohe teatamine
  <-    ' if and(PowerLost = 0, iostate(318) = 1, up(0)> ts(8)+PowerLossDelay) then PowerLost=1:ms$=ms$+"PWS:2\n":gosub 270  ' kohe teatamine
  ->    ' if and(PowerLost = 0, iostate(318) = 1, up(0)> ts(8)+PowerLossDelay) then ioctl 329,  1:ms$=ms$+"PWS:2\n":gosub 270  ' kohe teatamine
- PowerLost --> iostate(329)
  - Macro PowerLost in pos [13-21] ->    ' if and(PowerLost = 0, iostate(318) = 1, up(0)> ts(8)+PowerLossDelay) then ioctl 329,  1:ms$=ms$+"PWS:2\n":gosub 270  ' kohe teatamine
  <-    ' if and(PowerLost = 0, iostate(318) = 1, up(0)> ts(8)+PowerLossDelay) then ioctl 329,  1:ms$=ms$+"PWS:2\n":gosub 270  ' kohe teatamine
  ->    ' if and(iostate(329) = 0, iostate(318) = 1, up(0)> ts(8)+PowerLossDelay) then ioctl 329,  1:ms$=ms$+"PWS:2\n":gosub 270  ' kohe teatamine
- LoBatt= --> ioctl 330,  
  - Macro LoBatt= in pos [3-9] -> 		LoBatt=1:syslog "sub 10000: lobatt start",4
  <- 		LoBatt=1:syslog "sub 10000: lobatt start",4
  -> 		ioctl 330,  1:syslog "sub 10000: lobatt start",4
  - Macro LoBatt= in pos [3-9] -> 		LoBatt=0:syslog "sub 10000: lobatt end",4
  <- 		LoBatt=0:syslog "sub 10000: lobatt end",4
  -> 		ioctl 330,  0:syslog "sub 10000: lobatt end",4
- LoBatt --> iostate(330)
  - Macro LoBatt in pos [11-16] ->    if and(LoBatt = 0, BattVoltage < VoltLoLimit - 10) then 
  <-    if and(LoBatt = 0, BattVoltage < VoltLoLimit - 10) then 
  ->    if and(iostate(330) = 0, BattVoltage < VoltLoLimit - 10) then 
  - Macro LoBatt in pos [9-14] -> 	if and(LoBatt = 1, BattVoltage > VoltLoLimit + 10) then 
  <- 	if and(LoBatt = 1, BattVoltage > VoltLoLimit + 10) then 
  -> 	if and(iostate(330) = 1, BattVoltage > VoltLoLimit + 10) then 
- HiBatt= --> ioctl 331,  
  - Macro HiBatt= in pos [3-9] -> 		HiBatt=1:syslog "sub 10000: hibatt start",4
  <- 		HiBatt=1:syslog "sub 10000: hibatt start",4
  -> 		ioctl 331,  1:syslog "sub 10000: hibatt start",4
  - Macro HiBatt= in pos [3-9] -> 		HiBatt=0:syslog "sub 10000: hibatt end",4
  <- 		HiBatt=0:syslog "sub 10000: hibatt end",4
  -> 		ioctl 331,  0:syslog "sub 10000: hibatt end",4
- HiBatt --> iostate(331)
  - Macro HiBatt in pos [9-14] -> 	if and(HiBatt = 0, BattVoltage > VoltHiLimit + 10) then 
  <- 	if and(HiBatt = 0, BattVoltage > VoltHiLimit + 10) then 
  -> 	if and(iostate(331) = 0, BattVoltage > VoltHiLimit + 10) then 
  - Macro HiBatt in pos [9-14] -> 	if and(HiBatt = 1, BattVoltage < VoltHiLimit - 10) then 
  <- 	if and(HiBatt = 1, BattVoltage < VoltHiLimit - 10) then 
  -> 	if and(iostate(331) = 1, BattVoltage < VoltHiLimit - 10) then 
- ChanType[]= --> ioctl 700+, 
  - Macro ChanType[]= in pos [2-16] -> 	ChanType[chan]=1 'di alati
  <- 	ChanType[chan]=1 'di alati
  -> 	ioctl 700+chan, 1 'di alati
  - Macro ChanType[]= in pos [2-16] -> 	ChanType[chan]=6 ' temp
  <- 	ChanType[chan]=6 ' temp
  -> 	ioctl 700+chan, 6 ' temp
  - Macro ChanType[]= in pos [3-17] -> 		ChanType[chan]=6 'koikidele, aga palju neid juba on? vt define varuga... 82 tk?
  <- 		ChanType[chan]=6 'koikidele, aga palju neid juba on? vt define varuga... 82 tk?
  -> 		ioctl 700+chan, 6 'koikidele, aga palju neid juba on? vt define varuga... 82 tk?
- ChanType[] --> iostate(700+) 
  - Macro ChanType[] in pos [57-70] -> 	syslog "rd_stp: mb chan "+str$(chan)+" chantype="+str$(ChanType[chan]),4 
  <- 	syslog "rd_stp: mb chan "+str$(chan)+" chantype="+str$(ChanType[chan]),4 
  -> 	syslog "rd_stp: mb chan "+str$(chan)+" chantype="+str$(iostate(700+chan) ),4 
  - Macro ChanType[] in pos [75-88] -> 		syslog "rd_stp: mb chan "+str$(chan)+", chname "+uss$+" chantype="+str$(ChanType[chan])+", jj "+str$(jj),4 
  <- 		syslog "rd_stp: mb chan "+str$(chan)+", chname "+uss$+" chantype="+str$(ChanType[chan])+", jj "+str$(jj),4 
  -> 		syslog "rd_stp: mb chan "+str$(chan)+", chname "+uss$+" chantype="+str$(iostate(700+chan) )+", jj "+str$(jj),4 
  - Macro ChanType[] in pos [76-89] -> 	syslog "chan "+str$(chan)+":"+uss$+" "+str$(chn(chan))+", chantype="+str$(ChanType[chan]),4 'ajutine 
  <- 	syslog "chan "+str$(chan)+":"+uss$+" "+str$(chn(chan))+", chantype="+str$(ChanType[chan]),4 'ajutine 
  -> 	syslog "chan "+str$(chan)+":"+uss$+" "+str$(chn(chan))+", chantype="+str$(iostate(700+chan) ),4 'ajutine 
  - Macro ChanType[] in pos [81-94] -> 	syslog "temp chan "+str$(chan)+":"+uss$+" "+str$(chn(chan))+", chantype="+str$(ChanType[chan]),4  
  <- 	syslog "temp chan "+str$(chan)+":"+uss$+" "+str$(chn(chan))+", chantype="+str$(ChanType[chan]),4  
  -> 	syslog "temp chan "+str$(chan)+":"+uss$+" "+str$(chn(chan))+", chantype="+str$(iostate(700+chan) ),4  
  - Macro ChanType[] in pos [9-22] -> 		if or(ChanType[chan] =4, ChanType[chan] =5) then ' counter raw or unit
  <- 		if or(ChanType[chan] =4, ChanType[chan] =5) then ' counter raw or unit
  -> 		if or(iostate(700+chan)  =4, ChanType[chan] =5) then ' counter raw or unit
  - Macro ChanType[] in pos [32-45] -> 		if or(iostate(700+chan)  =4, ChanType[chan] =5) then ' counter raw or unit
  <- 		if or(iostate(700+chan)  =4, ChanType[chan] =5) then ' counter raw or unit
  -> 		if or(iostate(700+chan)  =4, iostate(700+chan)  =5) then ' counter raw or unit
  - Macro ChanType[] in pos [6-19] -> 		if ChanType[chan] =2 then ' ai
  <- 		if ChanType[chan] =2 then ' ai
  -> 		if iostate(700+chan)  =2 then ' ai
  - Macro ChanType[] in pos [6-19] -> 		if ChanType[chan] =1 then ' di, 1 on 201
  <- 		if ChanType[chan] =1 then ' di, 1 on 201
  -> 		if iostate(700+chan)  =1 then ' di, 1 on 201
  - Macro ChanType[] in pos [9-22] -> 		if or(ChanType[chan] =11, ChanType[chan] =12) then ' dekodeerime di1,di2 ai2 alusel
  <- 		if or(ChanType[chan] =11, ChanType[chan] =12) then ' dekodeerime di1,di2 ai2 alusel
  -> 		if or(iostate(700+chan)  =11, ChanType[chan] =12) then ' dekodeerime di1,di2 ai2 alusel
  - Macro ChanType[] in pos [33-46] -> 		if or(iostate(700+chan)  =11, ChanType[chan] =12) then ' dekodeerime di1,di2 ai2 alusel
  <- 		if or(iostate(700+chan)  =11, ChanType[chan] =12) then ' dekodeerime di1,di2 ai2 alusel
  -> 		if or(iostate(700+chan)  =11, iostate(700+chan)  =12) then ' dekodeerime di1,di2 ai2 alusel
  - Macro ChanType[] in pos [9-22] -> 		if or(ChanType[chan] =13, ChanType[chan] =14) then ' dekodeerime di1,di2 ai2 alusel
  <- 		if or(ChanType[chan] =13, ChanType[chan] =14) then ' dekodeerime di1,di2 ai2 alusel
  -> 		if or(iostate(700+chan)  =13, ChanType[chan] =14) then ' dekodeerime di1,di2 ai2 alusel
  - Macro ChanType[] in pos [33-46] -> 		if or(iostate(700+chan)  =13, ChanType[chan] =14) then ' dekodeerime di1,di2 ai2 alusel
  <- 		if or(iostate(700+chan)  =13, ChanType[chan] =14) then ' dekodeerime di1,di2 ai2 alusel
  -> 		if or(iostate(700+chan)  =13, iostate(700+chan)  =14) then ' dekodeerime di1,di2 ai2 alusel
  - Macro ChanType[] in pos [9-22] -> 		if or(ChanType[chan] =4, ChanType[chan] =5) then ' counter raw or unit
  <- 		if or(ChanType[chan] =4, ChanType[chan] =5) then ' counter raw or unit
  -> 		if or(iostate(700+chan)  =4, ChanType[chan] =5) then ' counter raw or unit
  - Macro ChanType[] in pos [32-45] -> 		if or(iostate(700+chan)  =4, ChanType[chan] =5) then ' counter raw or unit
  <- 		if or(iostate(700+chan)  =4, ChanType[chan] =5) then ' counter raw or unit
  -> 		if or(iostate(700+chan)  =4, iostate(700+chan)  =5) then ' counter raw or unit
  - Macro ChanType[] in pos [6-19] -> 		if ChanType[chan] =1 then ' di, 1 on 201
  <- 		if ChanType[chan] =1 then ' di, 1 on 201
  -> 		if iostate(700+chan)  =1 then ' di, 1 on 201
  - Macro ChanType[] in pos [6-19] -> 		if ChanType[chan] =15 then ' di based on di1
  <- 		if ChanType[chan] =15 then ' di based on di1
  -> 		if iostate(700+chan)  =15 then ' di based on di1
  - Macro ChanType[] in pos [6-19] -> 		if ChanType[chan] =16 then ' ai
  <- 		if ChanType[chan] =16 then ' ai
  -> 		if iostate(700+chan)  =16 then ' ai
  - Macro ChanType[] in pos [6-19] -> 		if ChanType[chan] =17 then ' di based on di3
  <- 		if ChanType[chan] =17 then ' di based on di3
  -> 		if iostate(700+chan)  =17 then ' di based on di3
  - Macro ChanType[] in pos [6-19] -> 		if ChanType[chan] =18 then ' ai
  <- 		if ChanType[chan] =18 then ' ai
  -> 		if iostate(700+chan)  =18 then ' ai
  - Macro ChanType[] in pos [9-22] -> 		if or(ChanType[chan] =4, ChanType[chan] =5) then ' counter raw or unit
  <- 		if or(ChanType[chan] =4, ChanType[chan] =5) then ' counter raw or unit
  -> 		if or(iostate(700+chan)  =4, ChanType[chan] =5) then ' counter raw or unit
  - Macro ChanType[] in pos [32-45] -> 		if or(iostate(700+chan)  =4, ChanType[chan] =5) then ' counter raw or unit
  <- 		if or(iostate(700+chan)  =4, ChanType[chan] =5) then ' counter raw or unit
  -> 		if or(iostate(700+chan)  =4, iostate(700+chan)  =5) then ' counter raw or unit
  - Macro ChanType[] in pos [6-19] -> 		if ChanType[chan] =1 then ' di, 1 on 201
  <- 		if ChanType[chan] =1 then ' di, 1 on 201
  -> 		if iostate(700+chan)  =1 then ' di, 1 on 201
  - Macro ChanType[] in pos [14-25] ->         ' if ChanType[jj] = 1 then 'DI PEAB olema setupist pandud / ei ole oluline
  <-         ' if ChanType[jj] = 1 then 'DI PEAB olema setupist pandud / ei ole oluline
  ->         ' if iostate(700+jj)  = 1 then 'DI PEAB olema setupist pandud / ei ole oluline
- StpAddr= --> ioctl 791,  
  - Macro StpAddr= in pos [4-11] -> 			StpAddr=FlashAddr+1 
  <- 			StpAddr=FlashAddr+1 
  -> 			ioctl 791,  FlashAddr+1 
  - Macro StpAddr= in pos [4-11] -> 			StpAddr=FlashAddr-511
  <- 			StpAddr=FlashAddr-511
  -> 			ioctl 791,  FlashAddr-511
  - Macro StpAddr= in pos [28-35] ->             COM$="STP:768":StpAddr=FlashAddr-767
  <-             COM$="STP:768":StpAddr=FlashAddr-767
  ->             COM$="STP:768":ioctl 791,  FlashAddr-767
- StpAddr --> iostate(791) 
  - Macro StpAddr in pos [25-31] ->             MIDCPY SET$,StpAddr,len(mval$)+1,mval$ 
  <-             MIDCPY SET$,StpAddr,len(mval$)+1,mval$ 
  ->             MIDCPY SET$,iostate(791) ,len(mval$)+1,mval$ 
  - Macro StpAddr in pos [17-23] -> 			if mid$(set$,StpAddr,len(mval$)) = mval$ then syslog "sub 145: setup string "+mreg$+":"+mval$+" accepted",4 else syslog "midcpy fail!",2
  <- 			if mid$(set$,StpAddr,len(mval$)) = mval$ then syslog "sub 145: setup string "+mreg$+":"+mval$+" accepted",4 else syslog "midcpy fail!",2
  -> 			if mid$(set$,iostate(791) ,len(mval$)) = mval$ then syslog "sub 145: setup string "+mreg$+":"+mval$+" accepted",4 else syslog "midcpy fail!",2
  - Macro StpAddr in pos [25-31] ->             MIDSET SET$,StpAddr,1,val(mval$)
  <-             MIDSET SET$,StpAddr,1,val(mval$)
  ->             MIDSET SET$,iostate(791) ,1,val(mval$)
  - Macro StpAddr in pos [25-31] ->             MIDSET SET$,StpAddr,2,val(mval$)
  <-             MIDSET SET$,StpAddr,2,val(mval$)
  ->             MIDSET SET$,iostate(791) ,2,val(mval$)
- FlashAddr= --> ioctl 792,  
  - Macro FlashAddr= in pos [9-18] ->         FlashAddr=val(mid$(mreg$,2,len(mreg$)-1)):syslog "sub 145: Flash_Addr to write is "+str$(FlashAddr),4 ' vahemikus 0...1023, muuta alasse 1...256 igas veerandis!
  <-         FlashAddr=val(mid$(mreg$,2,len(mreg$)-1)):syslog "sub 145: Flash_Addr to write is "+str$(FlashAddr),4 ' vahemikus 0...1023, muuta alasse 1...256 igas veerandis!
  ->         ioctl 792,  val(mid$(mreg$,2,len(mreg$)-1)):syslog "sub 145: Flash_Addr to write is "+str$(FlashAddr),4 ' vahemikus 0...1023, muuta alasse 1...256 igas veerandis!
- FlashAddr --> iostate(792) 
  - Macro FlashAddr in pos [100-108] ->         ioctl 792,  val(mid$(mreg$,2,len(mreg$)-1)):syslog "sub 145: Flash_Addr to write is "+str$(FlashAddr),4 ' vahemikus 0...1023, muuta alasse 1...256 igas veerandis!
  <-         ioctl 792,  val(mid$(mreg$,2,len(mreg$)-1)):syslog "sub 145: Flash_Addr to write is "+str$(FlashAddr),4 ' vahemikus 0...1023, muuta alasse 1...256 igas veerandis!
  ->         ioctl 792,  val(mid$(mreg$,2,len(mreg$)-1)):syslog "sub 145: Flash_Addr to write is "+str$(iostate(792) ),4 ' vahemikus 0...1023, muuta alasse 1...256 igas veerandis!
  - Macro FlashAddr in pos [15-23] ->         if or(FlashAddr<0, FlashAddr>1023) then ' 
  <-         if or(FlashAddr<0, FlashAddr>1023) then ' 
  ->         if or(iostate(792) <0, FlashAddr>1023) then ' 
  - Macro FlashAddr in pos [32-40] ->         if or(iostate(792) <0, FlashAddr>1023) then ' 
  <-         if or(iostate(792) <0, FlashAddr>1023) then ' 
  ->         if or(iostate(792) <0, iostate(792) >1023) then ' 
  - Macro FlashAddr in pos [114-122] -> 			syslog "sub 145: illegal setup variable (address out of setup variable range 1..255 after conversion): "+str$(FlashAddr)+" from "+mreg$,4
  <- 			syslog "sub 145: illegal setup variable (address out of setup variable range 1..255 after conversion): "+str$(FlashAddr)+" from "+mreg$,4
  -> 			syslog "sub 145: illegal setup variable (address out of setup variable range 1..255 after conversion): "+str$(iostate(792) )+" from "+mreg$,4
  - Macro FlashAddr in pos [12-20] ->         if FlashAddr<256 then ' system setup, uisystem.html
  <-         if FlashAddr<256 then ' system setup, uisystem.html
  ->         if iostate(792) <256 then ' system setup, uisystem.html
  - Macro FlashAddr in pos [16-24] -> 			ioctl 791,  FlashAddr+1 
  <- 			ioctl 791,  FlashAddr+1 
  -> 			ioctl 791,  iostate(792) +1 
  - Macro FlashAddr in pos [16-24] ->         if and(FlashAddr>511,FlashAddr<768) then 'app setup part1
  <-         if and(FlashAddr>511,FlashAddr<768) then 'app setup part1
  ->         if and(iostate(792) >511,FlashAddr<768) then 'app setup part1
  - Macro FlashAddr in pos [34-42] ->         if and(iostate(792) >511,FlashAddr<768) then 'app setup part1
  <-         if and(iostate(792) >511,FlashAddr<768) then 'app setup part1
  ->         if and(iostate(792) >511,iostate(792) <768) then 'app setup part1
  - Macro FlashAddr in pos [16-24] -> 			ioctl 791,  FlashAddr-511
  <- 			ioctl 791,  FlashAddr-511
  -> 			ioctl 791,  iostate(792) -511
  - Macro FlashAddr in pos [10-18] -> 		if and(FlashAddr>767,FlashAddr<1024) then 'app setup part2
  <- 		if and(FlashAddr>767,FlashAddr<1024) then 'app setup part2
  -> 		if and(iostate(792) >767,FlashAddr<1024) then 'app setup part2
  - Macro FlashAddr in pos [28-36] -> 		if and(iostate(792) >767,FlashAddr<1024) then 'app setup part2
  <- 		if and(iostate(792) >767,FlashAddr<1024) then 'app setup part2
  -> 		if and(iostate(792) >767,iostate(792) <1024) then 'app setup part2
  - Macro FlashAddr in pos [40-48] ->             COM$="STP:768":ioctl 791,  FlashAddr-767
  <-             COM$="STP:768":ioctl 791,  FlashAddr-767
  ->             COM$="STP:768":ioctl 791,  iostate(792) -767
- RegNum= --> ioctl 793,  
  - Macro RegNum= in pos [11-17] ->    pos=0  RegNum=0 ' list$ ja lispt$ siduv pointer  ning listi liikmete arv (kui seda vaja on)
  <-    pos=0  RegNum=0 ' list$ ja lispt$ siduv pointer  ning listi liikmete arv (kui seda vaja on)
  ->    pos=0  ioctl 793,  0 ' list$ ja lispt$ siduv pointer  ning listi liikmete arv (kui seda vaja on)
  - Macro RegNum= in pos [26-32] ->                pos=pos+1:RegNum=RegNum+1
  <-                pos=pos+1:RegNum=RegNum+1
  ->                pos=pos+1:ioctl 793,  RegNum+1
- RegNum --> iostate(793)
  - Macro RegNum in pos [15-20] ->  for pos=1 to RegNum ' len(listp$) ' see jamas ' pointer registritejorus
  <-  for pos=1 to RegNum ' len(listp$) ' see jamas ' pointer registritejorus
  ->  for pos=1 to iostate(793) ' len(listp$) ' see jamas ' pointer registritejorus
  - Macro RegNum in pos [90-95] ->         gosub 13000:syslog "sub 145: proccesing list_pos "+str$(pos)+" from total "+str$(RegNum)+", pair "+mreg$+":"+mval$,4 ' processing this value
  <-         gosub 13000:syslog "sub 145: proccesing list_pos "+str$(pos)+" from total "+str$(RegNum)+", pair "+mreg$+":"+mval$,4 ' processing this value
  ->         gosub 13000:syslog "sub 145: proccesing list_pos "+str$(pos)+" from total "+str$(iostate(793))+", pair "+mreg$+":"+mval$,4 ' processing this value
  - Macro RegNum in pos [61-66] ->    ' syslog "sub 11000: got list: "+list$+" liikmete arvuga RegNum:"+str$(RegNum)+", sub lopus uku:"+str$(uku)+" ukk:"+str$(ukk),5
  <-    ' syslog "sub 11000: got list: "+list$+" liikmete arvuga RegNum:"+str$(RegNum)+", sub lopus uku:"+str$(uku)+" ukk:"+str$(ukk),5
  ->    ' syslog "sub 11000: got list: "+list$+" liikmete arvuga iostate(793):"+str$(RegNum)+", sub lopus uku:"+str$(uku)+" ukk:"+str$(ukk),5
  - Macro RegNum in pos [81-86] ->    ' syslog "sub 11000: got list: "+list$+" liikmete arvuga iostate(793):"+str$(RegNum)+", sub lopus uku:"+str$(uku)+" ukk:"+str$(ukk),5
  <-    ' syslog "sub 11000: got list: "+list$+" liikmete arvuga iostate(793):"+str$(RegNum)+", sub lopus uku:"+str$(uku)+" ukk:"+str$(ukk),5
  ->    ' syslog "sub 11000: got list: "+list$+" liikmete arvuga iostate(793):"+str$(iostate(793))+", sub lopus uku:"+str$(uku)+" ukk:"+str$(ukk),5
  - Macro RegNum in pos [38-43] ->                pos=pos+1:ioctl 793,  RegNum+1
  <-                pos=pos+1:ioctl 793,  RegNum+1
  ->                pos=pos+1:ioctl 793,  iostate(793)+1
- RegPos= --> ioctl 794,  
  - Macro RegPos= in pos [2-8] ->  RegPos=1    ' registrite joru index, korraga voime saada erinevaid registreid nii setup kui app, teeme setup yhekorraga
  <-  RegPos=1    ' registrite joru index, korraga voime saada erinevaid registreid nii setup kui app, teeme setup yhekorraga
  ->  ioctl 794,  1    ' registrite joru index, korraga voime saada erinevaid registreid nii setup kui app, teeme setup yhekorraga
  - Macro RegPos= in pos [5-11] ->     RegPos=RegPos+RegLen
  <-     RegPos=RegPos+RegLen
  ->     ioctl 794,  RegPos+RegLen
- RegPos --> iostate(794)
  - Macro RegPos in pos [22-27] ->     mreg$=mid$(list$,RegPos,RegLen)
  <-     mreg$=mid$(list$,RegPos,RegLen)
  ->     mreg$=mid$(list$,iostate(794),RegLen)
  - Macro RegPos in pos [17-22] ->     ioctl 794,  RegPos+RegLen
  <-     ioctl 794,  RegPos+RegLen
  ->     ioctl 794,  iostate(794)+RegLen
  - Macro RegPos in pos [75-80] ->     ' syslog "sub 145 - mreg$="+mreg$+" mval$ = "+mval$+", reg_pos="+str$(RegPos)+", list_pos="+str$(pos)+", Reg_Len "+str$(RegLen),4
  <-     ' syslog "sub 145 - mreg$="+mreg$+" mval$ = "+mval$+", reg_pos="+str$(RegPos)+", list_pos="+str$(pos)+", Reg_Len "+str$(RegLen),4
  ->     ' syslog "sub 145 - mreg$="+mreg$+" mval$ = "+mval$+", reg_pos="+str$(iostate(794))+", list_pos="+str$(pos)+", Reg_Len "+str$(RegLen),4
- RegLen= --> ioctl 795,  
  - Macro RegLen= in pos [5-11] ->     RegLen=midget(listp$,pos,1)
  <-     RegLen=midget(listp$,pos,1)
  ->     ioctl 795,  midget(listp$,pos,1)
- RegLen --> iostate(795)
  - Macro RegLen in pos [35-40] ->     mreg$=mid$(list$,iostate(794),RegLen)
  <-     mreg$=mid$(list$,iostate(794),RegLen)
  ->     mreg$=mid$(list$,iostate(794),iostate(795))
  - Macro RegLen in pos [30-35] ->     ioctl 794,  iostate(794)+RegLen
  <-     ioctl 794,  iostate(794)+RegLen
  ->     ioctl 794,  iostate(794)+iostate(795)
  - Macro RegLen in pos [131-136] ->     ' syslog "sub 145 - mreg$="+mreg$+" mval$ = "+mval$+", reg_pos="+str$(iostate(794))+", list_pos="+str$(pos)+", Reg_Len "+str$(RegLen),4
  <-     ' syslog "sub 145 - mreg$="+mreg$+" mval$ = "+mval$+", reg_pos="+str$(iostate(794))+", list_pos="+str$(pos)+", Reg_Len "+str$(RegLen),4
  ->     ' syslog "sub 145 - mreg$="+mreg$+" mval$ = "+mval$+", reg_pos="+str$(iostate(794))+", list_pos="+str$(pos)+", Reg_Len "+str$(iostate(795)),4
- VoltageRaw= --> ioctl 796,  
- VoltageRaw --> iostate(796)
- TempLoLimit= --> ioctl 798,  
- TempLoLimit --> iostate(798)
- TempHiLimit= --> ioctl 799,  
- TempHiLimit --> iostate(799)
- VoltLoLimit= --> ioctl 809,  
  - Macro VoltLoLimit= in pos [9-20] ->  jj=580:VoltLoLimit=MIDGET(set$,jj-511,2):gosub 21020 
  <-  jj=580:VoltLoLimit=MIDGET(set$,jj-511,2):gosub 21020 
  ->  jj=580:ioctl 809,  MIDGET(set$,jj-511,2):gosub 21020 
- VoltLoLimit --> iostate(809)
  - Macro VoltLoLimit in pos [43-53] ->    if and(iostate(330) = 0, BattVoltage < VoltLoLimit - 10) then 
  <-    if and(iostate(330) = 0, BattVoltage < VoltLoLimit - 10) then 
  ->    if and(iostate(330) = 0, BattVoltage < iostate(809) - 10) then 
  - Macro VoltLoLimit in pos [41-51] -> 	if and(iostate(330) = 1, BattVoltage > VoltLoLimit + 10) then 
  <- 	if and(iostate(330) = 1, BattVoltage > VoltLoLimit + 10) then 
  -> 	if and(iostate(330) = 1, BattVoltage > iostate(809) + 10) then 
- VoltHiLimit= --> ioctl 810,  
  - Macro VoltHiLimit= in pos [9-20] ->  jj=582:VoltHiLimit=MIDGET(set$,jj-511,2):gosub 21020
  <-  jj=582:VoltHiLimit=MIDGET(set$,jj-511,2):gosub 21020
  ->  jj=582:ioctl 810,  MIDGET(set$,jj-511,2):gosub 21020
- VoltHiLimit --> iostate(810)
  - Macro VoltHiLimit in pos [41-51] -> 	if and(iostate(331) = 0, BattVoltage > VoltHiLimit + 10) then 
  <- 	if and(iostate(331) = 0, BattVoltage > VoltHiLimit + 10) then 
  -> 	if and(iostate(331) = 0, BattVoltage > iostate(810) + 10) then 
  - Macro VoltHiLimit in pos [41-51] -> 	if and(iostate(331) = 1, BattVoltage < VoltHiLimit - 10) then 
  <- 	if and(iostate(331) = 1, BattVoltage < VoltHiLimit - 10) then 
  -> 	if and(iostate(331) = 1, BattVoltage < iostate(810) - 10) then 
- VoltageAvgRaw[]= --> ioctl 810+, 
  - Macro VoltageAvgRaw[]= in pos [9-33] ->         VoltageAvgRaw[timertemp]=iostate(500+timertemp)
  <-         VoltageAvgRaw[timertemp]=iostate(500+timertemp)
  ->         ioctl 810+timertemp, iostate(500+timertemp)
  - Macro VoltageAvgRaw[]= in pos [9-33] ->         VoltageAvgRaw[timertemp]=(iostate(500+timertemp)+(SlidingWindowSize-1)*VoltageAvgRaw[timertemp])/SlidingWindowSize ' averaging
  <-         VoltageAvgRaw[timertemp]=(iostate(500+timertemp)+(SlidingWindowSize-1)*VoltageAvgRaw[timertemp])/SlidingWindowSize ' averaging
  ->         ioctl 810+timertemp, (iostate(500+timertemp)+(SlidingWindowSize-1)*VoltageAvgRaw[timertemp])/SlidingWindowSize ' averaging
- VoltageAvgRaw[] --> iostate(810+)
  - Macro VoltageAvgRaw[] in pos [11-34] ->     if or(VoltageAvgRaw[timertemp] =0, SlidingWindowSize = 0, SlidingWindowSize = 1) then ' jatame keskmistamise vahele
  <-     if or(VoltageAvgRaw[timertemp] =0, SlidingWindowSize = 0, SlidingWindowSize = 1) then ' jatame keskmistamise vahele
  ->     if or(iostate(810+timertemp) =0, SlidingWindowSize = 0, SlidingWindowSize = 1) then ' jatame keskmistamise vahele
  - Macro VoltageAvgRaw[] in pos [76-99] ->         ioctl 810+timertemp, (iostate(500+timertemp)+(SlidingWindowSize-1)*VoltageAvgRaw[timertemp])/SlidingWindowSize ' averaging
  <-         ioctl 810+timertemp, (iostate(500+timertemp)+(SlidingWindowSize-1)*VoltageAvgRaw[timertemp])/SlidingWindowSize ' averaging
  ->         ioctl 810+timertemp, (iostate(500+timertemp)+(SlidingWindowSize-1)*iostate(810+timertemp))/SlidingWindowSize ' averaging
- VoltCoeff= --> ioctl 818,  
  - Macro VoltCoeff= in pos [9-18] ->  jj=578:VoltCoeff=MIDGET(set$,jj-511,2):gosub 21020 ' batt voltage calc coeff
  <-  jj=578:VoltCoeff=MIDGET(set$,jj-511,2):gosub 21020 ' batt voltage calc coeff
  ->  jj=578:ioctl 818,  MIDGET(set$,jj-511,2):gosub 21020 ' batt voltage calc coeff
- VoltCoeff --> iostate(818)
  - Macro VoltCoeff in pos [35-43] -> 				BattVoltage=iostate(810+chan)*VoltCoeff/200
  <- 				BattVoltage=iostate(810+chan)*VoltCoeff/200
  -> 				BattVoltage=iostate(810+chan)*iostate(818)/200
  - Macro VoltCoeff in pos [30-38] -> 				BattVoltage=iostate(501)*VoltCoeff/200 ' peaks keskmistama...
  <- 				BattVoltage=iostate(501)*VoltCoeff/200 ' peaks keskmistama...
  -> 				BattVoltage=iostate(501)*iostate(818)/200 ' peaks keskmistama...
  - Macro VoltCoeff in pos [30-38] -> 				BattVoltage=iostate(813)*VoltCoeff/200
  <- 				BattVoltage=iostate(813)*VoltCoeff/200
  -> 				BattVoltage=iostate(813)*iostate(818)/200
- BattVoltage= --> ioctl 819,  
  - Macro BattVoltage= in pos [5-16] -> 				BattVoltage=iostate(810+chan)*iostate(818)/200
  <- 				BattVoltage=iostate(810+chan)*iostate(818)/200
  -> 				ioctl 819,  iostate(810+chan)*iostate(818)/200
  - Macro BattVoltage= in pos [5-16] -> 				BattVoltage=iostate(501)*iostate(818)/200 ' peaks keskmistama...
  <- 				BattVoltage=iostate(501)*iostate(818)/200 ' peaks keskmistama...
  -> 				ioctl 819,  iostate(501)*iostate(818)/200 ' peaks keskmistama...
  - Macro BattVoltage= in pos [5-16] -> 				BattVoltage=iostate(813)*iostate(818)/200
  <- 				BattVoltage=iostate(813)*iostate(818)/200
  -> 				ioctl 819,  iostate(813)*iostate(818)/200
- BattVoltage --> iostate(819)
  - Macro BattVoltage in pos [43-53] -> 				'syslog "chd_tegu: battvoltage "+str$(BattVoltage)+" on ai"+str$(chan),4 ' mV
  <- 				'syslog "chd_tegu: battvoltage "+str$(BattVoltage)+" on ai"+str$(chan),4 ' mV
  -> 				'syslog "chd_tegu: battvoltage "+str$(iostate(819))+" on ai"+str$(chan),4 ' mV
  - Macro BattVoltage in pos [15-25] -> 				chd(chan)=BattVoltage/10 ' averaged BTV, saatmisel sprintf$("%l.2F",chd(chan)) 
  <- 				chd(chan)=BattVoltage/10 ' averaged BTV, saatmisel sprintf$("%l.2F",chd(chan)) 
  -> 				chd(chan)=iostate(819)/10 ' averaged BTV, saatmisel sprintf$("%l.2F",chd(chan)) 
  - Macro BattVoltage in pos [41-51] -> 				syslog "appmain: battvoltage "+str$(BattVoltage)+" on ai"+str$(chan),5 ' mV
  <- 				syslog "appmain: battvoltage "+str$(BattVoltage)+" on ai"+str$(chan),5 ' mV
  -> 				syslog "appmain: battvoltage "+str$(iostate(819))+" on ai"+str$(chan),5 ' mV
  - Macro BattVoltage in pos [15-25] -> 				chd(chan)=BattVoltage/10 ' averaged BTV, udpmon jaoks pane oige jagaja.. bup saatmisel sprintf$("%l.2F",chd(chan)) 
  <- 				chd(chan)=BattVoltage/10 ' averaged BTV, udpmon jaoks pane oige jagaja.. bup saatmisel sprintf$("%l.2F",chd(chan)) 
  -> 				chd(chan)=iostate(819)/10 ' averaged BTV, udpmon jaoks pane oige jagaja.. bup saatmisel sprintf$("%l.2F",chd(chan)) 
  - Macro BattVoltage in pos [41-51] -> 				syslog "appmain: battvoltage "+str$(BattVoltage)+" on ai"+str$(chan),5 ' mV
  <- 				syslog "appmain: battvoltage "+str$(BattVoltage)+" on ai"+str$(chan),5 ' mV
  -> 				syslog "appmain: battvoltage "+str$(iostate(819))+" on ai"+str$(chan),5 ' mV
  - Macro BattVoltage in pos [15-25] -> 				chd(chan)=BattVoltage/10 ' averaged BTV, saatmisel sprintf$("%l.2F",chd(chan)) 
  <- 				chd(chan)=BattVoltage/10 ' averaged BTV, saatmisel sprintf$("%l.2F",chd(chan)) 
  -> 				chd(chan)=iostate(819)/10 ' averaged BTV, saatmisel sprintf$("%l.2F",chd(chan)) 
  - Macro BattVoltage in pos [29-39] ->    if and(iostate(330) = 0, BattVoltage < iostate(809) - 10) then 
  <-    if and(iostate(330) = 0, BattVoltage < iostate(809) - 10) then 
  ->    if and(iostate(330) = 0, iostate(819) < iostate(809) - 10) then 
  - Macro BattVoltage in pos [27-37] -> 	if and(iostate(330) = 1, BattVoltage > iostate(809) + 10) then 
  <- 	if and(iostate(330) = 1, BattVoltage > iostate(809) + 10) then 
  -> 	if and(iostate(330) = 1, iostate(819) > iostate(809) + 10) then 
  - Macro BattVoltage in pos [27-37] -> 	if and(iostate(331) = 0, BattVoltage > iostate(810) + 10) then 
  <- 	if and(iostate(331) = 0, BattVoltage > iostate(810) + 10) then 
  -> 	if and(iostate(331) = 0, iostate(819) > iostate(810) + 10) then 
  - Macro BattVoltage in pos [27-37] -> 	if and(iostate(331) = 1, BattVoltage < iostate(810) - 10) then 
  <- 	if and(iostate(331) = 1, BattVoltage < iostate(810) - 10) then 
  -> 	if and(iostate(331) = 1, iostate(819) < iostate(810) - 10) then 
- PowerLossDelay= --> ioctl 820, 
  - Macro PowerLossDelay= in pos [9-23] ->  jj=766:PowerLossDelay=MIDGET(set$,jj-511,1):gosub 21010 ' voolukatkestuse teatamise viide
  <-  jj=766:PowerLossDelay=MIDGET(set$,jj-511,1):gosub 21010 ' voolukatkestuse teatamise viide
  ->  jj=766:ioctl 820, MIDGET(set$,jj-511,1):gosub 21010 ' voolukatkestuse teatamise viide
- PowerLossDelay --> iostate(820)
  - Macro PowerLossDelay in pos [62-75] ->    ' if and(iostate(329) = 0, iostate(318) = 1, up(0)> ts(8)+PowerLossDelay) then ioctl 329,  1:ms$=ms$+"PWS:2\n":gosub 270  ' kohe teatamine
  <-    ' if and(iostate(329) = 0, iostate(318) = 1, up(0)> ts(8)+PowerLossDelay) then ioctl 329,  1:ms$=ms$+"PWS:2\n":gosub 270  ' kohe teatamine
  ->    ' if and(iostate(329) = 0, iostate(318) = 1, up(0)> ts(8)+iostate(820)) then ioctl 329,  1:ms$=ms$+"PWS:2\n":gosub 270  ' kohe teatamine
- SlidingWindowSize= --> ioctl 821, 
  - Macro SlidingWindowSize= in pos [9-26] ->  jj=767:SlidingWindowSize=MIDGET(set$,jj-511,1):gosub 21010 ' keskmistamise tugevus
  <-  jj=767:SlidingWindowSize=MIDGET(set$,jj-511,1):gosub 21010 ' keskmistamise tugevus
  ->  jj=767:ioctl 821, MIDGET(set$,jj-511,1):gosub 21010 ' keskmistamise tugevus
- SlidingWindowSize --> iostate(821)
  - Macro SlidingWindowSize in pos [17-33] ->   ' keskmistame SlidingWindowSize viimast vaartust  eemisega sobivas vahekorras
  <-   ' keskmistame SlidingWindowSize viimast vaartust  eemisega sobivas vahekorras
  ->   ' keskmistame iostate(821) viimast vaartust  eemisega sobivas vahekorras
  - Macro SlidingWindowSize in pos [38-54] ->     if or(iostate(810+timertemp) =0, SlidingWindowSize = 0, SlidingWindowSize = 1) then ' jatame keskmistamise vahele
  <-     if or(iostate(810+timertemp) =0, SlidingWindowSize = 0, SlidingWindowSize = 1) then ' jatame keskmistamise vahele
  ->     if or(iostate(810+timertemp) =0, iostate(821) = 0, SlidingWindowSize = 1) then ' jatame keskmistamise vahele
  - Macro SlidingWindowSize in pos [56-72] ->     if or(iostate(810+timertemp) =0, iostate(821) = 0, SlidingWindowSize = 1) then ' jatame keskmistamise vahele
  <-     if or(iostate(810+timertemp) =0, iostate(821) = 0, SlidingWindowSize = 1) then ' jatame keskmistamise vahele
  ->     if or(iostate(810+timertemp) =0, iostate(821) = 0, iostate(821) = 1) then ' jatame keskmistamise vahele
  - Macro SlidingWindowSize in pos [55-71] ->         syslog "sub 330: no averaging, winsize="+str$(SlidingWindowSize),5
  <-         syslog "sub 330: no averaging, winsize="+str$(SlidingWindowSize),5
  ->         syslog "sub 330: no averaging, winsize="+str$(iostate(821)),5
  - Macro SlidingWindowSize in pos [64-80] ->         syslog "sub 330: averaging active, sli_win_size="+str$(SlidingWindowSize),5
  <-         syslog "sub 330: averaging active, sli_win_size="+str$(SlidingWindowSize),5
  ->         syslog "sub 330: averaging active, sli_win_size="+str$(iostate(821)),5
  - Macro SlidingWindowSize in pos [55-71] ->         ioctl 810+timertemp, (iostate(500+timertemp)+(SlidingWindowSize-1)*iostate(810+timertemp))/SlidingWindowSize ' averaging
  <-         ioctl 810+timertemp, (iostate(500+timertemp)+(SlidingWindowSize-1)*iostate(810+timertemp))/SlidingWindowSize ' averaging
  ->         ioctl 810+timertemp, (iostate(500+timertemp)+(iostate(821)-1)*iostate(810+timertemp))/SlidingWindowSize ' averaging
  - Macro SlidingWindowSize in pos [95-111] ->         ioctl 810+timertemp, (iostate(500+timertemp)+(iostate(821)-1)*iostate(810+timertemp))/SlidingWindowSize ' averaging
  <-         ioctl 810+timertemp, (iostate(500+timertemp)+(iostate(821)-1)*iostate(810+timertemp))/SlidingWindowSize ' averaging
  ->         ioctl 810+timertemp, (iostate(500+timertemp)+(iostate(821)-1)*iostate(810+timertemp))/iostate(821) ' averaging
- Data1IP[]= --> ioctl 822+, 
  - Macro Data1IP[]= in pos [5-20] ->     Data1IP[jj-567]=MIDGET(set$,jj-511,1):gosub 21010 
  <-     Data1IP[jj-567]=MIDGET(set$,jj-511,1):gosub 21010 
  ->     ioctl 822+jj-567, MIDGET(set$,jj-511,1):gosub 21010 
- Data1IP[] --> iostate(822+)
  - Macro Data1IP[] in pos [15-24] ->  if ping(str$(Data1IP[1])+"."+str$(Data1IP[2])+"."+str$(Data1IP[3])+"."+str$(Data1IP[4]),3000) > 0 then
  <-  if ping(str$(Data1IP[1])+"."+str$(Data1IP[2])+"."+str$(Data1IP[3])+"."+str$(Data1IP[4]),3000) > 0 then
  ->  if ping(str$(iostate(822+1))+"."+str$(Data1IP[2])+"."+str$(Data1IP[3])+"."+str$(Data1IP[4]),3000) > 0 then
  - Macro Data1IP[] in pos [40-49] ->  if ping(str$(iostate(822+1))+"."+str$(Data1IP[2])+"."+str$(Data1IP[3])+"."+str$(Data1IP[4]),3000) > 0 then
  <-  if ping(str$(iostate(822+1))+"."+str$(Data1IP[2])+"."+str$(Data1IP[3])+"."+str$(Data1IP[4]),3000) > 0 then
  ->  if ping(str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(Data1IP[3])+"."+str$(Data1IP[4]),3000) > 0 then
  - Macro Data1IP[] in pos [65-74] ->  if ping(str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(Data1IP[3])+"."+str$(Data1IP[4]),3000) > 0 then
  <-  if ping(str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(Data1IP[3])+"."+str$(Data1IP[4]),3000) > 0 then
  ->  if ping(str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(iostate(822+3))+"."+str$(Data1IP[4]),3000) > 0 then
  - Macro Data1IP[] in pos [90-99] ->  if ping(str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(iostate(822+3))+"."+str$(Data1IP[4]),3000) > 0 then
  <-  if ping(str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(iostate(822+3))+"."+str$(Data1IP[4]),3000) > 0 then
  ->  if ping(str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(iostate(822+3))+"."+str$(iostate(822+4)),3000) > 0 then
  - Macro Data1IP[] in pos [14-23] -> 	syslog str$(Data1IP[1])+"."+str$(Data1IP[2])+"."+str$(Data1IP[3])+"."+str$(Data1IP[4])+"  OK",4
  <- 	syslog str$(Data1IP[1])+"."+str$(Data1IP[2])+"."+str$(Data1IP[3])+"."+str$(Data1IP[4])+"  OK",4
  -> 	syslog str$(iostate(822+1))+"."+str$(Data1IP[2])+"."+str$(Data1IP[3])+"."+str$(Data1IP[4])+"  OK",4
  - Macro Data1IP[] in pos [39-48] -> 	syslog str$(iostate(822+1))+"."+str$(Data1IP[2])+"."+str$(Data1IP[3])+"."+str$(Data1IP[4])+"  OK",4
  <- 	syslog str$(iostate(822+1))+"."+str$(Data1IP[2])+"."+str$(Data1IP[3])+"."+str$(Data1IP[4])+"  OK",4
  -> 	syslog str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(Data1IP[3])+"."+str$(Data1IP[4])+"  OK",4
  - Macro Data1IP[] in pos [64-73] -> 	syslog str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(Data1IP[3])+"."+str$(Data1IP[4])+"  OK",4
  <- 	syslog str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(Data1IP[3])+"."+str$(Data1IP[4])+"  OK",4
  -> 	syslog str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(iostate(822+3))+"."+str$(Data1IP[4])+"  OK",4
  - Macro Data1IP[] in pos [89-98] -> 	syslog str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(iostate(822+3))+"."+str$(Data1IP[4])+"  OK",4
  <- 	syslog str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(iostate(822+3))+"."+str$(Data1IP[4])+"  OK",4
  -> 	syslog str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(iostate(822+3))+"."+str$(iostate(822+4))+"  OK",4
  - Macro Data1IP[] in pos [14-23] -> 	syslog str$(Data1IP[1])+"."+str$(Data1IP[2])+"."+str$(Data1IP[3])+"."+str$(Data1IP[4])+" no response in 3 s",4
  <- 	syslog str$(Data1IP[1])+"."+str$(Data1IP[2])+"."+str$(Data1IP[3])+"."+str$(Data1IP[4])+" no response in 3 s",4
  -> 	syslog str$(iostate(822+1))+"."+str$(Data1IP[2])+"."+str$(Data1IP[3])+"."+str$(Data1IP[4])+" no response in 3 s",4
  - Macro Data1IP[] in pos [39-48] -> 	syslog str$(iostate(822+1))+"."+str$(Data1IP[2])+"."+str$(Data1IP[3])+"."+str$(Data1IP[4])+" no response in 3 s",4
  <- 	syslog str$(iostate(822+1))+"."+str$(Data1IP[2])+"."+str$(Data1IP[3])+"."+str$(Data1IP[4])+" no response in 3 s",4
  -> 	syslog str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(Data1IP[3])+"."+str$(Data1IP[4])+" no response in 3 s",4
  - Macro Data1IP[] in pos [64-73] -> 	syslog str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(Data1IP[3])+"."+str$(Data1IP[4])+" no response in 3 s",4
  <- 	syslog str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(Data1IP[3])+"."+str$(Data1IP[4])+" no response in 3 s",4
  -> 	syslog str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(iostate(822+3))+"."+str$(Data1IP[4])+" no response in 3 s",4
  - Macro Data1IP[] in pos [89-98] -> 	syslog str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(iostate(822+3))+"."+str$(Data1IP[4])+" no response in 3 s",4
  <- 	syslog str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(iostate(822+3))+"."+str$(Data1IP[4])+" no response in 3 s",4
  -> 	syslog str$(iostate(822+1))+"."+str$(iostate(822+2))+"."+str$(iostate(822+3))+"."+str$(iostate(822+4))+" no response in 3 s",4
- Data2IP[]= --> ioctl 826+, 
  - Macro Data2IP[]= in pos [5-20] ->     Data2IP[jj-571]=MIDGET(set$,jj-511,1):gosub 21010 
  <-     Data2IP[jj-571]=MIDGET(set$,jj-511,1):gosub 21010 
  ->     ioctl 826+jj-571, MIDGET(set$,jj-511,1):gosub 21010 
- Data2IP[] --> iostate(826+)
  - Macro Data2IP[] in pos [15-24] ->  if ping(str$(Data2IP[1])+"."+str$(Data2IP[2])+"."+str$(Data2IP[3])+"."+str$(Data2IP[4]),3000) > 0 then
  <-  if ping(str$(Data2IP[1])+"."+str$(Data2IP[2])+"."+str$(Data2IP[3])+"."+str$(Data2IP[4]),3000) > 0 then
  ->  if ping(str$(iostate(826+1))+"."+str$(Data2IP[2])+"."+str$(Data2IP[3])+"."+str$(Data2IP[4]),3000) > 0 then
  - Macro Data2IP[] in pos [40-49] ->  if ping(str$(iostate(826+1))+"."+str$(Data2IP[2])+"."+str$(Data2IP[3])+"."+str$(Data2IP[4]),3000) > 0 then
  <-  if ping(str$(iostate(826+1))+"."+str$(Data2IP[2])+"."+str$(Data2IP[3])+"."+str$(Data2IP[4]),3000) > 0 then
  ->  if ping(str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(Data2IP[3])+"."+str$(Data2IP[4]),3000) > 0 then
  - Macro Data2IP[] in pos [65-74] ->  if ping(str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(Data2IP[3])+"."+str$(Data2IP[4]),3000) > 0 then
  <-  if ping(str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(Data2IP[3])+"."+str$(Data2IP[4]),3000) > 0 then
  ->  if ping(str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(iostate(826+3))+"."+str$(Data2IP[4]),3000) > 0 then
  - Macro Data2IP[] in pos [90-99] ->  if ping(str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(iostate(826+3))+"."+str$(Data2IP[4]),3000) > 0 then
  <-  if ping(str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(iostate(826+3))+"."+str$(Data2IP[4]),3000) > 0 then
  ->  if ping(str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(iostate(826+3))+"."+str$(iostate(826+4)),3000) > 0 then
  - Macro Data2IP[] in pos [14-23] -> 	syslog str$(Data2IP[1])+"."+str$(Data2IP[2])+"."+str$(Data2IP[3])+"."+str$(Data2IP[4])+"  OK",4
  <- 	syslog str$(Data2IP[1])+"."+str$(Data2IP[2])+"."+str$(Data2IP[3])+"."+str$(Data2IP[4])+"  OK",4
  -> 	syslog str$(iostate(826+1))+"."+str$(Data2IP[2])+"."+str$(Data2IP[3])+"."+str$(Data2IP[4])+"  OK",4
  - Macro Data2IP[] in pos [39-48] -> 	syslog str$(iostate(826+1))+"."+str$(Data2IP[2])+"."+str$(Data2IP[3])+"."+str$(Data2IP[4])+"  OK",4
  <- 	syslog str$(iostate(826+1))+"."+str$(Data2IP[2])+"."+str$(Data2IP[3])+"."+str$(Data2IP[4])+"  OK",4
  -> 	syslog str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(Data2IP[3])+"."+str$(Data2IP[4])+"  OK",4
  - Macro Data2IP[] in pos [64-73] -> 	syslog str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(Data2IP[3])+"."+str$(Data2IP[4])+"  OK",4
  <- 	syslog str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(Data2IP[3])+"."+str$(Data2IP[4])+"  OK",4
  -> 	syslog str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(iostate(826+3))+"."+str$(Data2IP[4])+"  OK",4
  - Macro Data2IP[] in pos [89-98] -> 	syslog str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(iostate(826+3))+"."+str$(Data2IP[4])+"  OK",4
  <- 	syslog str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(iostate(826+3))+"."+str$(Data2IP[4])+"  OK",4
  -> 	syslog str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(iostate(826+3))+"."+str$(iostate(826+4))+"  OK",4
  - Macro Data2IP[] in pos [14-23] -> 	syslog str$(Data2IP[1])+"."+str$(Data2IP[2])+"."+str$(Data2IP[3])+"."+str$(Data2IP[4])+" no response in 3 s",4
  <- 	syslog str$(Data2IP[1])+"."+str$(Data2IP[2])+"."+str$(Data2IP[3])+"."+str$(Data2IP[4])+" no response in 3 s",4
  -> 	syslog str$(iostate(826+1))+"."+str$(Data2IP[2])+"."+str$(Data2IP[3])+"."+str$(Data2IP[4])+" no response in 3 s",4
  - Macro Data2IP[] in pos [39-48] -> 	syslog str$(iostate(826+1))+"."+str$(Data2IP[2])+"."+str$(Data2IP[3])+"."+str$(Data2IP[4])+" no response in 3 s",4
  <- 	syslog str$(iostate(826+1))+"."+str$(Data2IP[2])+"."+str$(Data2IP[3])+"."+str$(Data2IP[4])+" no response in 3 s",4
  -> 	syslog str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(Data2IP[3])+"."+str$(Data2IP[4])+" no response in 3 s",4
  - Macro Data2IP[] in pos [64-73] -> 	syslog str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(Data2IP[3])+"."+str$(Data2IP[4])+" no response in 3 s",4
  <- 	syslog str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(Data2IP[3])+"."+str$(Data2IP[4])+" no response in 3 s",4
  -> 	syslog str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(iostate(826+3))+"."+str$(Data2IP[4])+" no response in 3 s",4
  - Macro Data2IP[] in pos [89-98] -> 	syslog str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(iostate(826+3))+"."+str$(Data2IP[4])+" no response in 3 s",4
  <- 	syslog str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(iostate(826+3))+"."+str$(Data2IP[4])+" no response in 3 s",4
  -> 	syslog str$(iostate(826+1))+"."+str$(iostate(826+2))+"."+str$(iostate(826+3))+"."+str$(iostate(826+4))+" no response in 3 s",4
- Mon1IP[]= --> ioctl 830+, 
  - Macro Mon1IP[]= in pos [5-19] ->     Mon1IP[jj-555]=MIDGET(set$,jj-511,1):gosub 21010
  <-     Mon1IP[jj-555]=MIDGET(set$,jj-511,1):gosub 21010
  ->     ioctl 830+jj-555, MIDGET(set$,jj-511,1):gosub 21010
- Mon1IP[] --> iostate(830+)
  - Macro Mon1IP[] in pos [20-33] -> 		mip1$=mip1$+str$(Mon1IP[jj-555])
  <- 		mip1$=mip1$+str$(Mon1IP[jj-555])
  -> 		mip1$=mip1$+str$(iostate(830+jj-555))
  - Macro Mon1IP[] in pos [19-32] -> 	mip2$=mip2$+str$(Mon1IP[jj-555])
  <- 	mip2$=mip2$+str$(Mon1IP[jj-555])
  -> 	mip2$=mip2$+str$(iostate(830+jj-555))
- Mon2IP[]= --> ioctl 834+, 
  - Macro Mon2IP[]= in pos [5-19] ->     Mon2IP[jj-559]=MIDGET(set$,jj-511,1):gosub 21010 
  <-     Mon2IP[jj-559]=MIDGET(set$,jj-511,1):gosub 21010 
  ->     ioctl 834+jj-559, MIDGET(set$,jj-511,1):gosub 21010 
- Mon2IP[] --> iostate(834+)
- DataPort= --> ioctl 839, 
  - Macro DataPort= in pos [9-17] ->  jj=576:DataPort=MIDGET(set$,jj-511,2)
  <-  jj=576:DataPort=MIDGET(set$,jj-511,2)
  ->  jj=576:ioctl 839, MIDGET(set$,jj-511,2)
  - Macro DataPort= in pos [22-30] ->  if DataPort =0 then DataPort=80
  <-  if DataPort =0 then DataPort=80
  ->  if DataPort =0 then ioctl 839, 80
- DataPort --> iostate(839)
  - Macro DataPort in pos [5-12] ->  if DataPort =0 then ioctl 839, 80
  <-  if DataPort =0 then ioctl 839, 80
  ->  if iostate(839) =0 then ioctl 839, 80
- DataInterval= --> ioctl 841, 
  - Macro DataInterval= in pos [9-21] ->  jj=764:DataInterval=MIDGET(set$,jj-511,2):gosub 21020 ' max data intervall
  <-  jj=764:DataInterval=MIDGET(set$,jj-511,2):gosub 21020 ' max data intervall
  ->  jj=764:ioctl 841, MIDGET(set$,jj-511,2):gosub 21020 ' max data intervall
- DataInterval --> iostate(841)
- MonInterval= --> ioctl 842, 
  - Macro MonInterval= in pos [9-20] ->  jj=762:MonInterval=MIDGET(set$,jj-511,2):gosub 21020 ' max mon intervall
  <-  jj=762:MonInterval=MIDGET(set$,jj-511,2):gosub 21020 ' max mon intervall
  ->  jj=762:ioctl 842, MIDGET(set$,jj-511,2):gosub 21020 ' max mon intervall
- MonInterval --> iostate(842)
  - Macro MonInterval in pos [42-52] ->     'if or(and(up(0)>30, up(8)=0), up(8)+MonInterval < up(0), d_id = 0) then 'saadaks midagi
  <-     'if or(and(up(0)>30, up(8)=0), up(8)+MonInterval < up(0), d_id = 0) then 'saadaks midagi
  ->     'if or(and(up(0)>30, up(8)=0), up(8)+iostate(842) < up(0), d_id = 0) then 'saadaks midagi
  - Macro MonInterval in pos [41-51] ->     if or(and(up(0)>30, up(8)=0), up(8)+MonInterval < up(0)) then ' esimene saatmine peale restarti    
  <-     if or(and(up(0)>30, up(8)=0), up(8)+MonInterval < up(0)) then ' esimene saatmine peale restarti    
  ->     if or(and(up(0)>30, up(8)=0), up(8)+iostate(842) < up(0)) then ' esimene saatmine peale restarti    
- CommFailDelay= --> ioctl 843, 
  - Macro CommFailDelay= in pos [9-22] ->  jj=566:CommFailDelay=60*MIDGET(set$,jj-511,1):gosub 21010 ' sisestada minutites, kasutada sekundites
  <-  jj=566:CommFailDelay=60*MIDGET(set$,jj-511,1):gosub 21010 ' sisestada minutites, kasutada sekundites
  ->  jj=566:ioctl 843, 60*MIDGET(set$,jj-511,1):gosub 21010 ' sisestada minutites, kasutada sekundites
  - Macro CommFailDelay= in pos [30-43] ->  if CommFailDelay<  180 then CommFailDelay=180
  <-  if CommFailDelay<  180 then CommFailDelay=180
  ->  if CommFailDelay<  180 then ioctl 843, 180
- CommFailDelay --> iostate(843)
  - Macro CommFailDelay in pos [75-87] ->     ' syslog "main: gprsuptime "+str$(GprsUptime)+", commfaildelay "+str$(CommFailDelay)+", uptime "+str$(up(0)),4 'ajutine
  <-     ' syslog "main: gprsuptime "+str$(GprsUptime)+", commfaildelay "+str$(CommFailDelay)+", uptime "+str$(up(0)),4 'ajutine
  ->     ' syslog "main: gprsuptime "+str$(GprsUptime)+", commfaildelay "+str$(iostate(843))+", uptime "+str$(up(0)),4 'ajutine
  - Macro CommFailDelay in pos [24-36] ->     'if and(GprsUptime>CommFailDelay, up(0)>LastCommTS+CommFailDelay) then ' udp saabumisi pole olnud
  <-     'if and(GprsUptime>CommFailDelay, up(0)>LastCommTS+CommFailDelay) then ' udp saabumisi pole olnud
  ->     'if and(GprsUptime>iostate(843), up(0)>LastCommTS+CommFailDelay) then ' udp saabumisi pole olnud
  - Macro CommFailDelay in pos [55-67] ->     'if and(GprsUptime>iostate(843), up(0)>LastCommTS+CommFailDelay) then ' udp saabumisi pole olnud
  <-     'if and(GprsUptime>iostate(843), up(0)>LastCommTS+CommFailDelay) then ' udp saabumisi pole olnud
  ->     'if and(GprsUptime>iostate(843), up(0)>LastCommTS+iostate(843)) then ' udp saabumisi pole olnud
  - Macro CommFailDelay in pos [19-31] ->     if and(up(14)>CommFailDelay, up(0)>up(5)+CommFailDelay) then ' udp saabumisi pole olnud
  <-     if and(up(14)>CommFailDelay, up(0)>up(5)+CommFailDelay) then ' udp saabumisi pole olnud
  ->     if and(up(14)>iostate(843), up(0)>up(5)+CommFailDelay) then ' udp saabumisi pole olnud
  - Macro CommFailDelay in pos [45-57] ->     if and(up(14)>iostate(843), up(0)>up(5)+CommFailDelay) then ' udp saabumisi pole olnud
  <-     if and(up(14)>iostate(843), up(0)>up(5)+CommFailDelay) then ' udp saabumisi pole olnud
  ->     if and(up(14)>iostate(843), up(0)>up(5)+iostate(843)) then ' udp saabumisi pole olnud
  - Macro CommFailDelay in pos [76-88] ->         syslog "main: GPRS power break due to comm loss longer than "+str$(CommFailDelay)+" s!",4
  <-         syslog "main: GPRS power break due to comm loss longer than "+str$(CommFailDelay)+" s!",4
  ->         syslog "main: GPRS power break due to comm loss longer than "+str$(iostate(843))+" s!",4
  - Macro CommFailDelay in pos [45-57] ->     if and(up(0)>UptimeDelay, up(0)>up(5)+3*CommFailDelay+120) then '  voib rebooti teha, kolmanda gprs restardi jarel andes enne 120s aega gprs kaivitumiseks
  <-     if and(up(0)>UptimeDelay, up(0)>up(5)+3*CommFailDelay+120) then '  voib rebooti teha, kolmanda gprs restardi jarel andes enne 120s aega gprs kaivitumiseks
  ->     if and(up(0)>UptimeDelay, up(0)>up(5)+3*iostate(843)+120) then '  voib rebooti teha, kolmanda gprs restardi jarel andes enne 120s aega gprs kaivitumiseks
  - Macro CommFailDelay in pos [19-31] ->     if and(up(14)>CommFailDelay, up(0)>up(5)+CommFailDelay) then ' udp saabumisi pole olnud
  <-     if and(up(14)>CommFailDelay, up(0)>up(5)+CommFailDelay) then ' udp saabumisi pole olnud
  ->     if and(up(14)>iostate(843), up(0)>up(5)+CommFailDelay) then ' udp saabumisi pole olnud
  - Macro CommFailDelay in pos [45-57] ->     if and(up(14)>iostate(843), up(0)>up(5)+CommFailDelay) then ' udp saabumisi pole olnud
  <-     if and(up(14)>iostate(843), up(0)>up(5)+CommFailDelay) then ' udp saabumisi pole olnud
  ->     if and(up(14)>iostate(843), up(0)>up(5)+iostate(843)) then ' udp saabumisi pole olnud
  - Macro CommFailDelay in pos [88-100] ->             syslog "main: changing default gateway due to comm loss longer than "+str$(CommFailDelay)+" s!",4 ' vahetada B12..B15
  <-             syslog "main: changing default gateway due to comm loss longer than "+str$(CommFailDelay)+" s!",4 ' vahetada B12..B15
  ->             syslog "main: changing default gateway due to comm loss longer than "+str$(iostate(843))+" s!",4 ' vahetada B12..B15
  - Macro CommFailDelay in pos [5-17] ->  if CommFailDelay<  180 then ioctl 843, 180
  <-  if CommFailDelay<  180 then ioctl 843, 180
  ->  if iostate(843)<  180 then ioctl 843, 180
- CommFailReaction= --> ioctl 844, 
  - Macro CommFailReaction= in pos [9-25] ->  jj=555:CommFailReaction=MIDGET(set$,jj-511,1):gosub 21010
  <-  jj=555:CommFailReaction=MIDGET(set$,jj-511,1):gosub 21010
  ->  jj=555:ioctl 844, MIDGET(set$,jj-511,1):gosub 21010
- CommFailReaction --> iostate(844)
  - Macro CommFailReaction in pos [42-57] ->   ' syslog "main:commfailreaction="+str$(CommFailReaction),4 ' ajutine
  <-   ' syslog "main:commfailreaction="+str$(CommFailReaction),4 ' ajutine
  ->   ' syslog "main:commfailreaction="+str$(iostate(844)),4 ' ajutine
  - Macro CommFailReaction in pos [12-27] ->   if and(1,CommFailReaction) = 1 then ' gprs toitekatkestus on lubatud
  <-   if and(1,CommFailReaction) = 1 then ' gprs toitekatkestus on lubatud
  ->   if and(1,iostate(844)) = 1 then ' gprs toitekatkestus on lubatud
  - Macro CommFailReaction in pos [12-27] ->   if and(2,CommFailReaction) = 2 then ' reboot sidekatkestuse korral on lubatud, 3 x pikem katkestus vajalik kui gprs resetiks!
  <-   if and(2,CommFailReaction) = 2 then ' reboot sidekatkestuse korral on lubatud, 3 x pikem katkestus vajalik kui gprs resetiks!
  ->   if and(2,iostate(844)) = 2 then ' reboot sidekatkestuse korral on lubatud, 3 x pikem katkestus vajalik kui gprs resetiks!
  - Macro CommFailReaction in pos [12-27] ->   if and(8,CommFailReaction) then ' varulyysi kasutus on lubatud, side kontroll udp alusel. peaks kaasama ka tcp...
  <-   if and(8,CommFailReaction) then ' varulyysi kasutus on lubatud, side kontroll udp alusel. peaks kaasama ka tcp...
  ->   if and(8,iostate(844)) then ' varulyysi kasutus on lubatud, side kontroll udp alusel. peaks kaasama ka tcp...
- UptimeDelay= --> ioctl 845, 
  - Macro UptimeDelay= in pos [9-20] ->  jj=567:UptimeDelay=3600*MIDGET(set$,jj-511,1):gosub 21010 ' sisestada minutites, kasutada tundides
  <-  jj=567:UptimeDelay=3600*MIDGET(set$,jj-511,1):gosub 21010 ' sisestada minutites, kasutada tundides
  ->  jj=567:ioctl 845, 3600*MIDGET(set$,jj-511,1):gosub 21010 ' sisestada minutites, kasutada tundides
- UptimeDelay --> iostate(845)
  - Macro UptimeDelay in pos [39-49] ->     'syslog "main: uptimedelay "+str$(UptimeDelay)+", uptime "+str$(up(0))+", lastcommTS "+str$(LastCommTS),4 'ajutine
  <-     'syslog "main: uptimedelay "+str$(UptimeDelay)+", uptime "+str$(up(0))+", lastcommTS "+str$(LastCommTS),4 'ajutine
  ->     'syslog "main: uptimedelay "+str$(iostate(845))+", uptime "+str$(up(0))+", lastcommTS "+str$(LastCommTS),4 'ajutine
  - Macro UptimeDelay in pos [18-28] ->     if and(up(0)>UptimeDelay, up(0)>up(5)+3*iostate(843)+120) then '  voib rebooti teha, kolmanda gprs restardi jarel andes enne 120s aega gprs kaivitumiseks
  <-     if and(up(0)>UptimeDelay, up(0)>up(5)+3*iostate(843)+120) then '  voib rebooti teha, kolmanda gprs restardi jarel andes enne 120s aega gprs kaivitumiseks
  ->     if and(up(0)>iostate(845), up(0)>up(5)+3*iostate(843)+120) then '  voib rebooti teha, kolmanda gprs restardi jarel andes enne 120s aega gprs kaivitumiseks
- PrimGW[]= --> ioctl 845+, 
  - Macro PrimGW[]= in pos [5-19] ->     PrimGW[jj-911]=MIDGET(set$,jj-767,1):gosub 21010
  <-     PrimGW[jj-911]=MIDGET(set$,jj-767,1):gosub 21010
  ->     ioctl 845+jj-911, MIDGET(set$,jj-767,1):gosub 21010
- PrimGW[] --> iostate(845+)
  - Macro PrimGW[] in pos [25-33] ->            if ping(str$(PrimGW[1])+"."+str$(PrimGW[2])+"."+str$(PrimGW[3])+"."+str$(PrimGW[4]),1000) > 0 then 'prim gw VASTAB, SAMAS LANis
  <-            if ping(str$(PrimGW[1])+"."+str$(PrimGW[2])+"."+str$(PrimGW[3])+"."+str$(PrimGW[4]),1000) > 0 then 'prim gw VASTAB, SAMAS LANis
  ->            if ping(str$(iostate(845+1))+"."+str$(PrimGW[2])+"."+str$(PrimGW[3])+"."+str$(PrimGW[4]),1000) > 0 then 'prim gw VASTAB, SAMAS LANis
  - Macro PrimGW[] in pos [50-58] ->            if ping(str$(iostate(845+1))+"."+str$(PrimGW[2])+"."+str$(PrimGW[3])+"."+str$(PrimGW[4]),1000) > 0 then 'prim gw VASTAB, SAMAS LANis
  <-            if ping(str$(iostate(845+1))+"."+str$(PrimGW[2])+"."+str$(PrimGW[3])+"."+str$(PrimGW[4]),1000) > 0 then 'prim gw VASTAB, SAMAS LANis
  ->            if ping(str$(iostate(845+1))+"."+str$(iostate(845+2))+"."+str$(PrimGW[3])+"."+str$(PrimGW[4]),1000) > 0 then 'prim gw VASTAB, SAMAS LANis
  - Macro PrimGW[] in pos [75-83] ->            if ping(str$(iostate(845+1))+"."+str$(iostate(845+2))+"."+str$(PrimGW[3])+"."+str$(PrimGW[4]),1000) > 0 then 'prim gw VASTAB, SAMAS LANis
  <-            if ping(str$(iostate(845+1))+"."+str$(iostate(845+2))+"."+str$(PrimGW[3])+"."+str$(PrimGW[4]),1000) > 0 then 'prim gw VASTAB, SAMAS LANis
  ->            if ping(str$(iostate(845+1))+"."+str$(iostate(845+2))+"."+str$(iostate(845+3))+"."+str$(PrimGW[4]),1000) > 0 then 'prim gw VASTAB, SAMAS LANis
  - Macro PrimGW[] in pos [100-108] ->            if ping(str$(iostate(845+1))+"."+str$(iostate(845+2))+"."+str$(iostate(845+3))+"."+str$(PrimGW[4]),1000) > 0 then 'prim gw VASTAB, SAMAS LANis
  <-            if ping(str$(iostate(845+1))+"."+str$(iostate(845+2))+"."+str$(iostate(845+3))+"."+str$(PrimGW[4]),1000) > 0 then 'prim gw VASTAB, SAMAS LANis
  ->            if ping(str$(iostate(845+1))+"."+str$(iostate(845+2))+"."+str$(iostate(845+3))+"."+str$(iostate(845+4)),1000) > 0 then 'prim gw VASTAB, SAMAS LANis
  - Macro PrimGW[] in pos [46-54] ->                 mr$="id:"+mac$+"\nB12:"+str$(PrimGW[1])+"\nB13:"+str$(PrimGW[2])+"\nB14:"+str$(PrimGW[3])+"\nB15:"+str$(PrimGW[4])+"\n":gosub 142:gosub 145
  <-                 mr$="id:"+mac$+"\nB12:"+str$(PrimGW[1])+"\nB13:"+str$(PrimGW[2])+"\nB14:"+str$(PrimGW[3])+"\nB15:"+str$(PrimGW[4])+"\n":gosub 142:gosub 145
  ->                 mr$="id:"+mac$+"\nB12:"+str$(iostate(845+1))+"\nB13:"+str$(PrimGW[2])+"\nB14:"+str$(PrimGW[3])+"\nB15:"+str$(PrimGW[4])+"\n":gosub 142:gosub 145
  - Macro PrimGW[] in pos [76-84] ->                 mr$="id:"+mac$+"\nB12:"+str$(iostate(845+1))+"\nB13:"+str$(PrimGW[2])+"\nB14:"+str$(PrimGW[3])+"\nB15:"+str$(PrimGW[4])+"\n":gosub 142:gosub 145
  <-                 mr$="id:"+mac$+"\nB12:"+str$(iostate(845+1))+"\nB13:"+str$(PrimGW[2])+"\nB14:"+str$(PrimGW[3])+"\nB15:"+str$(PrimGW[4])+"\n":gosub 142:gosub 145
  ->                 mr$="id:"+mac$+"\nB12:"+str$(iostate(845+1))+"\nB13:"+str$(iostate(845+2))+"\nB14:"+str$(PrimGW[3])+"\nB15:"+str$(PrimGW[4])+"\n":gosub 142:gosub 145
  - Macro PrimGW[] in pos [106-114] ->                 mr$="id:"+mac$+"\nB12:"+str$(iostate(845+1))+"\nB13:"+str$(iostate(845+2))+"\nB14:"+str$(PrimGW[3])+"\nB15:"+str$(PrimGW[4])+"\n":gosub 142:gosub 145
  <-                 mr$="id:"+mac$+"\nB12:"+str$(iostate(845+1))+"\nB13:"+str$(iostate(845+2))+"\nB14:"+str$(PrimGW[3])+"\nB15:"+str$(PrimGW[4])+"\n":gosub 142:gosub 145
  ->                 mr$="id:"+mac$+"\nB12:"+str$(iostate(845+1))+"\nB13:"+str$(iostate(845+2))+"\nB14:"+str$(iostate(845+3))+"\nB15:"+str$(PrimGW[4])+"\n":gosub 142:gosub 145
  - Macro PrimGW[] in pos [136-144] ->                 mr$="id:"+mac$+"\nB12:"+str$(iostate(845+1))+"\nB13:"+str$(iostate(845+2))+"\nB14:"+str$(iostate(845+3))+"\nB15:"+str$(PrimGW[4])+"\n":gosub 142:gosub 145
  <-                 mr$="id:"+mac$+"\nB12:"+str$(iostate(845+1))+"\nB13:"+str$(iostate(845+2))+"\nB14:"+str$(iostate(845+3))+"\nB15:"+str$(PrimGW[4])+"\n":gosub 142:gosub 145
  ->                 mr$="id:"+mac$+"\nB12:"+str$(iostate(845+1))+"\nB13:"+str$(iostate(845+2))+"\nB14:"+str$(iostate(845+3))+"\nB15:"+str$(iostate(845+4))+"\n":gosub 142:gosub 145
- SecondGW[]= --> ioctl 850+, 
  - Macro SecondGW[]= in pos [5-21] ->     SecondGW[jj-857]=MIDGET(set$,jj-767,1):gosub 21010
  <-     SecondGW[jj-857]=MIDGET(set$,jj-767,1):gosub 21010
  ->     ioctl 850+jj-857, MIDGET(set$,jj-767,1):gosub 21010
- SecondGW[] --> iostate(850+)
  - Macro SecondGW[] in pos [62-72] ->         syslog "main: need to change gw to secondary! "+str$(SecondGW[1])+"."+str$(SecondGW[2])+"."+str$(SecondGW[3])+"."+str$(SecondGW[4]),4
  <-         syslog "main: need to change gw to secondary! "+str$(SecondGW[1])+"."+str$(SecondGW[2])+"."+str$(SecondGW[3])+"."+str$(SecondGW[4]),4
  ->         syslog "main: need to change gw to secondary! "+str$(iostate(850+1))+"."+str$(SecondGW[2])+"."+str$(SecondGW[3])+"."+str$(SecondGW[4]),4
  - Macro SecondGW[] in pos [87-97] ->         syslog "main: need to change gw to secondary! "+str$(iostate(850+1))+"."+str$(SecondGW[2])+"."+str$(SecondGW[3])+"."+str$(SecondGW[4]),4
  <-         syslog "main: need to change gw to secondary! "+str$(iostate(850+1))+"."+str$(SecondGW[2])+"."+str$(SecondGW[3])+"."+str$(SecondGW[4]),4
  ->         syslog "main: need to change gw to secondary! "+str$(iostate(850+1))+"."+str$(iostate(850+2))+"."+str$(SecondGW[3])+"."+str$(SecondGW[4]),4
  - Macro SecondGW[] in pos [112-122] ->         syslog "main: need to change gw to secondary! "+str$(iostate(850+1))+"."+str$(iostate(850+2))+"."+str$(SecondGW[3])+"."+str$(SecondGW[4]),4
  <-         syslog "main: need to change gw to secondary! "+str$(iostate(850+1))+"."+str$(iostate(850+2))+"."+str$(SecondGW[3])+"."+str$(SecondGW[4]),4
  ->         syslog "main: need to change gw to secondary! "+str$(iostate(850+1))+"."+str$(iostate(850+2))+"."+str$(iostate(850+3))+"."+str$(SecondGW[4]),4
  - Macro SecondGW[] in pos [137-147] ->         syslog "main: need to change gw to secondary! "+str$(iostate(850+1))+"."+str$(iostate(850+2))+"."+str$(iostate(850+3))+"."+str$(SecondGW[4]),4
  <-         syslog "main: need to change gw to secondary! "+str$(iostate(850+1))+"."+str$(iostate(850+2))+"."+str$(iostate(850+3))+"."+str$(SecondGW[4]),4
  ->         syslog "main: need to change gw to secondary! "+str$(iostate(850+1))+"."+str$(iostate(850+2))+"."+str$(iostate(850+3))+"."+str$(iostate(850+4)),4
  - Macro SecondGW[] in pos [22-32] ->         if ping(str$(SecondGW[1])+"."+str$(SecondGW[2])+"."+str$(SecondGW[3])+"."+str$(SecondGW[4]),1000) > 0 then 'GPRS RUUTER VASTAB, SAMAS LANis
  <-         if ping(str$(SecondGW[1])+"."+str$(SecondGW[2])+"."+str$(SecondGW[3])+"."+str$(SecondGW[4]),1000) > 0 then 'GPRS RUUTER VASTAB, SAMAS LANis
  ->         if ping(str$(iostate(850+1))+"."+str$(SecondGW[2])+"."+str$(SecondGW[3])+"."+str$(SecondGW[4]),1000) > 0 then 'GPRS RUUTER VASTAB, SAMAS LANis
  - Macro SecondGW[] in pos [47-57] ->         if ping(str$(iostate(850+1))+"."+str$(SecondGW[2])+"."+str$(SecondGW[3])+"."+str$(SecondGW[4]),1000) > 0 then 'GPRS RUUTER VASTAB, SAMAS LANis
  <-         if ping(str$(iostate(850+1))+"."+str$(SecondGW[2])+"."+str$(SecondGW[3])+"."+str$(SecondGW[4]),1000) > 0 then 'GPRS RUUTER VASTAB, SAMAS LANis
  ->         if ping(str$(iostate(850+1))+"."+str$(iostate(850+2))+"."+str$(SecondGW[3])+"."+str$(SecondGW[4]),1000) > 0 then 'GPRS RUUTER VASTAB, SAMAS LANis
  - Macro SecondGW[] in pos [72-82] ->         if ping(str$(iostate(850+1))+"."+str$(iostate(850+2))+"."+str$(SecondGW[3])+"."+str$(SecondGW[4]),1000) > 0 then 'GPRS RUUTER VASTAB, SAMAS LANis
  <-         if ping(str$(iostate(850+1))+"."+str$(iostate(850+2))+"."+str$(SecondGW[3])+"."+str$(SecondGW[4]),1000) > 0 then 'GPRS RUUTER VASTAB, SAMAS LANis
  ->         if ping(str$(iostate(850+1))+"."+str$(iostate(850+2))+"."+str$(iostate(850+3))+"."+str$(SecondGW[4]),1000) > 0 then 'GPRS RUUTER VASTAB, SAMAS LANis
  - Macro SecondGW[] in pos [97-107] ->         if ping(str$(iostate(850+1))+"."+str$(iostate(850+2))+"."+str$(iostate(850+3))+"."+str$(SecondGW[4]),1000) > 0 then 'GPRS RUUTER VASTAB, SAMAS LANis
  <-         if ping(str$(iostate(850+1))+"."+str$(iostate(850+2))+"."+str$(iostate(850+3))+"."+str$(SecondGW[4]),1000) > 0 then 'GPRS RUUTER VASTAB, SAMAS LANis
  ->         if ping(str$(iostate(850+1))+"."+str$(iostate(850+2))+"."+str$(iostate(850+3))+"."+str$(iostate(850+4)),1000) > 0 then 'GPRS RUUTER VASTAB, SAMAS LANis
  - Macro SecondGW[] in pos [42-52] ->             mr$="id:"+mac$+"\nB12:"+str$(SecondGW[1])+"\nB13:"+str$(SecondGW[2])+"\nB14:"+str$(SecondGW[3])+"\nB15:"+str$(SecondGW[4])+"\n":gosub 142:gosub 145
  <-             mr$="id:"+mac$+"\nB12:"+str$(SecondGW[1])+"\nB13:"+str$(SecondGW[2])+"\nB14:"+str$(SecondGW[3])+"\nB15:"+str$(SecondGW[4])+"\n":gosub 142:gosub 145
  ->             mr$="id:"+mac$+"\nB12:"+str$(iostate(850+1))+"\nB13:"+str$(SecondGW[2])+"\nB14:"+str$(SecondGW[3])+"\nB15:"+str$(SecondGW[4])+"\n":gosub 142:gosub 145
  - Macro SecondGW[] in pos [72-82] ->             mr$="id:"+mac$+"\nB12:"+str$(iostate(850+1))+"\nB13:"+str$(SecondGW[2])+"\nB14:"+str$(SecondGW[3])+"\nB15:"+str$(SecondGW[4])+"\n":gosub 142:gosub 145
  <-             mr$="id:"+mac$+"\nB12:"+str$(iostate(850+1))+"\nB13:"+str$(SecondGW[2])+"\nB14:"+str$(SecondGW[3])+"\nB15:"+str$(SecondGW[4])+"\n":gosub 142:gosub 145
  ->             mr$="id:"+mac$+"\nB12:"+str$(iostate(850+1))+"\nB13:"+str$(iostate(850+2))+"\nB14:"+str$(SecondGW[3])+"\nB15:"+str$(SecondGW[4])+"\n":gosub 142:gosub 145
  - Macro SecondGW[] in pos [102-112] ->             mr$="id:"+mac$+"\nB12:"+str$(iostate(850+1))+"\nB13:"+str$(iostate(850+2))+"\nB14:"+str$(SecondGW[3])+"\nB15:"+str$(SecondGW[4])+"\n":gosub 142:gosub 145
  <-             mr$="id:"+mac$+"\nB12:"+str$(iostate(850+1))+"\nB13:"+str$(iostate(850+2))+"\nB14:"+str$(SecondGW[3])+"\nB15:"+str$(SecondGW[4])+"\n":gosub 142:gosub 145
  ->             mr$="id:"+mac$+"\nB12:"+str$(iostate(850+1))+"\nB13:"+str$(iostate(850+2))+"\nB14:"+str$(iostate(850+3))+"\nB15:"+str$(SecondGW[4])+"\n":gosub 142:gosub 145
  - Macro SecondGW[] in pos [132-142] ->             mr$="id:"+mac$+"\nB12:"+str$(iostate(850+1))+"\nB13:"+str$(iostate(850+2))+"\nB14:"+str$(iostate(850+3))+"\nB15:"+str$(SecondGW[4])+"\n":gosub 142:gosub 145
  <-             mr$="id:"+mac$+"\nB12:"+str$(iostate(850+1))+"\nB13:"+str$(iostate(850+2))+"\nB14:"+str$(iostate(850+3))+"\nB15:"+str$(SecondGW[4])+"\n":gosub 142:gosub 145
  ->             mr$="id:"+mac$+"\nB12:"+str$(iostate(850+1))+"\nB13:"+str$(iostate(850+2))+"\nB14:"+str$(iostate(850+3))+"\nB15:"+str$(iostate(850+4))+"\n":gosub 142:gosub 145
  - Macro SecondGW[] in pos [10-20] ->   if and(SecondGW[1] = gw(0), SecondGW[2] = gw(1), SecondGW[3] = gw(2), SecondGW[4] = gw(3)) then '  kehtiv def gw on varuaadress!
  <-   if and(SecondGW[1] = gw(0), SecondGW[2] = gw(1), SecondGW[3] = gw(2), SecondGW[4] = gw(3)) then '  kehtiv def gw on varuaadress!
  ->   if and(iostate(850+1) = gw(0), SecondGW[2] = gw(1), SecondGW[3] = gw(2), SecondGW[4] = gw(3)) then '  kehtiv def gw on varuaadress!
  - Macro SecondGW[] in pos [34-44] ->   if and(iostate(850+1) = gw(0), SecondGW[2] = gw(1), SecondGW[3] = gw(2), SecondGW[4] = gw(3)) then '  kehtiv def gw on varuaadress!
  <-   if and(iostate(850+1) = gw(0), SecondGW[2] = gw(1), SecondGW[3] = gw(2), SecondGW[4] = gw(3)) then '  kehtiv def gw on varuaadress!
  ->   if and(iostate(850+1) = gw(0), iostate(850+2) = gw(1), SecondGW[3] = gw(2), SecondGW[4] = gw(3)) then '  kehtiv def gw on varuaadress!
  - Macro SecondGW[] in pos [58-68] ->   if and(iostate(850+1) = gw(0), iostate(850+2) = gw(1), SecondGW[3] = gw(2), SecondGW[4] = gw(3)) then '  kehtiv def gw on varuaadress!
  <-   if and(iostate(850+1) = gw(0), iostate(850+2) = gw(1), SecondGW[3] = gw(2), SecondGW[4] = gw(3)) then '  kehtiv def gw on varuaadress!
  ->   if and(iostate(850+1) = gw(0), iostate(850+2) = gw(1), iostate(850+3) = gw(2), SecondGW[4] = gw(3)) then '  kehtiv def gw on varuaadress!
  - Macro SecondGW[] in pos [82-92] ->   if and(iostate(850+1) = gw(0), iostate(850+2) = gw(1), iostate(850+3) = gw(2), SecondGW[4] = gw(3)) then '  kehtiv def gw on varuaadress!
  <-   if and(iostate(850+1) = gw(0), iostate(850+2) = gw(1), iostate(850+3) = gw(2), SecondGW[4] = gw(3)) then '  kehtiv def gw on varuaadress!
  ->   if and(iostate(850+1) = gw(0), iostate(850+2) = gw(1), iostate(850+3) = gw(2), iostate(850+4) = gw(3)) then '  kehtiv def gw on varuaadress!
- ReturnCode= --> ioctl 883, 
- ReturnCode --> iostate(883)
- InOldWd[]= --> ioctl 940+,
  - Macro InOldWd[]= in pos [4-16] -> 			InOldWd[mba]=InWd ' vana meelde
  <- 			InOldWd[mba]=InWd ' vana meelde
  -> 			ioctl 940+mba,InWd ' vana meelde
  - Macro InOldWd[]= in pos [2-12] -> 	InOldWd[0]=InWd 'jatame meelde
  <- 	InOldWd[0]=InWd 'jatame meelde
  -> 	ioctl 940+0,InWd 'jatame meelde
- InOldWd[] --> iostate(940+)
  - Macro InOldWd[] in pos [22-33] -> 		ichg(mba)=xor(InWd,InOldWd[mba]) ' mis muutus? mask, kui muutust pole, siis ichg() = 0
  <- 		ichg(mba)=xor(InWd,InOldWd[mba]) ' mis muutus? mask, kui muutust pole, siis ichg() = 0
  -> 		ichg(mba)=xor(InWd,iostate(940+mba)) ' mis muutus? mask, kui muutust pole, siis ichg() = 0
  - Macro InOldWd[] in pos [12-23] -> 		if InWd<>InOldWd[mba] then ' input change. tegelikult peaks kontrollima vaid maskile vastavate bittide muutust...
  <- 		if InWd<>InOldWd[mba] then ' input change. tegelikult peaks kontrollima vaid maskile vastavate bittide muutust...
  -> 		if InWd<>iostate(940+mba) then ' input change. tegelikult peaks kontrollima vaid maskile vastavate bittide muutust...
  - Macro InOldWd[] in pos [20-29] -> 	ichg(0)=xor(InWd, InOldWd[0]) 'mis muutus
  <- 	ichg(0)=xor(InWd, InOldWd[0]) 'mis muutus
  -> 	ichg(0)=xor(InWd, iostate(940+0)) 'mis muutus
  - Macro InOldWd[] in pos [84-93] -> 	syslog "chd_tegu: bn InWd "+sprintf$("%06x",InWd)+", inoldwd[0] "+sprintf$("%06x",InOldWd[0]),5 'ajutine
  <- 	syslog "chd_tegu: bn InWd "+sprintf$("%06x",InWd)+", inoldwd[0] "+sprintf$("%06x",InOldWd[0]),5 'ajutine
  -> 	syslog "chd_tegu: bn InWd "+sprintf$("%06x",InWd)+", inoldwd[0] "+sprintf$("%06x",iostate(940+0)),5 'ajutine
- OutOldWd[]= --> ioctl 950+,
  - Macro OutOldWd[]= in pos [3-16] -> 		OutOldWd[mba]=OutWd ' jatame valjundi meelde
  <- 		OutOldWd[mba]=OutWd ' jatame valjundi meelde
  -> 		ioctl 950+mba,OutWd ' jatame valjundi meelde
- OutOldWd[] --> iostate(950+)
  - Macro OutOldWd[] in pos [17-29] -> 		' if OutWd <> OutOldWd[mba] then ' on toimunud valjundi virt reg muudatus, teeme mb jaoks baidid 
  <- 		' if OutWd <> OutOldWd[mba] then ' on toimunud valjundi virt reg muudatus, teeme mb jaoks baidid 
  -> 		' if OutWd <> iostate(950+mba) then ' on toimunud valjundi virt reg muudatus, teeme mb jaoks baidid 
  - Macro OutOldWd[] in pos [19-31] -> 			ochg=xor(OutWd,OutOldWd[mba]) ' mis muutus? kuid see on muutus jrk sees, mitte modbus registrites!! SEE EI HUVITA!
  <- 			ochg=xor(OutWd,OutOldWd[mba]) ' mis muutus? kuid see on muutus jrk sees, mitte modbus registrites!! SEE EI HUVITA!
  -> 			ochg=xor(OutWd,iostate(950+mba)) ' mis muutus? kuid see on muutus jrk sees, mitte modbus registrites!! SEE EI HUVITA!

Preprocessor: Finish

Tokenization: Start

Tokenization: First pass for labels used in GOTO/GOSUB/RETURN
    Statement Label
        GOSUB 5000
        GOSUB 15000
        GOSUB 9900
        GOSUB 110
        GOSUB 270
        GOSUB 330
        GOSUB 21000
        GOSUB 20100
        GOSUB 275
        GOSUB 142
        GOSUB 145
        GOSUB 110
        GOSUB 22000
        GOSUB 150
        GOSUB 270
        GOSUB 270
        GOSUB 32000
        GOSUB 270
        GOSUB 142
        GOSUB 145
        GOSUB 142
        GOSUB 145
        GOSUB 5950
         GOTO 100
        GOSUB 270
        GOSUB 109
        GOSUB 109
        GOSUB 21010
        GOSUB 21010
        GOSUB 21010
        GOSUB 21020
        GOSUB 21010
        GOSUB 21010
        GOSUB 21010
        GOSUB 21010
        GOSUB 21020
        GOSUB 109
        GOSUB 21020
        GOSUB 21020
        GOSUB 21020
        GOSUB 21010
        GOSUB 21010
        GOSUB 21010
        GOSUB 21010
        GOSUB 21010
        GOSUB 21010
        GOSUB 21010
        GOSUB 21010
        GOSUB 21010
        GOSUB 21010
        GOSUB 21020
        GOSUB 21020
        GOSUB 21010
        GOSUB 21010
        GOSUB 21010
        GOSUB 21010
        GOSUB 21020
        GOSUB 21020
        GOSUB 21010
        GOSUB 21010
        GOSUB 109
        GOSUB 109
        GOSUB 109
        GOSUB 115
        GOSUB 115
        GOSUB 109
        GOSUB 115
        GOSUB 109
        GOSUB 21010
        GOSUB 21010
        GOSUB 270
        GOSUB 109
        GOSUB 109
        GOSUB 109
        GOSUB 13000
        GOSUB 13000
        GOSUB 13000
        GOSUB 13000
        GOSUB 270
        GOSUB 11000
        GOSUB 270
        GOSUB 13000
         GOTO 149
         GOTO 148
         GOTO 148
        GOSUB 109
        GOSUB 109
        GOSUB 109
         GOTO 149
         GOTO 149
         GOTO 149
        GOSUB 270
        GOSUB 270
        GOSUB 1800
        GOSUB 1200
        GOSUB 1150
        GOSUB 1700
        GOSUB 1150
         GOTO 1020
        GOSUB 1600
         GOTO 1020
        GOSUB 1050
        GOSUB 1200
        GOSUB 1150
        GOSUB 1700
        GOSUB 1150
         GOTO 1020
        GOSUB 109
        GOSUB 1250
         GOTO 1705
         GOTO 1702
        GOSUB 1250
        GOSUB 1150
        GOSUB 1200
        GOSUB 1150
        GOSUB 1700
        GOSUB 1150
        GOSUB 1200
        GOSUB 1150
        GOSUB 1700
        GOSUB 1150
        GOSUB 1200
        GOSUB 1150
        GOSUB 1700
        GOSUB 1150
        GOSUB 1200
        GOSUB 1150
        GOSUB 1700
        GOSUB 1150
        GOSUB 5250
        GOSUB 5250
        GOSUB 5250
        GOSUB 5250
        GOSUB 5250
         GOTO 5252
        GOSUB 31000
        GOSUB 11200
         GOTO 11003
        GOSUB 11200
         GOTO 11001
        GOSUB 11100
         GOTO 13001
        GOSUB 142
        GOSUB 145
        GOSUB 270
        GOSUB 270
        GOSUB 21010
        GOSUB 21010
        GOSUB 21010
        GOSUB 21020
        GOSUB 21010
        GOSUB 21020
        GOSUB 21010
        GOSUB 21010
        GOSUB 21020
        GOSUB 21010
        GOSUB 21020
        GOSUB 21020
        GOSUB 21020
        GOSUB 21020
        GOSUB 21020
        GOSUB 21010
        GOSUB 21020
        GOSUB 21010
        GOSUB 21010
        GOSUB 21010
        GOSUB 270
        GOSUB 109
        GOSUB 109
        GOSUB 270
        GOSUB 270
        GOSUB 275
        GOSUB 270
        GOSUB 275
        GOSUB 275
        GOSUB 140
        GOSUB 110
        GOSUB 142
        GOSUB 145
        GOSUB 1000
        GOSUB 10000
        GOSUB 31000
        GOSUB 270
        GOSUB 270
        GOSUB 275
        GOSUB 135
        GOSUB 134
        GOSUB 270
        GOSUB 275
        GOSUB 5200
        GOSUB 270
        GOSUB 275

Tokenization: Second pass for main tokenization
Warning: DIM _TMR_(4) is already fulfiled by tokenizer itself
Warning: this name is used by default without DIM declaration (MONPORT1)
Warning: this name is used by default without DIM declaration (MONPORT2)
Warning: this name is used by default without DIM declaration (MBMAX)
Warning: this name is used by default without DIM declaration (_DTS_)
Label=100,offset=0x7d5
Warning: this name is used by default without DIM declaration (OIN)
Warning: this name is used by default without DIM declaration (COMMFAILFELAY)
Label=109,offset=0xdf3
Warning: this name is used by default without DIM declaration (NFRAG)
Label=110,offset=0xe87
Warning: this name is used by default without DIM declaration (JJ)
Warning: this name is used by default without DIM declaration (MONMODE)
Warning: this name is used by default without DIM declaration (MBAX)
Warning: this name is used by default without DIM declaration (THYST)
Warning: this name is used by default without DIM declaration (THERMOINTERVAL)
Warning: this name is used by default without DIM declaration (CHAN)
Warning: this name is used by default without DIM declaration (AILEVEL)
Warning: this name is used by default without DIM declaration (KH)
Warning: this name is used by default without DIM declaration (KL)
Label=115,offset=0x1e51
Warning: this name is used by default without DIM declaration (UK)
Label=134,offset=0x1eb5
Label=135,offset=0x1ec5
Label=136,offset=0x0
Label=140,offset=0x1eea
Label=142,offset=0x206c
Label=145,offset=0x2573
Warning: this name is used by default without DIM declaration (POS)
Label=147,offset=0x0
Label=148,offset=0x2ad1
Label=149,offset=0x2d6b
Label=150,offset=0x2e35
Warning: this name is used by default without DIM declaration (MONTHNUMBER)
Warning: this name is used by default without DIM declaration (DAYOFMONTH)
Warning: this name is used by default without DIM declaration (HOUROFDAY)
Warning: this name is used by default without DIM declaration (WEEKDAY)
Warning: this name is used by default without DIM declaration (TIMEZONE)
Warning: this name is used by default without DIM declaration (NMIN)
Warning: this name is used by default without DIM declaration (NHOUR)
Warning: this name is used by default without DIM declaration (NWDAY)
Label=270,offset=0x309e
Warning: this name is used by default without DIM declaration (M_ID)
Label=275,offset=0x3195
Label=300,offset=0x0
Label=330,offset=0x32af
Warning: this name is used by default without DIM declaration (TIMERTEMP)
Label=1000,offset=0x33a1
Warning: this name is used by default without DIM declaration (IJRK)
Warning: this name is used by default without DIM declaration (OJRK)
Warning: this name is used by default without DIM declaration (MBA)
Warning: this name is used by default without DIM declaration (MLEN)
Warning: this name is used by default without DIM declaration (EXPLEN)
Warning: this name is used by default without DIM declaration (FBWD)
Warning: this name is used by default without DIM declaration (INHI)
Warning: this name is used by default without DIM declaration (INLO)
Warning: this name is used by default without DIM declaration (INWD)
Warning: this name is used by default without DIM declaration (IHII)
Label=1010,offset=0x0
Warning: this name is used by default without DIM declaration (OUTWD)
Warning: this name is used by default without DIM declaration (ABIOUT)
Warning: this name is used by default without DIM declaration (OCHG)
Warning: this name is used by default without DIM declaration (OUTLO)
Warning: this name is used by default without DIM declaration (OUTHI)
Label=1020,offset=0x3ca8
Label=1022,offset=0x0
Warning: this name is used by default without DIM declaration (OMAX)
Label=1050,offset=0x3e17
Label=1100,offset=0x0
Label=1150,offset=0x3eba
Warning: this name is used by default without DIM declaration (Y)
Label=1200,offset=0x3f28
Warning: this name is used by default without DIM declaration (TMP$)
Warning: this name is used by default without DIM declaration (CRC)
Label=1250,offset=0x3fdf
Warning: this name is used by default without DIM declaration (K)
Label=1600,offset=0x404d
Label=1700,offset=0x408e
Label=1702,offset=0x4090
Label=1705,offset=0x416f
Label=1800,offset=0x4257
Label=5000,offset=0x4c07
Label=5200,offset=0x4c91
Label=5250,offset=0x55a6
Warning: this name is used by default without DIM declaration (TMP)
Label=5252,offset=0x55bb
Label=5950,offset=0x55f3
Warning: this name is used by default without DIM declaration (OMIN)
Label=9900,offset=0x567f
Label=10000,offset=0x5728
Label=11000,offset=0x58f1
Label=11001,offset=0x5939
Label=11003,offset=0x59b6
Label=11100,offset=0x59c1
Warning: this name is used by default without DIM declaration (EXIT)
Label=11200,offset=0x5b3b
Label=13000,offset=0x5bd6
Label=13001,offset=0x5c87
Label=15000,offset=0x5d23
Warning: this name is used by default without DIM declaration (_ERR_)
Warning: this name is used by default without DIM declaration (_ERL_)
Label=20100,offset=0x5e52
Warning: this name is used by default without DIM declaration (NUM)
Label=21000,offset=0x5fd3
Warning: this name is used by default without DIM declaration (JK)
Label=21010,offset=0x6147
Label=21020,offset=0x61d2
Label=22000,offset=0x6260
Label=31000,offset=0x62ce
Warning: this name is used by default without DIM declaration (TMPSTATUS)
Label=32000,offset=0x6e4f
Code tokenized, size=0x7467

Tokenization: Third pass for label offsets used in GOTO/GOSUB/RETURN
    Statement Label --> Offset in tokenized code
        GOSUB 15000 --> 0x5D23 (23843 bytes)
        GOSUB 9900  --> 0x567F (22143 bytes)
        GOSUB 110   --> 0x0E87 ( 3719 bytes)
        GOSUB 270   --> 0x309E (12446 bytes)
        GOSUB 330   --> 0x32AF (12975 bytes)
        GOSUB 21000 --> 0x5FD3 (24531 bytes)
        GOSUB 20100 --> 0x5E52 (24146 bytes)
        GOSUB 275   --> 0x3195 (12693 bytes)
        GOSUB 142   --> 0x206C ( 8300 bytes)
        GOSUB 145   --> 0x2573 ( 9587 bytes)
        GOSUB 110   --> 0x0E87 ( 3719 bytes)
        GOSUB 22000 --> 0x6260 (25184 bytes)
        GOSUB 150   --> 0x2E35 (11829 bytes)
        GOSUB 270   --> 0x309E (12446 bytes)
        GOSUB 270   --> 0x309E (12446 bytes)
        GOSUB 32000 --> 0x6E4F (28239 bytes)
        GOSUB 270   --> 0x309E (12446 bytes)
        GOSUB 142   --> 0x206C ( 8300 bytes)
        GOSUB 145   --> 0x2573 ( 9587 bytes)
        GOSUB 142   --> 0x206C ( 8300 bytes)
        GOSUB 145   --> 0x2573 ( 9587 bytes)
        GOSUB 5950  --> 0x55F3 (22003 bytes)
         GOTO 100   --> 0x07D5 ( 2005 bytes)
        GOSUB 270   --> 0x309E (12446 bytes)
        GOSUB 109   --> 0x0DF3 ( 3571 bytes)
        GOSUB 109   --> 0x0DF3 ( 3571 bytes)
        GOSUB 21010 --> 0x6147 (24903 bytes)
        GOSUB 21010 --> 0x6147 (24903 bytes)
        GOSUB 21010 --> 0x6147 (24903 bytes)
        GOSUB 21020 --> 0x61D2 (25042 bytes)
        GOSUB 21010 --> 0x6147 (24903 bytes)
        GOSUB 21010 --> 0x6147 (24903 bytes)
        GOSUB 21010 --> 0x6147 (24903 bytes)
        GOSUB 21010 --> 0x6147 (24903 bytes)
        GOSUB 21020 --> 0x61D2 (25042 bytes)
        GOSUB 109   --> 0x0DF3 ( 3571 bytes)
        GOSUB 21020 --> 0x61D2 (25042 bytes)
        GOSUB 21020 --> 0x61D2 (25042 bytes)
        GOSUB 21020 --> 0x61D2 (25042 bytes)
        GOSUB 21010 --> 0x6147 (24903 bytes)
        GOSUB 21010 --> 0x6147 (24903 bytes)
        GOSUB 21010 --> 0x6147 (24903 bytes)
        GOSUB 21010 --> 0x6147 (24903 bytes)
        GOSUB 21010 --> 0x6147 (24903 bytes)
        GOSUB 21010 --> 0x6147 (24903 bytes)
        GOSUB 21010 --> 0x6147 (24903 bytes)
        GOSUB 21010 --> 0x6147 (24903 bytes)
        GOSUB 21010 --> 0x6147 (24903 bytes)
        GOSUB 21010 --> 0x6147 (24903 bytes)
        GOSUB 21020 --> 0x61D2 (25042 bytes)
        GOSUB 21020 --> 0x61D2 (25042 bytes)
        GOSUB 21010 --> 0x6147 (24903 bytes)
        GOSUB 21010 --> 0x6147 (24903 bytes)
        GOSUB 21010 --> 0x6147 (24903 bytes)
        GOSUB 21010 --> 0x6147 (24903 bytes)
        GOSUB 21020 --> 0x61D2 (25042 bytes)
        GOSUB 21020 --> 0x61D2 (25042 bytes)
        GOSUB 21010 --> 0x6147 (24903 bytes)
        GOSUB 21010 --> 0x6147 (24903 bytes)
        GOSUB 109   --> 0x0DF3 ( 3571 bytes)
        GOSUB 109   --> 0x0DF3 ( 3571 bytes)
        GOSUB 109   --> 0x0DF3 ( 3571 bytes)
        GOSUB 115   --> 0x1E51 ( 7761 bytes)
        GOSUB 115   --> 0x1E51 ( 7761 bytes)
        GOSUB 109   --> 0x0DF3 ( 3571 bytes)
        GOSUB 115   --> 0x1E51 ( 7761 bytes)
        GOSUB 109   --> 0x0DF3 ( 3571 bytes)
        GOSUB 21010 --> 0x6147 (24903 bytes)
        GOSUB 21010 --> 0x6147 (24903 bytes)
        GOSUB 270   --> 0x309E (12446 bytes)
        GOSUB 109   --> 0x0DF3 ( 3571 bytes)
        GOSUB 109   --> 0x0DF3 ( 3571 bytes)
        GOSUB 109   --> 0x0DF3 ( 3571 bytes)
        GOSUB 13000 --> 0x5BD6 (23510 bytes)
        GOSUB 13000 --> 0x5BD6 (23510 bytes)
        GOSUB 13000 --> 0x5BD6 (23510 bytes)
        GOSUB 13000 --> 0x5BD6 (23510 bytes)
        GOSUB 270   --> 0x309E (12446 bytes)
        GOSUB 11000 --> 0x58F1 (22769 bytes)
        GOSUB 270   --> 0x309E (12446 bytes)
        GOSUB 13000 --> 0x5BD6 (23510 bytes)
         GOTO 149   --> 0x2D6B (11627 bytes)
         GOTO 148   --> 0x2AD1 (10961 bytes)
         GOTO 148   --> 0x2AD1 (10961 bytes)
        GOSUB 109   --> 0x0DF3 ( 3571 bytes)
        GOSUB 109   --> 0x0DF3 ( 3571 bytes)
        GOSUB 109   --> 0x0DF3 ( 3571 bytes)
         GOTO 149   --> 0x2D6B (11627 bytes)
         GOTO 149   --> 0x2D6B (11627 bytes)
         GOTO 149   --> 0x2D6B (11627 bytes)
        GOSUB 270   --> 0x309E (12446 bytes)
        GOSUB 270   --> 0x309E (12446 bytes)
        GOSUB 1800  --> 0x4257 (16983 bytes)
        GOSUB 1200  --> 0x3F28 (16168 bytes)
        GOSUB 1150  --> 0x3EBA (16058 bytes)
        GOSUB 1700  --> 0x408E (16526 bytes)
        GOSUB 1150  --> 0x3EBA (16058 bytes)
         GOTO 1020  --> 0x3CA8 (15528 bytes)
        GOSUB 1600  --> 0x404D (16461 bytes)
         GOTO 1020  --> 0x3CA8 (15528 bytes)
        GOSUB 1050  --> 0x3E17 (15895 bytes)
        GOSUB 1200  --> 0x3F28 (16168 bytes)
        GOSUB 1150  --> 0x3EBA (16058 bytes)
        GOSUB 1700  --> 0x408E (16526 bytes)
        GOSUB 1150  --> 0x3EBA (16058 bytes)
         GOTO 1020  --> 0x3CA8 (15528 bytes)
        GOSUB 109   --> 0x0DF3 ( 3571 bytes)
        GOSUB 1250  --> 0x3FDF (16351 bytes)
         GOTO 1705  --> 0x416F (16751 bytes)
         GOTO 1702  --> 0x4090 (16528 bytes)
        GOSUB 1250  --> 0x3FDF (16351 bytes)
        GOSUB 1150  --> 0x3EBA (16058 bytes)
        GOSUB 1200  --> 0x3F28 (16168 bytes)
        GOSUB 1150  --> 0x3EBA (16058 bytes)
        GOSUB 1700  --> 0x408E (16526 bytes)
        GOSUB 1150  --> 0x3EBA (16058 bytes)
        GOSUB 1200  --> 0x3F28 (16168 bytes)
        GOSUB 1150  --> 0x3EBA (16058 bytes)
        GOSUB 1700  --> 0x408E (16526 bytes)
        GOSUB 1150  --> 0x3EBA (16058 bytes)
        GOSUB 1200  --> 0x3F28 (16168 bytes)
        GOSUB 1150  --> 0x3EBA (16058 bytes)
        GOSUB 1700  --> 0x408E (16526 bytes)
        GOSUB 1150  --> 0x3EBA (16058 bytes)
        GOSUB 1200  --> 0x3F28 (16168 bytes)
        GOSUB 1150  --> 0x3EBA (16058 bytes)
        GOSUB 1700  --> 0x408E (16526 bytes)
        GOSUB 1150  --> 0x3EBA (16058 bytes)
        GOSUB 5250  --> 0x55A6 (21926 bytes)
        GOSUB 5250  --> 0x55A6 (21926 bytes)
        GOSUB 5250  --> 0x55A6 (21926 bytes)
        GOSUB 5250  --> 0x55A6 (21926 bytes)
        GOSUB 5250  --> 0x55A6 (21926 bytes)
         GOTO 5252  --> 0x55BB (21947 bytes)
        GOSUB 31000 --> 0x62CE (25294 bytes)
        GOSUB 11200 --> 0x5B3B (23355 bytes)
         GOTO 11003 --> 0x59B6 (22966 bytes)
        GOSUB 11200 --> 0x5B3B (23355 bytes)
         GOTO 11001 --> 0x5939 (22841 bytes)
        GOSUB 11100 --> 0x59C1 (22977 bytes)
         GOTO 13001 --> 0x5C87 (23687 bytes)
        GOSUB 142   --> 0x206C ( 8300 bytes)
        GOSUB 145   --> 0x2573 ( 9587 bytes)
        GOSUB 270   --> 0x309E (12446 bytes)
        GOSUB 270   --> 0x309E (12446 bytes)
        GOSUB 21010 --> 0x6147 (24903 bytes)
        GOSUB 21010 --> 0x6147 (24903 bytes)
        GOSUB 21010 --> 0x6147 (24903 bytes)
        GOSUB 21020 --> 0x61D2 (25042 bytes)
        GOSUB 21010 --> 0x6147 (24903 bytes)
        GOSUB 21020 --> 0x61D2 (25042 bytes)
        GOSUB 21010 --> 0x6147 (24903 bytes)
        GOSUB 21010 --> 0x6147 (24903 bytes)
        GOSUB 21020 --> 0x61D2 (25042 bytes)
        GOSUB 21010 --> 0x6147 (24903 bytes)
        GOSUB 21020 --> 0x61D2 (25042 bytes)
        GOSUB 21020 --> 0x61D2 (25042 bytes)
        GOSUB 21020 --> 0x61D2 (25042 bytes)
        GOSUB 21020 --> 0x61D2 (25042 bytes)
        GOSUB 21020 --> 0x61D2 (25042 bytes)
        GOSUB 21010 --> 0x6147 (24903 bytes)
        GOSUB 21020 --> 0x61D2 (25042 bytes)
        GOSUB 21010 --> 0x6147 (24903 bytes)
        GOSUB 21010 --> 0x6147 (24903 bytes)
        GOSUB 21010 --> 0x6147 (24903 bytes)
        GOSUB 270   --> 0x309E (12446 bytes)
        GOSUB 109   --> 0x0DF3 ( 3571 bytes)
        GOSUB 109   --> 0x0DF3 ( 3571 bytes)
        GOSUB 270   --> 0x309E (12446 bytes)
        GOSUB 270   --> 0x309E (12446 bytes)
        GOSUB 275   --> 0x3195 (12693 bytes)
        GOSUB 270   --> 0x309E (12446 bytes)
        GOSUB 275   --> 0x3195 (12693 bytes)
        GOSUB 275   --> 0x3195 (12693 bytes)
        GOSUB 140   --> 0x1EEA ( 7914 bytes)
        GOSUB 110   --> 0x0E87 ( 3719 bytes)
        GOSUB 142   --> 0x206C ( 8300 bytes)
        GOSUB 145   --> 0x2573 ( 9587 bytes)
        GOSUB 1000  --> 0x33A1 (13217 bytes)
        GOSUB 10000 --> 0x5728 (22312 bytes)
        GOSUB 31000 --> 0x62CE (25294 bytes)
        GOSUB 270   --> 0x309E (12446 bytes)
        GOSUB 270   --> 0x309E (12446 bytes)
        GOSUB 275   --> 0x3195 (12693 bytes)
        GOSUB 135   --> 0x1EC5 ( 7877 bytes)
        GOSUB 134   --> 0x1EB5 ( 7861 bytes)
        GOSUB 270   --> 0x309E (12446 bytes)
        GOSUB 275   --> 0x3195 (12693 bytes)
        GOSUB 5200  --> 0x4C91 (19601 bytes)
        GOSUB 270   --> 0x309E (12446 bytes)
        GOSUB 275   --> 0x3195 (12693 bytes)
        GOSUB 5000  --> 0x4C07 (19463 bytes) : FUNCTION BIT2B()

Tokenization: Fourth pass for checking multiline IF...ENDIF

Tokenization: Fifth pass for compiling 
Updating jump offsets in IF...THEN...ELSE...ENDIF

Tokenization: Finish

Memory allocation after tokenization 29799:, 004D96AB 004D2244,start=004D0020

Memory allocation after tokenization:

Table of already allocated long variables or arrays:
----------------------------------------------------------------
 N (Row_M,Col_M)  Size Offset in data area DIM Source name
----------------------------------------------------------------
 1 (    4,    0)    20 0x0000 (    0 bytes)  + _TMR_
 2 (    0,    0)     4 0x010C (  268 bytes)  + UKU
 3 (    0,    0)     4 0x0110 (  272 bytes)  + UKK
 4 (    0,    0)     4 0x0114 (  276 bytes)  + I
 5 (    0,    0)     4 0x0118 (  280 bytes)  + KI
 6 (    0,    0)     4 0x011C (  284 bytes)  + J
 7 (    0,    0)     4 0x0120 (  288 bytes)  + N
 8 (    0,    0)     4 0x0124 (  292 bytes)  + RK
 9 (   15,    0)    64 0x035A (  858 bytes)  + UP
10 (    9,    0)    40 0x039A (  922 bytes)  + TS
11 (    4,    0)    20 0x0894 ( 2196 bytes)  + TRAFFIC
12 (    7,    0)    32 0x0DD9 ( 3545 bytes)  + DEL
13 (   50,    0)   204 0x0E23 ( 3619 bytes)  + CHN
14 (   50,    0)   204 0x0EEF ( 3823 bytes)  + CHD
15 (    4,    0)    20 0x0FBB ( 4027 bytes)  + MBSTA
16 (    4,    0)    20 0x0FCF ( 4047 bytes)  + MBTS
17 (    4,    0)    20 0x110F ( 4367 bytes)  + IMASK
18 (    4,    0)    20 0x1123 ( 4387 bytes)  + ICHG
19 (    2,    0)    12 0x1137 ( 4407 bytes)  + OMASK
20 (    2,    0)    12 0x1143 ( 4419 bytes)  + ESER1
21 (    2,    0)    12 0x114F ( 4431 bytes)  + ESER2
22 (    2,    0)    12 0x115B ( 4443 bytes)  + ICNT
23 (    2,    0)    12 0x1167 ( 4455 bytes)  + OCNT
24 (    2,    0)    12 0x1173 ( 4467 bytes)  + PREF
25 (    2,    0)    12 0x117F ( 4479 bytes)  + SUFF
26 (   10,    0)    44 0x118B ( 4491 bytes)  + MB
27 (    8,    0)    36 0x11B7 ( 4535 bytes)  + ADATA
28 (    8,    0)    36 0x11DB ( 4571 bytes)  + TMASK
29 (    4,    0)    20 0x11FF ( 4607 bytes)  + MBCHFROM
30 (    4,    0)    20 0x1213 ( 4627 bytes)  + EXTENSIONTYPE
31 (    3,    0)    16 0x1227 ( 4647 bytes)  + TSET
32 (    3,    0)    16 0x1237 ( 4663 bytes)  + TACTUAL
33 (    2,    0)    12 0x1247 ( 4679 bytes)  + TVIRT1
34 (    2,    0)    12 0x1253 ( 4691 bytes)  + TVIRT2
35 (    3,    0)    16 0x125F ( 4703 bytes)  + VIRTMEM
36 (    3,    0)    16 0x126F ( 4719 bytes)  + TERROR
37 (    3,    0)    16 0x127F ( 4735 bytes)  + TACTUAL_LAST
38 (    3,    0)    16 0x128F ( 4751 bytes)  + TMAX
39 (    5,    0)    24 0x129F ( 4767 bytes)  + TSENSNO
40 (    3,    0)    16 0x12B7 ( 4791 bytes)  + TSETNORM
41 (    3,    0)    16 0x12C7 ( 4807 bytes)  + ZONEHI
42 (    3,    0)    16 0x12D7 ( 4823 bytes)  + ZONEHITS
43 (    3,    0)    16 0x12E7 ( 4839 bytes)  + COOLING
44 (    0,    0)     4 0x12F7 ( 4855 bytes)  + ZONE
45 (    0,    0)     4 0x12FB ( 4859 bytes)  + TSETADD
46 (    0,    0)     4 0x12FF ( 4863 bytes)  + TSETHILEN
47 (    3,    0)    16 0x1333 ( 4915 bytes)  + THRE
48 (    3,    0)    16 0x1343 ( 4931 bytes)  + GW
49 (    0,    0)     4 0x1353 ( 4947 bytes)  * BIT2B
50 (    0,    0)     4 0x1357 ( 4951 bytes)  - MONPORT1
51 (    0,    0)     4 0x135B ( 4955 bytes)  - MONPORT2
52 (    0,    0)     4 0x135F ( 4959 bytes)  - MBMAX
53 (    0,    0)     4 0x1363 ( 4963 bytes)  - _DTS_
54 (    0,    0)     4 0x1367 ( 4967 bytes)  - OIN
55 (    0,    0)     4 0x136B ( 4971 bytes)  - COMMFAILFELAY
56 (    0,    0)     4 0x136F ( 4975 bytes)  - NFRAG
57 (    0,    0)     4 0x1373 ( 4979 bytes)  - JJ
58 (    0,    0)     4 0x1377 ( 4983 bytes)  - MONMODE
59 (    0,    0)     4 0x137B ( 4987 bytes)  - MBAX
60 (    0,    0)     4 0x137F ( 4991 bytes)  - THYST
61 (    0,    0)     4 0x1383 ( 4995 bytes)  - THERMOINTERVAL
62 (    0,    0)     4 0x1387 ( 4999 bytes)  - CHAN
63 (    0,    0)     4 0x138B ( 5003 bytes)  - AILEVEL
64 (    0,    0)     4 0x138F ( 5007 bytes)  - KH
65 (    0,    0)     4 0x1393 ( 5011 bytes)  - KL
66 (    0,    0)     4 0x1397 ( 5015 bytes)  - UK
67 (    0,    0)     4 0x139B ( 5019 bytes)  - POS
68 (    0,    0)     4 0x139F ( 5023 bytes)  - MONTHNUMBER
69 (    0,    0)     4 0x13A3 ( 5027 bytes)  - DAYOFMONTH
70 (    0,    0)     4 0x13A7 ( 5031 bytes)  - HOUROFDAY
71 (    0,    0)     4 0x13AB ( 5035 bytes)  - WEEKDAY
72 (    0,    0)     4 0x13AF ( 5039 bytes)  - TIMEZONE
73 (    0,    0)     4 0x13B3 ( 5043 bytes)  - NMIN
74 (    0,    0)     4 0x13B7 ( 5047 bytes)  - NHOUR
75 (    0,    0)     4 0x13BB ( 5051 bytes)  - NWDAY
76 (    0,    0)     4 0x13BF ( 5055 bytes)  - M_ID
77 (    0,    0)     4 0x13C3 ( 5059 bytes)  - TIMERTEMP
78 (    0,    0)     4 0x13C7 ( 5063 bytes)  - IJRK
79 (    0,    0)     4 0x13CB ( 5067 bytes)  - OJRK
80 (    0,    0)     4 0x13CF ( 5071 bytes)  - MBA
81 (    0,    0)     4 0x13D3 ( 5075 bytes)  - MLEN
82 (    0,    0)     4 0x13D7 ( 5079 bytes)  - EXPLEN
83 (    0,    0)     4 0x13DB ( 5083 bytes)  - FBWD
84 (    0,    0)     4 0x13DF ( 5087 bytes)  - INHI
85 (    0,    0)     4 0x13E3 ( 5091 bytes)  - INLO
86 (    0,    0)     4 0x13E7 ( 5095 bytes)  - INWD
87 (    0,    0)     4 0x13EB ( 5099 bytes)  - IHII
88 (    0,    0)     4 0x13EF ( 5103 bytes)  - OUTWD
89 (    0,    0)     4 0x13F3 ( 5107 bytes)  - ABIOUT
90 (    0,    0)     4 0x13F7 ( 5111 bytes)  - OCHG
91 (    0,    0)     4 0x13FB ( 5115 bytes)  - OUTLO
92 (    0,    0)     4 0x13FF ( 5119 bytes)  - OUTHI
93 (    0,    0)     4 0x1403 ( 5123 bytes)  - OMAX
94 (    0,    0)     4 0x1407 ( 5127 bytes)  - Y
95 (    0,    0)     4 0x150B ( 5387 bytes)  - CRC
96 (    0,    0)     4 0x150F ( 5391 bytes)  - K
97 (    0,    0)     4 0xFFFF (   -1 bytes)  + NV11
98 (    0,    0)     4 0xFFFB (   -5 bytes)  + NV12
99 (    0,    0)     4 0xFFF7 (   -9 bytes)  + NV13
100 (    0,    0)     4 0xFFF3 (  -13 bytes)  + NV14
101 (    0,    0)     4 0xFFEF (  -17 bytes)  + NV15
102 (    0,    0)     4 0x1513 ( 5395 bytes)  - TMP
103 (    0,    0)     4 0x1517 ( 5399 bytes)  - OMIN
104 (    0,    0)     4 0x151B ( 5403 bytes)  - EXIT
105 (    0,    0)     4 0x151F ( 5407 bytes)  - _ERR_
106 (    0,    0)     4 0x1523 ( 5411 bytes)  - _ERL_
107 (    0,    0)     4 0x1527 ( 5415 bytes)  - NUM
108 (    0,    0)     4 0x152B ( 5419 bytes)  - JK
109 (    0,    0)     4 0x152F ( 5423 bytes)  - TMPSTATUS

Number of Integer Variables:109

Table of already allocated string variables:
----------------------------------------------------------------
 N Size Offset in data area DIM Source name
----------------------------------------------------------------
 1   30 0x0014 (   20 bytes)  + APVER$
 2   20 0x0032 (   50 bytes)  + _CGI_$
 3   25 0x0046 (   70 bytes)  + WEB$
 4   20 0x005F (   95 bytes)  + AK$
 5   61 0x0073 (  115 bytes)  + LIST$
 6   12 0x00B0 (  176 bytes)  + LISTP$
 7   20 0x00BC (  188 bytes)  + REG$
 8   10 0x00D0 (  208 bytes)  + MREG$
 9   50 0x00DA (  218 bytes)  + MVAL$
10  256 0x0128 (  296 bytes)  + SET$
11  256 0x0228 (  552 bytes)  + STP$
12   15 0x0328 (  808 bytes)  + MAC$
13   35 0x0337 (  823 bytes)  + COM$
14    2 0x03C2 (  962 bytes)  + OMST$
15    2 0x03C4 (  964 bytes)  + MST$
16    2 0x03C6 (  966 bytes)  + MCHG$
17   60 0x03C8 (  968 bytes)  + MSD$
18   60 0x0404 ( 1028 bytes)  + OMSD$
19 1024 0x0440 ( 1088 bytes)  + TXT$
20   30 0x0840 ( 2112 bytes)  + SUB$
21   30 0x085E ( 2142 bytes)  + HEX$
22   24 0x087C ( 2172 bytes)  + SITE$
23  100 0x08A8 ( 2216 bytes)  + USS$
24  100 0x090C ( 2316 bytes)  + SR$
25   50 0x0970 ( 2416 bytes)  + SER$
26  256 0x09A2 ( 2466 bytes)  + MR$
27  300 0x0AA2 ( 2722 bytes)  + MS1$
28  350 0x0BCE ( 3022 bytes)  + MS2$
29   53 0x0D2C ( 3372 bytes)  + SVREG$
30   10 0x0D61 ( 3425 bytes)  + MATS$
31   20 0x0D6B ( 3435 bytes)  + IP$
32   20 0x0D7F ( 3455 bytes)  + MIP1$
33   20 0x0D93 ( 3475 bytes)  + MIP2$
34   10 0x0DA7 ( 3495 bytes)  + MTEE$
35   10 0x0DB1 ( 3505 bytes)  + TEHA$
36   10 0x0DBB ( 3515 bytes)  + EVNT$
37   20 0x0DC5 ( 3525 bytes)  + KORR$
38   11 0x0DF9 ( 3577 bytes)  + USER$
39   31 0x0E04 ( 3588 bytes)  + USPA$
40  100 0x0FE3 ( 4067 bytes)  + MBS$
41  200 0x1047 ( 4167 bytes)  + MBSL$
42   12 0x1303 ( 4867 bytes)  + ZONE1NAME$
43   12 0x130F ( 4879 bytes)  + ZONE2NAME$
44   12 0x131B ( 4891 bytes)  + ZONE3NAME$
45   12 0x1327 ( 4903 bytes)  + ZONE4NAME$
46  256 0x140B ( 5131 bytes)  - TMP$

Number of String Variables:46

Warning: temporary string size was increased up to 1024 bytes!

Final memory allocation map (area sizes) during run-time for target barionet100:
- Data area for allocated variables: 0x1533 ( 5427 bytes)
- Data area for temporary variables: 0x4D18 (19736 bytes)
- Tables and tokenized code area   : 0x7DB5 (32181 bytes)
Program start offet=0x5bc
